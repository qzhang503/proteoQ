% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-utils.R
\name{contain_str}
\alias{contain_str}
\alias{contain_chars_in}
\alias{not_contain_str}
\alias{not_contain_chars_in}
\alias{start_with_str}
\alias{end_with_str}
\alias{start_with_chars_in}
\alias{ends_with_chars_in}
\title{Row filtration helpers}
\usage{
contain_str(match, vars, ignore.case = FALSE)

contain_chars_in(match, vars, ignore.case = FALSE)

not_contain_str(match, vars, ignore.case = FALSE)

not_contain_chars_in(match, vars, ignore.case = FALSE)

start_with_str(match, vars, ignore.case = FALSE)

end_with_str(match, vars, ignore.case = FALSE)

start_with_chars_in(match, vars, ignore.case = FALSE)

ends_with_chars_in(match, vars, ignore.case = FALSE)
}
\arguments{
\item{match}{A character string containing the pattern for matching.}

\item{vars}{A character string of the name of a variable. The default is
FALSE.}

\item{ignore.case}{Logical; if TRUE, ignores case when matching.}
}
\description{
\code{contain_str}: contain a literal string; "PEPTIDES" contain_str "TIDE".

\code{contain_chars_in}: contain some of the characters in a literal string;
"PEPTIDES" contain_chars_in "XP".

\code{not_contain_str}" not contain a literal string; "PEPTIDES"
not_contain_str "TED".

\code{not_contain_chars_in}: not contain any of the characters in a literal
string; "PEPTIDES" not_contain_chars_in  "CAB".

\code{start_with_str}: start with a literal string. "PEPTIDES" start_with_str
"PEP".

\code{end_with_str}: end with a literal string. "PEPTIDES" end_with_str
"TIDES".

\code{start_with_chars_in}: start with one of the characters in a literal
string. "PEPTIDES" start_with_chars_in "XP".

\code{ends_with_chars_in}: end with one of the characters in a literal
string. "PEPTIDES" ends_with_chars_in "XS".
}
\examples{
\dontrun{
pepHist(
  col_select = BI,
  scale_log2r = TRUE,
  filter_peps = exprs(contain_chars_in("sty", pep_seq_mod)),
  scale_y = FALSE,
  ncol = 4,
  filename = "BI_pSTY_scaley_no.png",
)

}
}
