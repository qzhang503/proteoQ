% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lda.R
\name{pepLDA}
\alias{pepLDA}
\alias{prnLDA}
\title{LDA plots}
\usage{
pepLDA(
  col_select = NULL,
  col_group = NULL,
  col_color = NULL,
  col_fill = NULL,
  col_shape = NULL,
  col_size = NULL,
  col_alpha = NULL,
  color_brewer = NULL,
  fill_brewer = NULL,
  size_manual = NULL,
  shape_manual = NULL,
  alpha_manual = NULL,
  choice = c("lda"),
  scale_log2r = TRUE,
  complete_cases = FALSE,
  impute_na = FALSE,
  center_features = TRUE,
  scale_features = TRUE,
  show_ids = TRUE,
  show_ellipses = FALSE,
  type = c("obs", "feats"),
  method = c("moment", "mle", "mve"),
  dimension = 2,
  folds = 1,
  df = NULL,
  filepath = NULL,
  filename = NULL,
  theme = NULL,
  formula = NULL,
  data = NULL,
  x = NULL,
  grouping = NULL,
  prior = NULL,
  subset = NULL,
  CV = NULL,
  na.action = NULL,
  nu = NULL,
  ...
)

prnLDA(
  col_select = NULL,
  col_group = NULL,
  col_color = NULL,
  col_fill = NULL,
  col_shape = NULL,
  col_size = NULL,
  col_alpha = NULL,
  color_brewer = NULL,
  fill_brewer = NULL,
  size_manual = NULL,
  shape_manual = NULL,
  alpha_manual = NULL,
  choice = c("lda"),
  scale_log2r = TRUE,
  complete_cases = FALSE,
  impute_na = FALSE,
  center_features = TRUE,
  scale_features = TRUE,
  show_ids = TRUE,
  show_ellipses = FALSE,
  type = c("obs", "feats"),
  method = c("moment", "mle", "mve"),
  dimension = 2,
  folds = 1,
  df = NULL,
  filepath = NULL,
  filename = NULL,
  theme = NULL,
  formula = NULL,
  data = NULL,
  x = NULL,
  grouping = NULL,
  prior = NULL,
  subset = NULL,
  CV = NULL,
  na.action = NULL,
  nu = NULL,
  ...
)
}
\arguments{
\item{col_select}{Character string to a column key in \code{expt_smry.xlsx}.
At the \code{NULL} default, the column key of \code{Select} in
\code{expt_smry.xlsx} will be used. In the case of no samples being
specified under \code{Select}, the column key of \code{Sample_ID} will be
used. The non-empty entries under the ascribing column will be used in
indicated analysis.}

\item{col_group}{Character string to a column key in \code{expt_smry.xlsx}.
Samples corresponding to non-empty entries under \code{col_group} will be
used for sample grouping in the indicated analysis. At the NULL default, the
column key \code{Group} will be used. No data annotation by groups will be
performed if the fields under the indicated group column is empty.}

\item{col_color}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{color} aesthetics in plots. At
the NULL default, the column key \code{Color} will be used.}

\item{col_fill}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{fill} aesthetics in plots. At
the NULL default, the column key \code{Fill} will be used.}

\item{col_shape}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{shape} aesthetics in plots. At
the NULL default, the column key \code{Shape} will be used.}

\item{col_size}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{size} aesthetics in plots. At
the NULL default, the column key \code{Size} will be used.}

\item{col_alpha}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{alpha} (transparency)
aesthetics in plots. At the NULL default, the column key \code{Alpha} will
be used.}

\item{color_brewer}{Character string to the name of a color brewer for use in
\href{https://ggplot2.tidyverse.org/reference/scale_brewer.html}{ggplot2::scale_color_brewer},
 i.e., \code{color_brewer = Set1}. At the NULL default, the setting in
\code{ggplot2} will be used.}

\item{fill_brewer}{Character string to the name of a color brewer for use in
\href{https://ggplot2.tidyverse.org/reference/scale_brewer.html}{ggplot2::scale_fill_brewer},
 i.e., \code{fill_brewer = Spectral}. At the NULL default, the setting in
\code{ggplot2} will be used.}

\item{size_manual}{Numeric vector to the scale of sizes for use in
\href{https://ggplot2.tidyverse.org/reference/scale_manual.html}{ggplot2::scale_size_manual},
 i.e., \code{size_manual = c(8, 12)}. At the NULL default, the setting in
\code{ggplot2} will be used.}

\item{shape_manual}{Numeric vector to the scale of shape IDs for use in
\href{https://ggplot2.tidyverse.org/reference/scale_manual.html}{ggplot2::scale_shape_manual},
 i.e., \code{shape_manual = c(5, 15)}. At the NULL default, the setting in
\code{ggplot2} will be used.}

\item{alpha_manual}{Numeric vector to the scale of transparency of objects for
use in
\href{https://ggplot2.tidyverse.org/reference/scale_manual.html}{ggplot2::scale_alpha_manual}
 , i.e., \code{alpha_manual = c(.5, .9)}. At the NULL default, the setting
in \code{ggplot2} will be used.}

\item{choice}{Character string; the LDA method in one of \code{c("lda")}. The
default is "lda".}

\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation across all samples. The default is TRUE.}

\item{complete_cases}{Logical; if TRUE, only cases that are complete with no
missing values will be used. The default is FALSE.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used. The default is FALSE.}

\item{center_features}{Logical; if TRUE, adjusts log2FC to center zero by
features (proteins or peptides). The default is TRUE. Note the difference to
data alignment with \code{method_align} in \code{\link{standPrn}}
or \code{\link{standPep}} where log2FC are aligned by observations
(samples).}

\item{scale_features}{Logical; if TRUE, adjusts log2FC to the same scale of
variance by features (protein or peptide entries). The default is TRUE. Note
the difference to data scaling with \code{scale_log2r} where log2FC are
scaled by observations (samples).}

\item{show_ids}{Logical; if TRUE, shows the sample IDs in \code{MDS/PCA}
plots. The default is TRUE.}

\item{show_ellipses}{Logical; if TRUE, shows the ellipses by sample groups
according to \code{col_group}. The default is FALSE.}

\item{type}{Character string indicating the type of PCA by either
\emph{observations} or \emph{features}. At the \code{type = obs} default,
observations (samples) are in rows and features (peptides or proteins) in
columns for \code{\link[stats]{prcomp}}. The principal components are then
plotted by observations. Alternatively at \code{type = feats}, features
(peptides or proteins) are in rows and observations (samples) are in
columns. The principal components are then plotted by features.}

\item{method}{Dummy argument to avoid incurring the corresponding argument in
\link[stats]{dist} by partial argument matches.}

\item{dimension}{Numeric; The desired dimension for pairwise visualization.
The default is 2.}

\item{folds}{Not currently used. Integer; the degree of folding data into
subsets. The default is one without data folding.}

\item{df}{The name of a primary data file. By default, it will be determined
automatically after matching the types of data and analysis with an
\code{id} among \code{c("pep_seq", "pep_seq_mod", "prot_acc", "gene")}. A
primary file contains normalized peptide or protein data and is among
\code{c("Peptide.txt", "Peptide_pVal.txt", "Peptide_impNA_pVal.txt",
"Protein.txt", "Protein_pVal.txt", "protein_impNA_pVal.txt")}. For analyses
require the fields of significance p-values, the \code{df} will be one of
\code{c("Peptide_pVal.txt", "Peptide_impNA_pVal.txt", "Protein_pVal.txt",
"protein_impNA_pVal.txt")}.}

\item{filepath}{A file path to output results. By default, it will be
determined automatically by the name of the calling function and the value
of \code{id} in the \code{call}.}

\item{filename}{A representative file name to outputs. By default, the name(s)
will be determined automatically. For text files, a typical file extension
is \code{.txt}. For image files, they are typically saved via
\code{\link[ggplot2]{ggsave}} or \code{\link[pheatmap]{pheatmap}} where the
image type will be determined by the extension of the file name.}

\item{theme}{A
\href{https://ggplot2.tidyverse.org/reference/ggtheme.html}{ggplot2}
theme, i.e., theme_bw(), or a custom theme. At the NULL default, a system
theme will be applied.}

\item{formula}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{data}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{x}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{grouping}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{prior}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{subset}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{CV}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{na.action}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{nu}{Dummy argument to avoid incurring the corresponding argument in
a pre-existed function by partial argument matches.}

\item{...}{\code{filter_}: Variable argument statements for the row filtration
against data in a primary file linked to \code{df}. See also
\code{\link{normPSM}} for the format of \code{filter_} statements. \cr \cr
\code{arrange_}: Variable argument statements for the row ordering against
data in a primary file linked to \code{df}. See also \code{\link{prnHM}} for
the format of \code{arrange_} statements. \cr \cr Additional parameters for
\code{ggsave}: \cr \code{width}, the width of plot; \cr \code{height}, the
height of plot \cr \code{...}}
}
\value{
LDA plots.
}
\description{
\code{pepLDA} visualizes the linear discriminant analysis (LDA) of peptide \code{log2FC}.

\code{prnLDA} visualizes the linear discriminant analysis (LDA) of protein
\code{log2FC}.
}
\details{
The utility is a wrapper of \code{\link[MASS]{lda}}.
}
\examples{
\donttest{
# ===================================
# LDA
# ===================================

## !!!require the brief working example in `?load_expts`

## global option
scale_log2r <- TRUE

# peptides, all samples
# (implicit `col_group = Group`)
pepLDA(
  col_select = Select, 
  filter_peps_by = exprs(pep_n_psm >= 3),
  show_ids = FALSE, 
  filename = "peps_rowfil.png",
)

# peptides, samples under column `BI`
pepLDA(
  col_select = BI, 
  col_shape = Shape,   
  col_color = Alpha, 
  filter_peps_by = exprs(pep_n_psm >= 10),
  show_ids = FALSE, 
  filename = "peps_rowfil_colsel.png",
)

# proteins
prnLDA(
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filename = "prns_rowfil.png",
)

# subset by mean deviation values
# deviations to means may not be symmetric;
prnLDA(
  col_select = Select, 
  filter_peps_by = exprs(prot_mean_z >= -.25, prot_mean_z <= .3),
  show_ids = FALSE, 
  filename = "subset_by_mean_dev.png",
)

# proteins, custom palette
prnLDA(
  col_shape = Shape,
  color_brewer = Set1,
  show_ids = FALSE,
  filename = "my_palette.png",
)

## additional row filtration by pVals (proteins, impute_na = FALSE)
# if not yet, run prerequisitive significance tests at `impute_na = FALSE`
pepSig(
  impute_na = FALSE, 
  W2_bat = ~ Term["(W2.BI.TMT2-W2.BI.TMT1)", 
                  "(W2.JHU.TMT2-W2.JHU.TMT1)", 
                  "(W2.PNNL.TMT2-W2.PNNL.TMT1)"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = FALSE)

# (`W16_vs_W2.pVal (W16-W2)` now a column key)
prnLDA(
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = pvalcutoff.png, 
)

# analogous peptides
prnLDA(
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = pvalcutoff.png, 
)

## additional row filtration by pVals (proteins, impute_na = TRUE)
# if not yet, run prerequisitive NA imputation
pepImp(m = 2, maxit = 2)
prnImp(m = 5, maxit = 5)

# if not yet, run prerequisitive significance tests at `impute_na = TRUE`
pepSig(
  impute_na = TRUE, 
  W2_bat = ~ Term["(W2.BI.TMT2-W2.BI.TMT1)", 
                  "(W2.JHU.TMT2-W2.JHU.TMT1)", 
                  "(W2.PNNL.TMT2-W2.PNNL.TMT1)"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = TRUE)

prnLDA(
  impute_na = TRUE,
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = filpvals_impna.png, 
)

# analogous peptides
pepLDA(
  impute_na = TRUE,
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = filpvals_impna.png,
)

## a higher dimension
pepLDA(
  show_ids = FALSE,
  dimension = 3,
  filename = d3.pdf,
)

prnLDA(
  show_ids = TRUE,
  dimension = 3,
  filename = d3.png,
)

# show ellipses
# (column `expt_smry.xlsx::Color` codes `labs`.)
prnLDA(
  show_ids = FALSE,
  show_ellipses = TRUE,
  col_group = Color, 
  dimension = 3,
  filename = d3_labs.png,
)

# (column `expt_smry.xlsx::Shape` codes `WHIMs`.)
prnLDA(
  show_ids = FALSE,
  show_ellipses = TRUE,
  col_group = Shape, 
  dimension = 3,
  filename = d3_whims.png,
)

## custom theme
library(ggplot2)
my_theme <- theme_bw() + theme(
  axis.text.x  = element_text(angle=0, vjust=0.5, size=20),
  axis.text.y  = element_text(angle=0, vjust=0.5, size=20),
  axis.title.x = element_text(colour="black", size=20),
  axis.title.y = element_text(colour="black", size=20),
  plot.title = element_text(face="bold", colour="black", size=20, hjust=0.5, vjust=0.5),
  
  panel.grid.major.x = element_blank(),
  panel.grid.minor.x = element_blank(),
  panel.grid.major.y = element_blank(),
  panel.grid.minor.y = element_blank(),
  
  legend.key = element_rect(colour = NA, fill = 'transparent'),
  legend.background = element_rect(colour = NA,  fill = "transparent"),
  legend.title = element_blank(),
  legend.text = element_text(colour="black", size=14),
  legend.text.align = 0,
  legend.box = NULL
)

pepLDA(
  impute_na = TRUE,
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  theme = my_theme, 
  filename = my_theme.png,
)

## direct uses of ggplot2
library(ggplot2)
res <- prnLDA(filename = foo.png)

# names(res)

p <- ggplot(res$x, aes(x = LD1, y = LD2)) +
  geom_point(aes(colour = Color, shape = Shape, alpha = Alpha), size = 4, stroke = 0.02) + 
  stat_ellipse(aes(colour = Shape), linetype = 2) + 
  labs(title = "", 
       x = "LD1", 
       y = "LD2") +
  coord_fixed() + 
  geom_text(aes(label = Sample_ID), color = "gray", size = 1)

ggsave(file.path(dat_dir, "Protein/LDA/my_ggplot2.png"))

p_fil <- ggplot(res$x, aes(LD1, LD2)) +
  geom_point(aes(colour = Color, shape = Shape, alpha = Alpha), size = 4, stroke = 0.02) + 
  stat_ellipse(aes(fill = Shape), geom = "polygon", alpha = .4) + 
  labs(title = "", 
       x = "LD1", 
       y = "LD2") +
  coord_fixed() 

ggsave(file.path(dat_dir, "Protein/LDA/my_ggplot2_fil.png"))

\dontrun{
pepLDA(
  col_group = sample_ids_other_than_groups,
  col_select = Select, 
  filter_peps_by = exprs(pep_n_psm >= 3),
  show_ids = FALSE, 
  filename = "peps_rowfil.png",
)
  
# by features not available
prnLDA(
  type = feats,
  scale_log2r = TRUE,
  filename = "by_feats.png",
)
}
}

}
\seealso{
\emph{Metadata} \cr
 \code{\link{load_expts}} for metadata preparation and a reduced working example in data normalization \cr

 \emph{Data normalization} \cr
 \code{\link{normPSM}} for extended examples in PSM data normalization \cr
 \code{\link{PSM2Pep}} for extended examples in PSM to peptide summarization \cr
 \code{\link{mergePep}} for extended examples in peptide data merging \cr
 \code{\link{standPep}} for extended examples in peptide data normalization \cr
 \code{\link{Pep2Prn}} for extended examples in peptide to protein summarization \cr
 \code{\link{standPrn}} for extended examples in protein data normalization. \cr
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in data purging \cr
 \code{\link{pepHist}} and \code{\link{prnHist}} for extended examples in histogram visualization. \cr
 \code{\link{extract_raws}} and \code{\link{extract_psm_raws}} for extracting MS file names \cr

 \emph{Variable arguments of `filter_...`} \cr
 \code{\link{contain_str}}, \code{\link{contain_chars_in}}, \code{\link{not_contain_str}},
 \code{\link{not_contain_chars_in}}, \code{\link{start_with_str}},
 \code{\link{end_with_str}}, \code{\link{start_with_chars_in}} and
 \code{\link{ends_with_chars_in}} for data subsetting by character strings \cr

 \emph{Missing values} \cr
 \code{\link{pepImp}} and \code{\link{prnImp}} for missing value imputation \cr

 \emph{Informatics} \cr
 \code{\link{pepSig}} and \code{\link{prnSig}} for significance tests \cr
 \code{\link{pepVol}} and \code{\link{prnVol}} for volcano plot visualization \cr
 \code{\link{prnGSPA}} for gene set enrichment analysis by protein significance pVals \cr
 \code{\link{gspaMap}} for mapping GSPA to volcano plot visualization \cr
 \code{\link{prnGSPAHM}} for heat map and network visualization of GSPA results \cr
 \code{\link{prnGSVA}} for gene set variance analysis \cr
 \code{\link{prnGSEA}} for data preparation for online GSEA. \cr
 \code{\link{pepMDS}} and \code{\link{prnMDS}} for MDS visualization \cr
 \code{\link{pepPCA}} and \code{\link{prnPCA}} for PCA visualization \cr
 \code{\link{pepLDA}} and \code{\link{prnLDA}} for LDA visualization \cr
 \code{\link{pepHM}} and \code{\link{prnHM}} for heat map visualization \cr
 \code{\link{pepCorr_logFC}}, \code{\link{prnCorr_logFC}}, \code{\link{pepCorr_logInt}} and
 \code{\link{prnCorr_logInt}}  for correlation plots \cr
 \code{\link{anal_prnTrend}} and \code{\link{plot_prnTrend}} for trend analysis and visualization \cr
 \code{\link{anal_pepNMF}}, \code{\link{anal_prnNMF}}, \code{\link{plot_pepNMFCon}},
 \code{\link{plot_prnNMFCon}}, \code{\link{plot_pepNMFCoef}}, \code{\link{plot_prnNMFCoef}} and
 \code{\link{plot_metaNMF}} for NMF analysis and visualization \cr

 \emph{Custom databases} \cr
 \code{\link{Uni2Entrez}} for lookups between UniProt accessions and Entrez IDs \cr
 \code{\link{Ref2Entrez}} for lookups among RefSeq accessions, gene names and Entrez IDs \cr
 \code{\link{prepGO}} for \code{\href{http://current.geneontology.org/products/pages/downloads.html}{gene
 ontology}} \cr
 \code{\link{prepMSig}} for \href{https://data.broadinstitute.org/gsea-msigdb/msigdb/release/7.0/}{molecular
 signatures} \cr
 \code{\link{prepString}} and \code{\link{anal_prnString}} for STRING-DB \cr

 \emph{Column keys in PSM, peptide and protein outputs} \cr
 # Mascot \cr
 system.file("extdata", "psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "protein_keys.txt", package = "proteoQ") \cr
}
