% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-nmf.R
\name{proteoNMF}
\alias{proteoNMF}
\alias{anal_pepNMF}
\alias{anal_prnNMF}
\alias{plot_pepNMFCon}
\alias{plot_prnNMFCon}
\alias{plot_pepNMFCoef}
\alias{plot_prnNMFCoef}
\alias{plot_metaNMF}
\title{NMF analysis}
\usage{
proteoNMF(id = c("pep_seq", "pep_seq_mod", "prot_acc", "gene"),
  col_select = NULL, col_group = NULL, scale_log2r = TRUE,
  impute_na = TRUE, complete_cases = FALSE, df = NULL,
  filepath = NULL, filename = NULL, task = "anal", r = NULL,
  nrun = 200, ...)

anal_pepNMF(...)

anal_prnNMF(...)

plot_pepNMFCon(annot_cols = NULL, annot_colnames = NULL, ...)

plot_prnNMFCon(annot_cols = NULL, annot_colnames = NULL, ...)

plot_pepNMFCoef(annot_cols = NULL, annot_colnames = NULL, ...)

plot_prnNMFCoef(annot_cols = NULL, annot_colnames = NULL, ...)

plot_metaNMF(annot_cols = NULL, annot_colnames = NULL, ...)
}
\arguments{
\item{id}{Character string to indicate the type of data. The value will be
determined automatically. Peptide data will be used at \code{id = pep_seq}
or \code{pep_seq_mod}, and protein data will be used at \code{id = prot_acc}
or \code{gene}.}

\item{col_select}{Character string to a column key in \code{expt_smry.xlsx}.
Samples corresponding to non-empty entries under the column key will be
included in the indicated analysis. At the \code{NULL} default, the column
key will be \code{Select}.}

\item{col_group}{Character string to a column key in \code{expt_smry.xlsx}.
Samples corresponding to non-empty entries under \code{col_group} will be
used for sample grouping in the indicated analysis. At the NULL default, the
column key \code{Group} will be used.}

\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation across all samples.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used.}

\item{complete_cases}{Logical; if TRUE, only cases that are complete with no
missing values will be used.}

\item{df}{The name of input data file. By default, it will be determined
automatically by the value of \code{id}.}

\item{filepath}{Use system default.}

\item{filename}{Use system default.}

\item{task}{Character string; a signature for task dispatching in a function
factory.}

\item{r}{Numeric vector; the factorization rank(s) in \code{\link[NMF]{nmf}}.
The default is c(4:8)}

\item{nrun}{Numeric; the number of runs in \code{\link[NMF]{nmf}}. The default
is 200.}

\item{...}{In \code{anal_} functions: additional arguments are for
\code{\link[NMF]{nmf}}; in \code{plot_} functions: \code{width},
\code{height}; in \code{plot_metaNMF} functions: additional arguments are
for \code{pheatmap}.}

\item{annot_cols}{A character vector of column keys in \code{expt_smry.xlsx}.
The values under the selected keys will be used to color-code sample IDs on
the top of the indicated plot.}

\item{annot_colnames}{A character vector of replacement name(s) to
\code{annot_cols}.}
}
\value{
NMF classification and visualization of \code{log2FC}.
}
\description{
\code{proteoNMF} analyzes and visualizes the NMF clustering of peptide or
protein \code{log2FC}. Users should avoid call the method directly, but
instead use the following wrappers.

\code{anal_pepNMF} is a wrapper of \code{\link{proteoNMF}} for the NMF
analysis of peptide data

\code{anal_prnNMF} is a wrapper of \code{\link{proteoNMF}} for the NMF
analysis of protein data

\code{plot_pepNMFCon} is a wrapper of \code{\link{proteoNMF}} for the
visualization of the consensus heat map of peptide data

\code{plot_prnNMFCon} is a wrapper of \code{\link{proteoNMF}} for the
visualization of the consensus heat map of protein data

\code{plot_pepNMFCoef} is a wrapper of \code{\link{proteoNMF}} for the
visualization of the coefficient heat map of peptide data

\code{plot_prnNMFCoef} is a wrapper of \code{\link{proteoNMF}} for the
visualization of the coefficient heat map of protein data

\code{plot_metaNMF} is a wrapper of \code{\link{proteoNMF}} for the
visualization of the metagene heat maps of protein data
}
\details{
The option of \code{complete_cases} will be forced to \code{TRUE} at
\code{impute_na = FALSE}
}
\examples{
# ===================================
# Prerequisite Fasta and PSM files
# ===================================
library(proteoQDA)
fasta_dir <- "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq"
dir.create(fasta_dir, recursive = TRUE, showWarnings = FALSE)
copy_refseq_hs(fasta_dir)
copy_refseq_mm(fasta_dir)

## RUN `Mascot or Maxquant but not both`
dontrun <- TRUE
if (!dontrun) {
  ## Mascot
  dat_dir <- "C:\\\\The\\\\Mascot\\\\Example"
  dir.create(dat_dir, recursive = TRUE, showWarnings = FALSE)
  cptac_csv_1(dat_dir)
  cptac_expt_1(dat_dir)
  cptac_frac_1(dat_dir)
  
	
  ## Maxquant
  #  to install package `proteoQDB` containing MaxQuant examples: 
  #  (1) clone https://github.com/qiangzhang503/proteoQDB.git through `Github Desktop`
  #  (2) local installation of proteoQDB, e.g., devtools::install("~\\\\my_dir\\\\proteoQDB")
  library(proteoQDB)
  dat_dir <- c("C:\\\\The\\\\MQ\\\\Example")
  dir.create(dat_dir, recursive = TRUE, showWarnings = FALSE)
  cptac_mqpsm_txt(dat_dir)
  cptac_mqpsm_expt(dat_dir)
  cptac_mqpsm_frac(dat_dir)	
}
## END of RUN `Mascot or Maxquant but not both`


# ===================================
# Prerequisite PSM normalization
# ===================================
library(proteoQ)

## RUN `Mascot or Maxquant but not both`
dontrun <- TRUE
if (!dontrun) {
  ## Mascot
  dat_dir <- "C:\\\\The\\\\Mascot\\\\Example"
  
	
  ## Maxquant
  dat_dir <- c("C:\\\\The\\\\MQ\\\\Example")
}
## END of RUN `Mascot or Maxquant but not both`

dir.create(dat_dir, recursive = TRUE, showWarnings = FALSE)

load_expts()

normPSM(
  group_psm_by = pep_seq_mod, 
  fasta = c("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta", 
            "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_mm_2013_07.fasta"), 
)


# ===================================
# Prerequisite peptide normalization
# ===================================
normPep(
  method_align = MGKernel, 
  n_comp = 3, 
  seed = 749662, 
)


# ===================================
# Prerequisite protein normalization
# ===================================
normPrn(
  method_align = MGKernel, 
  n_comp = 2, 
  seed = 749662, 
)


# ===================================
# Optional NA imputation
# ===================================
# peptide
pepImp(m = 2, maxit = 2)

# protein
prnImp(m = 5, maxit = 5)




# ===================================
# NMF
# ===================================
scale_log2r <- TRUE

library(NMF)

# peptide NMF at two different r(ank)s
anal_pepNMF(
  scale_log2r = TRUE,
  col_group = Group, # optional a priori knowledge of sample groups
  r = c(6, 8),
  nrun = 200,
  filter_by_npsm = exprs(pep_n_psm >= 2),
)

# protein NMF over a range of ranks
library(NMF)

anal_prnNMF(
  impute_na = FALSE,
  scale_log2r = TRUE,
  col_group = Group,
  r = c(5:8),
  nrun = 200, 
  filter_by_npep = exprs(prot_n_pep >= 2),
)


# peptide consensus heat maps at specific ranks
plot_pepNMFCon(
  r = c(5, 6),
  annot_cols = c("Color", "Alpha", "Shape"),
  annot_colnames = c("Lab", "Batch", "WHIM"),
  width = 10,
  height = 10,
)

# peptide consensus heat maps at all available ranks
plot_pepNMFCon(
  impute_na = FALSE,
  annot_cols = c("Color", "Alpha", "Shape"),
  annot_colnames = c("Lab", "Batch", "WHIM"),
  width = 10,
  height = 10,
)


# protein consensus heat maps at specific ranks
plot_prnNMFCon(
  r = c(7:8),
  annot_cols = c("Color", "Alpha", "Shape"),
  annot_colnames = c("Lab", "Batch", "WHIM"),
  width = 10,
  height = 10,
)

# protein consensus heat maps at all available ranks
plot_prnNMFCon(
  impute_na = FALSE,
  annot_cols = c("Color", "Alpha", "Shape"),
  annot_colnames = c("Lab", "Batch", "WHIM"),
  width = 10,
  height = 10
)


# peptide coefficient heat maps at all ranks
plot_pepNMFCoef(
  annot_cols = c("Color", "Alpha", "Shape"),
  annot_colnames = c("Lab", "Batch", "WHIM"),
  width = 10,
  height = 10
)


# protein coefficient heat maps at all ranks
plot_prnNMFCoef(
  annot_cols = c("Color", "Alpha", "Shape"),
  annot_colnames = c("Lab", "Batch", "WHIM"),
  width = 10,
  height = 10
)

# metagenes heat maps at all available ranks
# additional arguments for `pheatmap`
plot_metaNMF(
  annot_cols = c("Color", "Alpha", "Shape"),
  annot_colnames = c("Lab", "Batch", "WHIM"),

  fontsize = 8,
  fontsize_col = 5
)

}
