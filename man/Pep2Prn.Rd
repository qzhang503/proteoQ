% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-peptable.R
\name{Pep2Prn}
\alias{Pep2Prn}
\title{Interim protein data}
\usage{
Pep2Prn(method_pep_prn = c("median", "mean", "weighted.mean", "top.3"),
  use_unique_pep = TRUE, ...)
}
\arguments{
\item{method_pep_prn}{Character string; the method to summarise the
\code{log2FC} and the \code{intensity} of peptides by protein entries. The
descriptive statistics includes \code{c("mean", "median", "top.3",
"weighted.mean")} with \code{median} being the default. The representative
\code{log10-intensity} of reporter ions at the peptide levels (from
\code{\link{standPep}}) will be the weigth when summarising \code{log2FC}
with \code{top.3} or \code{weighted.mean}.}

\item{use_unique_pep}{Logical. If TRUE, only entries that are \code{TRUE} or
equal to \code{1} under the column \code{pep_isunique} in \code{Peptide.txt}
will be used, for summarising the \code{log2FC} and the \code{intensity} of
peptides into protein values. The default is to use unique peptides only.
For \code{MaxQuant} data, the levels of uniqueness are according to the
\code{pep_unique_by} in \code{\link{normPSM}}. The argument currently do
nothing to \code{Spectrum Mill} data where both unique and shared peptides
will be kept.}

\item{...}{\code{filter_}: Variable argument statements for the filtration of
data rows. Each statement contains a list of logical expression(s). The
\code{lhs} needs to start with \code{filter_}. The logical condition(s) at
the \code{rhs} needs to be enclosed in \code{exprs} with round parenthesis.
For example, \code{pep_len} is a column key present in \code{Peptide.txt}
with \code{Mascot} workflows. The statement of \code{filter_peps_at =
exprs(pep_len <= 50)} will remove peptide entries with \code{pep_len > 50}.}
}
\value{
The primary output in "\code{...\\Protein\\Protein.txt}".
}
\description{
\code{Pep2Prn} summarises \code{Peptide.txt} to an interim protein report in
\code{Protein.txt}.
}
\details{
Fields other than \code{log2FC} and \code{intensity} are summarized with
median statistics.
}
\examples{
# ===================================
# Peptides to proteins
# ===================================

## !!!require the brief working example in `?load_expts`

# use unique peptides
Pep2Prn()

# include shared peptides
Pep2Prn(use_unique_pep = FALSE)

}
\seealso{
\code{\link{load_expts}} for a reduced working example in data normalization \cr

 \code{\link{normPSM}} for extended examples in PSM data normalization \cr
 \code{\link{PSM2Pep}} for extended examples in PSM to peptide summarization \cr 
 \code{\link{mergePep}} for extended examples in peptide data merging \cr 
 \code{\link{standPep}} for extended examples in peptide data normalization \cr
 \code{\link{Pep2Prn}} for extended examples in peptide to protein summarization \cr
 \code{\link{standPrn}} for extended examples in protein data normalization. \cr 
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in data purging \cr
 \code{\link{pepHist}} and \code{\link{prnHist}} for extended examples in histogram visualization. \cr 
 \code{\link{extract_raws}} and \code{\link{extract_psm_raws}} for extracting MS file names \cr 
 
 \code{\link{contain_str}}, \code{\link{contain_chars_in}}, \code{\link{not_contain_str}}, 
 \code{\link{not_contain_chars_in}}, \code{\link{start_with_str}}, 
 \code{\link{end_with_str}}, \code{\link{start_with_chars_in}} and 
 \code{\link{ends_with_chars_in}} for data subsetting by character strings \cr 
 
 \code{\link{pepImp}} and \code{\link{prnImp}} for missing value imputation \cr 
 \code{\link{pepSig}} and \code{\link{prnSig}} for significance tests \cr 
 \code{\link{pepVol}} and \code{\link{prnVol}} for volcano plot visualization \cr
}
