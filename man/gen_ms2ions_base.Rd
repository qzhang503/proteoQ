% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ms2_a0_vnl0_fnl1.R, R/ms2_a1_vnl0_fnl0.R,
%   R/ms2_a1_vnl0_fnl1.R, R/ms2_a1_vnl1_fnl0.R, R/ms2_base.R
\name{gen_ms2ions_a0_vnl0_fnl1}
\alias{gen_ms2ions_a0_vnl0_fnl1}
\alias{gen_ms2ions_a1_vnl0_fnl0}
\alias{gen_ms2ions_a1_vnl0_fnl1}
\alias{gen_ms2ions_a1_vnl1_fnl0}
\alias{gen_ms2ions_base}
\title{Calculates the masses of MS2 ion series.}
\usage{
gen_ms2ions_a0_vnl0_fnl1(
  aa_seq,
  ms1_mass = NULL,
  aa_masses,
  ntmass = NULL,
  ctmass = NULL,
  fmods_nl = NULL,
  mod_indexes = NULL,
  type_ms2ions = "by",
  maxn_vmods_per_pep = 5L,
  maxn_sites_per_vmod = 3L,
  maxn_vmods_sitescombi_per_pep = 32L,
  digits = 4L
)

gen_ms2ions_a1_vnl0_fnl0(
  aa_seq,
  ms1_mass = NULL,
  aa_masses,
  ntmod = NULL,
  ctmod = NULL,
  ntmass = NULL,
  ctmass = NULL,
  amods = NULL,
  mod_indexes = NULL,
  type_ms2ions = "by",
  maxn_vmods_per_pep = 5L,
  maxn_sites_per_vmod = 3L,
  maxn_vmods_sitescombi_per_pep = 32L,
  digits = 4L
)

gen_ms2ions_a1_vnl0_fnl1(
  aa_seq,
  ms1_mass = NULL,
  aa_masses,
  ntmod = NULL,
  ctmod = NULL,
  ntmass = NULL,
  ctmass = NULL,
  amods = NULL,
  fmods_nl,
  mod_indexes = NULL,
  type_ms2ions = "by",
  maxn_vmods_per_pep = 5L,
  maxn_sites_per_vmod = 3L,
  maxn_vmods_sitescombi_per_pep = 32L,
  digits = 4L
)

gen_ms2ions_a1_vnl1_fnl0(
  aa_seq,
  ms1_mass = NULL,
  aa_masses,
  ntmod = NULL,
  ctmod = NULL,
  ntmass = NULL,
  ctmass = NULL,
  amods = NULL,
  vmods_nl,
  mod_indexes = NULL,
  type_ms2ions = "by",
  maxn_vmods_per_pep = 5L,
  maxn_sites_per_vmod = 3L,
  maxn_vmods_sitescombi_per_pep = 32L,
  digits = 4L
)

gen_ms2ions_base(
  aa_seq,
  ms1_mass = NULL,
  aa_masses,
  ntmass = NULL,
  ctmass = NULL,
  mod_indexes = NULL,
  type_ms2ions = "by",
  maxn_vmods_per_pep = 5L,
  maxn_sites_per_vmod = 3L,
  maxn_vmods_sitescombi_per_pep = 32L,
  digits = 4L
)
}
\arguments{
\item{aa_seq}{Character string; a peptide sequences with one-letter
representation of amino acids.}

\item{ms1_mass}{The mass of a theoretical MS1 (for subsetting).}

\item{aa_masses}{Amino-acid lookup at a given combination of fixed and
variable.}

\item{ntmass}{The mass of N-terminal.}

\item{ctmass}{The mass of C-terminal.}

\item{fmods_nl}{The attribute of \code{fmods_nl} from an \code{aa_masses}.}

\item{mod_indexes}{Integer; the indexes of fixed and/or variable
modifications.}

\item{type_ms2ions}{Character; the type of
\href{http://www.matrixscience.com/help/fragmentation_help.html}{ MS2
ions}. Values are in one of "by", "ax" and "cz". The default is "by" for b-
and y-ions.}

\item{maxn_vmods_per_pep}{The maximum number of variable modifications per
peptide.}

\item{maxn_sites_per_vmod}{Integer; the maximum number of combinatorial
variable modifications per site in a per peptide sequence.}

\item{maxn_vmods_sitescombi_per_pep}{Integer; the maximum number of
combinatorial variable modifications per peptide sequence.}

\item{digits}{Integer; the number of decimal places to be used.}

\item{ntmod}{The attribute \code{ntmod} from a \code{aa_masses} (for MS1
calculations).}

\item{ctmod}{The attribute \code{ctmod} from a \code{aa_masses} (for MS1
 calculations).
@rdname gen_ms2ions_base}

\item{amods}{The attribute \code{amods} from a \code{aa_masses}.}

\item{vmods_nl}{The attribute of \code{vmods_nl} from an \code{aa_masses}.}
}
\description{
(5) "amods- tmod- vnl- fnl+", (6) "amods- tmod+ vnl- fnl+"

(7) "amods+ tmod- vnl- fnl-", (8) "amods+ tmod+ vnl- fnl-"

(11) "amods+ tmod- vnl- fnl+", (12) "amods+ tmod+ vnl- fnl+"

(9) "amods+ tmod- vnl+ fnl-", (10) "amods+ tmod+ vnl+ fnl-"

(1) "amods- tmod- vnl- fnl-", (2) "amods- tmod+ vnl- fnl-"
}
\examples{
\donttest{
# (5) "amods- tmod+ vnl- fnl+"
fixedmods <- c("TMT6plex (N-term)", "Oxidation (M)", "dHex (S)")
varmods <- c("Acetyl (Protein N-term)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))
  
aa_masses_all <- calc_aamasses(fixedmods, varmods, add_varmasses = FALSE, 
                               add_nlmasses = FALSE)

aa_masses <- aa_masses_all[[3]]

ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549 # - electron
} else {
  ntmass <- aa_masses[names(ntmod)] - 0.000549
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147 # + (H) + (H+)
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

fmods_nl <- attr(aa_masses, "fmods_nl", exact = TRUE)

aa_seq <- "MHQGVMNVGMGQKMNS"

# variable `TMT6plex (N-term)` + `fixed Oxidation (M)`
# (additive varmod on top of fixedmod allowed)

out <- gen_ms2ions_a0_vnl0_fnl1(aa_seq, NULL, aa_masses, ntmass, ctmass, 
                                fmods_nl, mod_indexes)

}

\donttest{
# (8) "amods+ tmod+ vnl- fnl-"
fixedmods <- c("TMT6plex (K)")
varmods <- c("Deamidated (N)", "Carbamidomethyl (S)",
             "Acetyl (Protein N-term)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))

aa_masses_all <- calc_aamasses(fixedmods, varmods,
                               add_varmasses = FALSE,
                               add_nlmasses = FALSE)

aa_masses <- aa_masses_all[[8]]

ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549 # - electron
} else {
  ntmass <- aa_masses[names(ntmod)] - 0.000549
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147 # + (H) + (H+)
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

amods <- attr(aa_masses, "amods", exact = TRUE)

aa_seq <- "MHQGVMNVGMGQKMNS"
ms1_masses <- calc_monopeptide("MHQGVMNVGMGQKMNS",
                               fixedmods, varmods)
ms1_mass <- ms1_masses$mass[[8]][2] # 2077.9256

out <- gen_ms2ions_a1_vnl0_fnl0(aa_seq, ms1_mass, aa_masses,
                                ntmod, ctmod,
                                ntmass, ctmass, amods,
                                mod_indexes)

}
\donttest{
# (11) "amods+ tmod+ vnl+ fnl-"
fixedmods <- c("TMT6plex (K)", "Oxidation (M)", "dHex (S)")
varmods <- c("Deamidated (N)", "Acetyl (Protein N-term)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))

aa_masses_all <- calc_aamasses(fixedmods, varmods,
                               add_varmasses = FALSE,
                               add_nlmasses = FALSE)

aa_masses <- aa_masses_all[[2]]

ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549 # - electron
} else {
  ntmass <- aa_masses[names(ntmod)] - 0.000549
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147 # + (H) + (H+)
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

amods <- attr(aa_masses, "amods", exact = TRUE)
fmods_nl <- attr(aa_masses, "fmods_nl", exact = TRUE)

aa_seq <- "HQGVMNVGMGQKMNS"
ms1_masses <- calc_monopeptide(aa_seq, fixedmods, varmods)

ms1_mass <- ms1_masses$mass[[2]][2] # 2041.8958

out <- gen_ms2ions_a1_vnl0_fnl1(aa_seq, ms1_mass, aa_masses,
                                ntmod, ctmod,
                                ntmass, ctmass, amods, fmods_nl, 
                                mod_indexes)

# No "M", no "S"
aa_seq <- "HQGVNVGGQKN"
ms1_masses <- calc_monopeptide(aa_seq, fixedmods, varmods)
ms1_mass <- ms1_masses$mass[[2]][2] # 1367.6996

}
\donttest{
# (9) "amods+ tmod+ vnl+ fnl-"
fixedmods <- c("TMT6plex (K)")
varmods <- c("dHex (S)", "Oxidation (M)", "Deamidated (N)", 
             "Acetyl (Protein N-term)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))

aa_masses_all <- calc_aamasses(fixedmods, varmods,
                               add_varmasses = FALSE,
                               add_nlmasses = FALSE)

aa_masses <- aa_masses_all[[16]]

ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549 # - electron
} else {
  ntmass <- aa_masses[names(ntmod)] - 0.000549
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147 # + (H) + (H+)
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

amods <- attr(aa_masses, "amods", exact = TRUE)
vmods_nl <- attr(aa_masses, "vmods_nl", exact = TRUE)

aa_seq <- "HQGVMNVGMGQKMNS"
ms1_masses <- calc_monopeptide("HQGVMNVGMGQKMNS",
                               fixedmods, varmods)
ms1_mass <- ms1_masses$mass[[16]][2] # 2197.9679

out <- gen_ms2ions_a1_vnl1_fnl0(aa_seq, ms1_mass, aa_masses,
                                ntmod, ctmod,
                                ntmass, ctmass, amods, vmods_nl, 
                                mod_indexes)

# Not in the category; 
# should be at least one amod with vnl+ 
# (aa_seq <- "HQGVVGGQK")
# (aa_seq <- "HQNGVVGGQK")

# Mismatches between vmods_nl and aa_seq
#  All of M, N, S should be present after pep_seq dispatching 
#    -> "correct" vmods_nl with all and only M, N, S (+/- tmods)
# (aa_seq <- "HQNGVVGGQKM") # no "S"

}
\donttest{
# (2) "amods- tmod+ vnl- fnl-"
fixedmods <- c("TMT6plex (K)", "Carbamidomethyl (C)")
varmods <- c("TMT6plex (N-term)", "Acetyl (Protein N-term)", "Oxidation (M)",
             "Deamidated (N)", "Gln->pyro-Glu (N-term = Q)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))

aa_masses_all <- calc_aamasses(fixedmods, varmods,
                               add_varmasses = FALSE,
                               add_nlmasses = FALSE)

aa_masses = aa_masses_all[[2]]

ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549 # - electron
} else {
  ntmass <- aa_masses[names(ntmod)] + 1.00727647 # + proton
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147 # + (H) + (H+)
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

aa_seq <- "MHQGVMNVGMGQKMNS"

out <- gen_ms2ions_base(aa_seq, ms1_mass, aa_masses,
                        ntmass, ctmass, mod_indexes)
                        
# (1) "amods- tmod- vnl- fnl-"
fixedmods <- c("TMT6plex (N-term)", "TMT6plex (K)", "Carbamidomethyl (C)")
varmods <- c("Oxidation (M)", "Deamidated (N)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))

aa_masses_all <- calc_aamasses(fixedmods, varmods,
                               add_varmasses = FALSE,
                               add_nlmasses = FALSE)

aa_masses <- aa_masses_all[[1]]

ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549
} else {
  ntmass <- aa_masses[names(ntmod)] + 1.00727647
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

aa_seq <- "MHQGVMNVGMGQKMNS"

out <- gen_ms2ions_base(aa_seq, ms1_mass, aa_masses,
                        ntmass, ctmass, mod_indexes)

}
}
\seealso{
\link{bions_base}, \link{yions_base}.
}
