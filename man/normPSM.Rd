% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-psmtable.R
\name{normPSM}
\alias{normPSM}
\title{Reports PSM results}
\usage{
normPSM(group_psm_by = c("pep_seq", "pep_seq_mod"),
  group_pep_by = c("prot_acc", "gene"), dat_dir = NULL,
  expt_smry = "expt_smry.xlsx", frac_smry = "frac_smry.xlsx",
  fasta = NULL, pep_unique_by = "group", corrected_int = FALSE,
  rm_reverses = TRUE, rptr_intco = 1000, rm_craps = FALSE,
  rm_krts = FALSE, rm_outliers = FALSE, annot_kinases = FALSE,
  plot_rptr_int = TRUE, plot_log2FC_cv = TRUE, ...)
}
\arguments{
\item{group_psm_by}{A character string for the grouping of PSM entries. At the
\code{pep_seq} default, descriptive statistics will be calculated based on
the same \code{pep_seq} groups. At \code{group_psm_by = pep_seq_mod},
peptides with different variable modifications will be treated as different
species. The early decision in data grouping will inform the downstream
purging (\code{\link{purgePSM}}) and summarization (\code{\link{normPep}})
of PSM data.}

\item{group_pep_by}{A character string for the grouping of peptide entries. At
the \code{prot_acc} default, descriptive statistics will be calculated based
on the same \code{prot_acc} groups. At \code{group_pep_by = gene}, proteins
with the same gene name but different accession numbers will be treated as
one group.}

\item{dat_dir}{A character string to the working directory.}

\item{expt_smry}{A character string to the \code{.xlsx} file containing the
metadata of TMT experiments. The default is "expt_smry.xlsx".}

\item{frac_smry}{A character string to the \code{.xlsx} file containing
peptide fractionation summary. The default is "frac_smry.xlsx".}

\item{fasta}{Character string(s) to the name(s) of fasta file(s) with
prepended directory path. The \code{fasta} database(s) need to match those
used in MS/MS ion search.}

\item{pep_unique_by}{A character string for use in the filtration of peptide
data from \code{MaxQuant}. The choice is in one of \code{c("group",
"protein", "none")} At the \code{group} default, only peptides unique by
protein groups will be kept. At \code{protein}, only peptides unique by
protein entries will be kept. At \code{none}, all peptides will be kept.}

\item{corrected_int}{Logical. If TRUE, values under columns "Reporter
intensity corrected" in MaxQuant PSM results (\code{msms.txt}) will be used.
Otherwise, "Reporter intensity" values without corrections will be used.}

\item{rm_reverses}{Logical; if TRUE, removes \code{Reverse} entries from
MaxQuant peptide results.}

\item{rptr_intco}{Numeric; the threshold of reporter ion intensity.}

\item{rm_craps}{Logical; if TRUE, removes
\code{\href{https://www.thegpm.org/crap/}{cRAP}} proteins.}

\item{rm_krts}{Logical; if TRUE, removes keratin entries from the output.}

\item{rm_outliers}{Logical; if TRUE, performs outlier removals.}

\item{annot_kinases}{Logical; if TRUE, annotates kinase attributes of
proteins.}

\item{plot_rptr_int}{Logical; if TRUE, prepares the violin plots of
reporter-ion intensities.}

\item{plot_log2FC_cv}{Logical; if TRUE, prepares the violin plots of the CV of
peptide \code{log2FC} for each sample.}

\item{...}{\code{filter_}: Each one corresponds to a logical expression(s) for
the filtration of data rows. The \code{lhs} needs to start with
\code{filter_}. The logical condition(s) at the \code{rhs} needs to be
enclosed in \code{exprs} with round parenthesis.}
}
\value{
Outputs are under the directory of \code{dat_dir\\PSM}. Primary
 results are in \code{TMTset1_LCMSinj1_PSM_N.txt, TMTset2_LCMSinj1_PSM_N.txt,
 ...} The indeces of TMT experiment and LC/MS injection are indicated in the
 file names.
}
\description{
\code{normPSM} reports
\code{\href{https://www.ebi.ac.uk/pride/help/archive/search/tables}{PSM}}
results from \code{\href{https://en.wikipedia.org/wiki/Tandem_mass_tag}{TMT}}
experiments.
}
\details{
The \code{PSM} files should be present under the working directory,
\code{"dat_dir"}, specified by end users.

In each primary output file, "\code{...PSM_N.txt}", values under columns
\code{log2_R...} are logarithmic ratios at base 2 in relative to the
\code{reference(s)} within each multiplex TMT set, or to the row means if no
\code{reference(s)} are present. Values under columns \code{N_log2_R...} are
\code{log2_R...} with median-centering alignment. Values under columns
\code{I...} are raw \code{reporter-ion intensity} from database searches.
Values under columns \code{N_I...} are normalized \code{reporter-ion
intensity}. Values under columns \code{sd_log2_R...} are the standard
deviation of the \code{log2FC} of peptides from ascribing PSMs. Character
strings under \code{pep_seq_mod} denote peptide sequences with applicable
variable modifications.
}
\section{\code{Mascot}}{
 End users will export \code{PSM} data from
 \code{\href{https://http://www.matrixscience.com/}{Mascot}} at a \code{.csv}
 format. The header information should be included during the \code{.csv}
 export. The file name(s) should be defaulted by
 \code{\href{https://http://www.matrixscience.com/}{Mascot}}: starting with
 the letter \code{'F'}, followed by a six-digit number without space and
 ended with a \code{'.csv'} extension \code{(e.g., F004453.csv)}.

 See \code{\link{normPrn}} for the description of column keys in the output.
}

\section{\code{MaxQuant}}{
 End users will copy over \code{msms.txt} file(s)
 from \code{\href{https://www.maxquant.org/}{MaxQuant}} to the \code{dat_dir}
 directory. In the case of multiple \code{msms.txt} files for processing, the
 file names need to be compiled in that they all start with \code{'msms'} and
 end with a \code{'.txt'} extension.
}

\examples{
\dontrun{
# Mascot example
# set up a working directory
dir.create("C:\\\\The\\\\Mascot\\\\Example", recursive = TRUE, showWarnings = FALSE)
dat_dir <- c("C:\\\\The\\\\First\\\\Example")

# copy fasta
library(proteoQDA)
copy_refseq_hs("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq")
copy_refseq_mm("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq")

# copy Mascot PSM data
cptac_csv_1(dat_dir)

# copy "expt_smry.xlsx" and "frac_smry.xlsx"
cptac_expt_1(dat_dir)
cptac_frac_1(dat_dir)

# load experiments
library(proteoQ)
load_expts()

# process PSMs with in-function filtration of data by `filter_`
normPSM(
  group_psm_by = pep_seq, 
  group_pep_by = prot_acc, 
  fasta = c("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta", 
            "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_mm_2013_07.fasta"), 
  rptr_intco = 3000,
  rm_craps = TRUE,
  rm_krts = FALSE,
  rm_outliers = FALSE, 
  annot_kinases = TRUE,	
  plot_rptr_int = TRUE, 
  plot_log2FC_cv = TRUE, 
  
  filter_peps = exprs(pep_expect <= .1, pep_isunique == 1), 
  filter_by_more = exprs(pep_rank == 1, pep_exp_z > 1),
)

# examplary PSM purging; n: the number of PSMs
purgePSM(max_cv = .5, min_n = 2)


# MaxQuant example
dir.create("C:\\\\The\\\\MQ\\\\Example", recursive = TRUE, showWarnings = FALSE)
dat_dir <- c("C:\\\\The\\\\MQ\\\\Example")

# copy fasta 
library(proteoQDA)
copy_refseq_hs("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq")
copy_refseq_mm("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq")

# copy MaxQuant PSM data
library(proteoQDB)
cptac_mq_psm_1(dat_dir)

# copy "expt_smry.xlsx" and "frac_smry.xlsx"
cptac_expt_1(dat_dir)
cptac_frac_1(dat_dir)

# load experiments
library(proteoQ)
load_expts()

# process MaxQuant PSMs
normPSM(
  group_psm_by = pep_seq, 
  group_pep_by = prot_acc, 
  fasta = c("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta", 
            "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_mm_2013_07.fasta"), 
  corrected_int = TRUE,
  rm_reverses = TRUE,
  rptr_intco = 3000,
  rm_craps = TRUE,
  rm_krts = FALSE,
  rm_outliers = FALSE, 
  annot_kinases = TRUE,	
  plot_rptr_int = TRUE, 
  plot_log2FC_cv = TRUE, 
  
  filter_peps = exprs(PEP <= 0.1), 
)

# unique peptides for quantitation;
# the levels of uniqueness according to `pep_unique_by`
normPSM(
  group_psm_by = pep_seq, 
  group_pep_by = prot_acc, 
  fasta = c("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta", 
            "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_mm_2013_07.fasta"), 
  corrected_int = TRUE,
  rm_reverses = TRUE,
  rptr_intco = 3000,
  rm_craps = TRUE,
  rm_krts = FALSE,
  rm_outliers = FALSE, 
  annot_kinases = TRUE,	
  plot_rptr_int = TRUE, 
  plot_log2FC_cv = TRUE, 
  
  # new column key `pep_isunique` not in original MaxQuant PSMs
  filter_peps = exprs(PEP <= 0.1, pep_isunique == 1), 
)

}

}
\seealso{
\code{\link{normPep}} for peptides and \code{\link{normPrn}} for
 proteins.
}
