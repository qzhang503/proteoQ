% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-go.R
\name{prepEntrez}
\alias{prepEntrez}
\title{Map UniProt accesions to Entrez IDs}
\usage{
prepEntrez(
  species = "human",
  abbr_species = NULL,
  filename = NULL,
  db_path = "~\\\\proteoQ\\\\dbs\\\\entrez",
  overwrite = FALSE
)
}
\arguments{
\item{species}{Character string; the name of a species.}

\item{abbr_species}{Two-letter character string; the abbreviated name of
species used with
\href{https://bioconductor.org/packages/release/data/annotation/html/org.Hs.eg.db.html}{org.Xx.eg.db}.
 The value of \code{abbr_species} will be determined automatically if the
species is in one of \code{c("human", "mouse", "rat")}. Otherwise, for
example, users need to provide \code{abbr_species = Ce} for fetching the
\code{org.Ce.eg.db} package in the name space of proteoQ. For
\href{http://current.geneontology.org/products/pages/downloads.html}{gene
ontology} and \href{https://www.gsea-msigdb.org/gsea/index.jsp}{Molecular
Signatures}, the argument is further applied to differentiate the same
biological terms under different species.}

\item{filename}{Character string; An output file name. At the \code{NULL}
default, the name will be determined automatically at a given
\code{species}; i.e., \code{msig_hs.rds} for \code{human} data. The file is
saved as a \code{.rds} object for uses with \code{\link{prnGSPA}}.}

\item{db_path}{Character string; the local path for database(s). The default
is \code{"~\\proteoQ\\dbs\\entrez"}.}

\item{overwrite}{Logical; if TRUE, overwrite the downloaded databse(s). The
default is FALSE.}
}
\description{
\code{prepEntrez} prepares lookup tables between UniProt accessions and Entrez
IDs for uses with \link{normPSM} and downstream gene-set analysis such as
\link{prnGSPA}. The utility is optional for \code{human}, \code{mouse} and
\code{rat} data. It is \strong{required} for other species with \link{prnGSPA}
in users' workflows. It can also be used to update and overrule the lookups
for \code{human}, \code{mouse} and \code{rat} that are defaulted by
\code{proteoQ}.
}
\examples{
\donttest{
## Update `human` and `mouse` entrez lookups
if (!requireNamespace("BiocManager", quietly = TRUE))
  install.packages("BiocManager")

BiocManager::install("org.Hs.eg.db")
BiocManager::install("org.Mm.eg.db")

library(org.Hs.eg.db)
library(org.Mm.eg.db)

library(proteoQ)
prepEntrez(human)
prepEntrez(mouse)

# my_entrez_hs <- readRDS(file.path("~\\proteoQ\\dbs\\entrez\\uniprot_entrez_hs.rds"))
# my_entrez_mm <- readRDS(file.path("~\\proteoQ\\dbs\\entrez\\uniprot_entrez_mm.rds"))

## Not run: 
# replace the default `entrez` lookups with custom databases in PSM normalization
normPSM(
  group_psm_by = pep_seq_mod, 
  group_pep_by = gene, 
  fasta = c("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta",
            "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_mm_2013_07.fasta"),
  entrez = c("~\\\\proteoQ\\\\dbs\\\\entrez\\\\uniprot_entrez_hs.rds", 
             "~\\\\proteoQ\\\\dbs\\\\entrez\\\\uniprot_entrez_mm.rds"),
)
## End(Not run)


## custom `species` name: 
prepEntrez(species = this_human, abbr_species = Hs, filename = my_human.rds)
prepEntrez(species = this_mouse, abbr_species = Mm, filename = my_mouse.rds)

## Not run: 
#  PSM and subsequent outputs under the column `species` 
#    will be shown as "this_human" or "this_mouse"
normPSM(
  group_psm_by = pep_seq_mod, 
  group_pep_by = gene, 
  fasta = c("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta",
            "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_mm_2013_07.fasta"),
  entrez = c("~\\\\proteoQ\\\\dbs\\\\entrez\\\\my_human.rds", 
             "~\\\\proteoQ\\\\dbs\\\\entrez\\\\my_mouse.rds"),
)
## End(Not run)


## Custom databases required for species other than `human`, `mouse` and `rat`
BiocManager::install("org.Hs.eg.db")
library(org.Ce.eg.db)

library(proteoQ)
prepEntrez(species = "worm", abbr_species = "Ce", filename = uniprot_entrez_ce.rds)

## Not run: 
normPSM(
  fasta = "~\\\\proteoQ\\\\dbs\\\\fasta\\\\specify_your_worm.fasta",
  entrez = c("~\\\\proteoQ\\\\dbs\\\\entrez\\\\uniprot_entrez_ce.rds"),
)
## End(Not run)


## Not run: 
# wrong fasta 
normPSM(
  fasta = "~\\\\proteoQ\\\\dbs\\\\fasta\\\\wrong.fasta",
)

# no mouse entry annotation
normPSM(
  fasta = "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta",
)

# bad vararg statement
normPSM(
  fasta = c("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta",
            "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_mm_2013_07.fasta"),
  filter_psms_at = exprs(column_key_not_in_psm_tables <= .1),
)
## End(Not run)



}
}
