% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-purge.R
\name{purgePep}
\alias{purgePep}
\title{Purge peptide data}
\usage{
purgePep(
  dat_dir = NULL,
  pt_cv = NULL,
  max_cv = NULL,
  adjSD = FALSE,
  keep_ohw = TRUE,
  col_select = NULL,
  col_order = NULL,
  filename = NULL,
  theme = NULL,
  ...
)
}
\arguments{
\item{dat_dir}{A character string to the working directory. The default is to
match the value under the global environment.}

\item{pt_cv}{Numeric between 0 and 1; the percentile of CV. Values above the
percentile threshold will be replaced with NA. The default is NULL with no
data trimming by CV percentile.}

\item{max_cv}{Numeric; the cut-off in maximum CV. Values above the threshold
will be replaced with NA. The default is NULL with no data trimming by max
CV.}

\item{adjSD}{Not currently used. If TRUE, adjust the standard
deviation in relative to the width of ratio profiles.}

\item{keep_ohw}{Logical; if TRUE, keep one-hit-wonders with unknown CV. The
default is TRUE.}

\item{col_select}{Character string to a column key in \code{expt_smry.xlsx}.
At the \code{NULL} default, the column key of \code{Select} in
\code{expt_smry.xlsx} will be used. In the case of no samples being
specified under \code{Select}, the column key of \code{Sample_ID} will be
used. The non-empty entries under the ascribing column will be used in
indicated analysis.}

\item{col_order}{Character string to a column key in \code{expt_smry.xlsx}.
Numeric values under which will be used for the left-to-right arrangement of
samples in graphic outputs or top-to-bottom arrangement in text outputs. At
the NULL default, the column key \code{Order} will be used. If values under
column \code{Order} are left blank, samples will be ordered by their names.}

\item{filename}{A representative file name to outputs. By default, the name(s)
will be determined automatically. For text files, a typical file extension
is \code{.txt}. For image files, they are typically saved via
\code{\link[ggplot2]{ggsave}} or \code{\link[pheatmap]{pheatmap}} where the
image type will be determined by the extension of the file name.}

\item{theme}{A
\code{\href{https://ggplot2.tidyverse.org/reference/ggtheme.html}{ggplot2}}
theme, i.e., theme_bw(), or a custom theme. At the NULL default, a system
theme will be applied.}

\item{...}{Additional parameters for plotting: \cr \code{ymax}, the maximum
\eqn{y} at a log2 scale. \cr \code{ybreaks}, the breaks in \eqn{y}-axis at a
log2 scale. \cr \code{width}, the width of plot. \cr \code{height}, the
height of plot. \cr \code{flip_coord}, logical; if TRUE, flip \code{x} and
\code{y} axis.}
}
\description{
\code{purgePep} removes \code{protein} entries from \code{Peptide.txt} by
selection criteria. It further plots the distributions of \code{log2FC}.
}
\details{
The CV of proteins under each sample are first calculated from contributing
peptides. In the event of multiple sereis of LC/MS injections, the CV of the
same protein from different LC/MS will be summarised by median statistics.

The data nullification will be applied column-wisely for all available
samples. Argument \code{col_select} is merely used to subsettng samples for
the visualization of \code{log2FC} distributions.
}
\examples{
# ===================================
# Peptide cleanup by CV
# ===================================

## !!!require the brief working example in `?load_expts`

## additional examples
# visualization only
purgePep()

# visualization of non-void entries under column `BI_1` in `expt_smry.xlsx`
purgePep(
  col_select = BI_1,
  width = 8,
  height = 8,
  filename = bi_1.png,
)

# by percent CV
purgePep(pt_cv = .95)

# by max CV
purgePep(max_cv = .5)

# by `max_cv` then by `pt_cv`
purgePep(max_cv = .5)
purgePep(pt_cv = .95)

# actually 90\% CV 
purgePep(pt_cv = .95)
purgePep(pt_cv = .95)

## custom theme
purgePep(dpi = 300, theme = theme_get(), filename = my_theme.png)
}
\seealso{
\code{\link{load_expts}} for a reduced working example in data normalization \cr

 \code{\link{normPSM}} for extended examples in PSM data normalization \cr
 \code{\link{PSM2Pep}} for extended examples in PSM to peptide summarization \cr 
 \code{\link{mergePep}} for extended examples in peptide data merging \cr 
 \code{\link{standPep}} for extended examples in peptide data normalization \cr
 \code{\link{Pep2Prn}} for extended examples in peptide to protein summarization \cr
 \code{\link{standPrn}} for extended examples in protein data normalization. \cr 
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in data purging \cr
 \code{\link{pepHist}} and \code{\link{prnHist}} for extended examples in histogram visualization. \cr 
 \code{\link{extract_raws}} and \code{\link{extract_psm_raws}} for extracting MS file names \cr 
 
 \code{\link{contain_str}}, \code{\link{contain_chars_in}}, \code{\link{not_contain_str}}, 
 \code{\link{not_contain_chars_in}}, \code{\link{start_with_str}}, 
 \code{\link{end_with_str}}, \code{\link{start_with_chars_in}} and 
 \code{\link{ends_with_chars_in}} for data subsetting by character strings \cr 
 
 \code{\link{pepImp}} and \code{\link{prnImp}} for missing value imputation \cr 
 \code{\link{pepSig}} and \code{\link{prnSig}} for significance tests \cr 
 \code{\link{pepVol}} and \code{\link{prnVol}} for volcano plot visualization \cr
}
