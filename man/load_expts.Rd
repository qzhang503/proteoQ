% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-params.R
\name{load_expts}
\alias{load_expts}
\title{Load TMT experiments}
\usage{
load_expts(
  dat_dir = NULL,
  expt_smry = "expt_smry.xlsx",
  frac_smry = "frac_smry.xlsx"
)
}
\arguments{
\item{dat_dir}{A character string to the working directory. The default is to
match the value under the global environment.}

\item{expt_smry}{A character string to the \code{.xlsx} file containing the
metadata of TMT experiments. The default is \code{expt_smry.xlsx}.}

\item{frac_smry}{A character string to the \code{.xlsx} file containing
peptide fractionation summary. The default is \code{frac_smry.xlsx}.}
}
\description{
\code{load_expts} processes \code{.xlsx} files containing the metadata of TMT
experiments
}
\section{\code{expt_smry.xlsx}}{
 The \code{expt_smry.xlsx} files should be
 located immediately under the file folder defined by \code{dat_dir}. The tab
 containing the metadata of TMT experiments should be named \code{Setup}. The
 \code{Excel} spread sheet therein is comprised of three tiers of fields: (1)
 essential, (2) optional default and (3) optional open. The \code{essential}
 columns contain the mandatory information of TMT experiments. The
 \code{optional default} columns serve as the fields for default lookups in
 sample selection, grouping, ordering, aesthetics, etc. The \code{optional
 open} fields allow users to define their own analysis, aesthetics, etc.

 \tabular{ll}{ \strong{Essential column}   \tab \strong{Descrption}\cr
 Sample_ID \tab Unique sample IDs \cr TMT_Channel \tab TMT channel names:
 \code{126}, \code{127N}, \code{127C} et al. \cr TMT_Set \tab TMT experiment
 indeces 1, 2, 3, ... \cr LCMS_Injection   \tab LC/MS injection indeces 1, 2,
 3, ... under a \code{TMT_Set} \cr RAW_File \tab MS data file names
 originated by \code{Xcalibur} with or without the \code{.raw} extension \cr
 Reference \tab Labels indicating reference samples in TMT experiments \cr }

 \code{Sample_ID}: values should be unique for entries at a unique
 combination of \code{TMT_Channel} and \code{TMT_Set}, or left blank for
 unused entries. Samples with the same indeces of \code{TMT_Channel} and
 \code{TMT_Set} but different indeces of \code{LCMS_Injection} should have
 the same value in \code{Sample_ID}. No white space or special characters are
 allowed.

 \code{RAW_File}: for analysis with off-line fractionations of peptides
 before LC/MS, the \code{RAW_File} column should be left blank. Instead, the
 correspondence between the fraction numbers and \code{RAW_File} names should
 be specified in a separate file, for example, \code{frac_smry.xlsx}. For
 analysis without off-line fractionations, it is recommended as well to leave
 the field under the \code{RAW_File} column blank and instead enter the MS
 file names in \code{frac_smry.xlsx}.

 The set of \code{RAW_File} names in \code{frac_smry.xlsx} needs to be
 identical to those in PSM data. Note that \code{OS} file names may be
 altered by MS users and thus different to those recorded in \code{Xcalibur}.
 The original names by \code{Xcalibur} should be used. MS files may
 occasionally have no contributions to PSM findings. These MS file names
 should be removed from \code{frac_smry.xlsx}.

 Utilities \code{extract_raws()} and \code{extract_psm_raws()} may aid
 matching MS file names between \code{frac_smry.xlsx} and PSM data. Utility
 \code{extract_raws()} extracts the list of MS file names under a file
 folder. For help, try \code{?extract_raws}. Utility
 \code{extract_psm_raws()} extracts the list of MS file names that are
 actually present in PSM data. For help, try \code{?extract_psm_raws}.

 \code{Reference}: reference entrie(s) are indicated with non-void string(s).

 \tabular{ll}{ \strong{Optional default column}   \tab \strong{Descrption}\cr
 Select \tab Samples to be selected for indicated analysis \cr Group \tab
 Aesthetic labels annotating the prior knowledge of sample groups, e.g.,
 Ctrl_T1, Ctrl_T2, Disease_T1, Disease_T2, ...\cr Order \tab Numeric labels
 specifying the order of sample \code{groups} \cr Fill \tab Aesthetic labels
 for sample annotation by filled color\cr Color \tab Aesthetic labels for
 sample annotation by edge color\cr Shape \tab Aesthetic labels for sample
 annotation by shape\cr Size \tab Aesthetic labels for sample annotation by
 size \cr Alpha \tab Aesthetic labels for sample annotation by transparency
 \cr \cr}

 \tabular{ll}{ \strong{Exemplary optional open column}   \tab
 \strong{Descrption}\cr Term \tab Categorial terms for statistical modeling.
 \cr Duplicate \tab Indicators of duplicated samples for corrections in
 statistical significance \cr Peptide_Yield \tab Yields of peptides in sample
 handling \cr}
}

\section{\code{frac_smry.xlsx}}{
 \tabular{ll}{ \strong{Column}   \tab
 \strong{Descrption}\cr TMT_Set \tab v.s.  \cr LCMS_Injection   \tab v.s. \cr
 Fraction \tab Fraction indeces under a \code{TMT_Set} \cr RAW_File \tab v.s.
 }
}

\examples{
\donttest{
# ===================================
# Fasta and PSM files
# ===================================
# fasta (all platforms)
library(proteoQDA)
fasta_dir <- "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq"
dir.create(fasta_dir, recursive = TRUE, showWarnings = FALSE)
copy_refseq_hs(fasta_dir)
copy_refseq_mm(fasta_dir)

# working directory (all platforms)
dat_dir <- "~\\\\proteoQ\\\\examples"
dir.create(dat_dir, recursive = TRUE, showWarnings = FALSE)

# metadata (all platforms)
copy_global_exptsmry(dat_dir)
copy_global_fracsmry(dat_dir)

# PSM (choose one of the platforms)
choose_one <- TRUE
if (!choose_one) {
  # Mascot
  copy_global_mascot(dat_dir)
  
  # or MaxQuant
  copy_global_maxquant(dat_dir)
  
  # or Spectrum Mill
  copy_global_sm(dat_dir)
}


# ===================================
# PSM, peptide and protein processing
# ===================================
library(proteoQ)
dat_dir <- "~\\\\proteoQ\\\\examples"
load_expts()

# PSM data standardization
normPSM(
  # alternative to default
  group_psm_by = pep_seq_mod, 
  group_pep_by = gene, 
  annot_kinases = TRUE, 
  
  # no default and required
  fasta = c("~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_hs_2013_07.fasta",
            "~\\\\proteoQ\\\\dbs\\\\fasta\\\\refseq\\\\refseq_mm_2013_07.fasta"),
)

# optional PSM purging
purgePSM()

# PSMs to peptides
PSM2Pep()

# peptide data merging
mergePep()

# peptide data standardization
standPep()

# peptide data histograms
pepHist()

# optional peptide purging
purgePep()

# peptides to proteins
Pep2Prn(use_unique_pep = TRUE)

# protein data standardization
standPrn()

# protein data histograms
prnHist()

# ===================================
# Optional significance tests
# (no NA imputation)
# ===================================
pepSig(
  impute_na = FALSE, 
  W2_bat = ~ Term["W2.BI.TMT2-W2.BI.TMT1", 
                  "W2.JHU.TMT2-W2.JHU.TMT1", 
                  "W2.PNNL.TMT2-W2.PNNL.TMT1"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = FALSE)

# ===================================
# optional NA imputation
# ===================================
pepImp(m = 2, maxit = 2)
prnImp(m = 5, maxit = 5)

# ===================================
# Optional significance tests
# (with NA imputation)
# ===================================
pepSig(
  impute_na = TRUE, 
  W2_bat = ~ Term["W2.BI.TMT2-W2.BI.TMT1", 
                  "W2.JHU.TMT2-W2.JHU.TMT1", 
                  "W2.PNNL.TMT2-W2.PNNL.TMT1"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = TRUE)

}
}
\seealso{
\emph{Data normalization} \cr 
 \code{\link{normPSM}} for extended examples in PSM data normalization \cr
 \code{\link{PSM2Pep}} for extended examples in PSM to peptide summarization \cr 
 \code{\link{mergePep}} for extended examples in peptide data merging \cr 
 \code{\link{standPep}} for extended examples in peptide data normalization \cr
 \code{\link{Pep2Prn}} for extended examples in peptide to protein summarization \cr
 \code{\link{standPrn}} for extended examples in protein data normalization. \cr 
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in data purging \cr
 \code{\link{pepHist}} and \code{\link{prnHist}} for extended examples in histogram visualization. \cr 
 \code{\link{extract_raws}} and \code{\link{extract_psm_raws}} for extracting MS file names \cr

\emph{Variable arguments of `filter_...`} \cr 
 \code{\link{contain_str}}, \code{\link{contain_chars_in}}, \code{\link{not_contain_str}}, 
 \code{\link{not_contain_chars_in}}, \code{\link{start_with_str}}, 
 \code{\link{end_with_str}}, \code{\link{start_with_chars_in}} and 
 \code{\link{ends_with_chars_in}} for data subsetting by character strings \cr

\emph{Missing values} \cr 
 \code{\link{pepImp}} and \code{\link{prnImp}} for missing value imputation \cr

\emph{Informatics} \cr 
 \code{\link{pepSig}} and \code{\link{prnSig}} for significance tests \cr 
 \code{\link{pepVol}} and \code{\link{prnVol}} for volcano plot visualization \cr 
 \code{\link{prnGSPA}} for gene set enrichment analysis by protein significance pVals \cr 
 \code{\link{gspaMap}} for mapping GSPA to volcano plot visualization \cr 
 \code{\link{prnGSPAHM}} for heat map and network visualization of GSPA results \cr 
 \code{\link{prnGSVA}} for gene set variance analysis \cr 
 \code{\link{prnGSEA}} for data preparation for online GSEA. \cr 
 \code{\link{pepMDS}} and \code{\link{prnMDS}} for MDS visualization \cr 
 \code{\link{pepPCA}} and \code{\link{prnPCA}} for PCA visualization \cr 
 \code{\link{pepHM}} and \code{\link{prnHM}} for heat map visualization \cr 
 \code{\link{pepCorr_logFC}}, \code{\link{prnCorr_logFC}}, \code{\link{pepCorr_logInt}} and 
 \code{\link{prnCorr_logInt}}  for correlation plots \cr 
 \code{\link{anal_prnTrend}} and \code{\link{plot_prnTrend}} for trend analysis and visualization \cr 
 \code{\link{anal_pepNMF}}, \code{\link{anal_prnNMF}}, \code{\link{plot_pepNMFCon}}, 
 \code{\link{plot_prnNMFCon}}, \code{\link{plot_pepNMFCoef}}, \code{\link{plot_prnNMFCoef}} and 
 \code{\link{plot_metaNMF}} for NMF analysis and visualization \cr

\emph{Custom databases} \cr 
 \code{\link{prepEntrez}} for lookups between UniProt accessions and Entrez IDs \cr 
 \code{\link{prepGO}} for \code{\href{http://current.geneontology.org/products/pages/downloads.html}{gene 
 ontology}} \cr 
 \code{\link{prepMSig}} for \href{https://data.broadinstitute.org/gsea-msigdb/msigdb/release/7.0/}{molecular 
 signatures} \cr 
 \code{\link{dl_stringdbs}} and \code{\link{anal_prnString}} for STRING-DB \cr
 
 \emph{Column keys in PSM, peptide and protein outputs} \cr 
 # Mascot \cr
 system.file("extdata", "mascot_psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "mascot_peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "mascot_protein_keys.txt", package = "proteoQ") \cr
 
 # MaxQuant \cr
 system.file("extdata", "maxquant_psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "maxquant_peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "maxquant_protein_keys.txt", package = "proteoQ") \cr
}
\concept{basic informatics}
\concept{custom database preparation}
\concept{data row filtration}
\concept{missing value imputation}
\concept{normalization functions}
