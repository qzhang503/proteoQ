% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-peptable.R
\name{mergePep}
\alias{mergePep}
\title{Merge peptide table(s) into one}
\usage{
mergePep(plot_log2FC_cv = TRUE, ...)
}
\arguments{
\item{plot_log2FC_cv}{Logical; if TRUE, the distributions of the CV of peptide
\code{log2FC} will be plotted. The default is TRUE.}

\item{...}{\code{filter_}: Variable argument statements for the row filtration
of data against the column keys in individual peptide tables of
\code{TMTset1_LCMSinj1_Peptide_N.txt, TMTset1_LCMSinj2_Peptide_N.txt}, etc.
\cr \cr The variable argument statements should be in the following format:
each statement contains to a list of logical expression(s). The \code{lhs}
needs to start with \code{filter_}. The logical condition(s) at the
\code{rhs} needs to be enclosed in \code{exprs} with round parenthesis. For
example, \code{pep_len} is a column key present in \code{Mascot} peptide
tables of \code{TMTset1_LCMSinj1_Peptide_N.txt},
\code{TMTset1_LCMSinj2_Peptide_N.txt} etc. The statement
\code{filter_peps_at = exprs(pep_len <= 50)} will remove peptide entries
with \code{pep_len > 50}. See also \code{\link{normPSM}}.}
}
\value{
The primary output is in \code{...\\Peptide\\Peptide.txt}.
}
\description{
\code{mergePep} merges individual peptide table(s),
\code{TMTset1_LCMSinj1_Peptide_N.txt, TMTset1_LCMSinj2_Peptide_N.txt} etc.,
into one interim \code{Peptide.txt}. The \code{log2FC} values in the interim
result are centered with the medians at zero (median centering). The utility
is typically applied after the conversion of PSMs to peptides via
\code{\link{PSM2Pep}} and is required even for a experiment with one multiplex
TMT and one LCMS injection.
}
\details{
In the interim output file, "\code{Peptide.txt}", values under columns
\code{log2_R...} are logarithmic ratios at base 2 in relative to the
\code{reference(s)} within each multiplex TMT set, or to the row means if no
\code{reference(s)} are present. Values under columns \code{N_log2_R...} are
median-centered \code{log2_R...} without scaling normalization. Values under
columns \code{Z_log2_R...} are \code{N_log2_R...} with additional scaling
normalization. Values under columns \code{I...} are \code{reporter-ion
intensity} before normalization. Values under columns \code{N_I...} are
normalized \code{I...}. Values under columns \code{sd_log2_R...} are the
standard deviation of the \code{log2FC} of proteins from ascribing peptides.

Description of the column keys in the output: \cr \code{system.file("extdata",
"mascot_peptide_keys.txt", package = "proteoQ")} \cr
\code{system.file("extdata", "maxquant_peptide_keys.txt", package =
"proteoQ")}

The peptide counts in individual peptide tables,
\code{TMTset1_LCMSinj1_Peptide_N.txt} etc., may be fewer than the entries
indicated under the \code{prot_n_pep} column after the peptide
removals/cleanups using \code{purgePSM}.
}
\examples{
\donttest{
# ===================================
# Merge peptide data
# ===================================

## !!!require the brief working example in `?load_expts`

# everything included
mergePep()

# row filtrations aganist column keys in `TMTset1_LCMSinj1_Peptide_N.txt`...
# (with Mascot column keys)
mergePep(
  filter_peps_by_sp = exprs(species == "human", pep_len <= 50),
)

# (with MaxQuant column keys)
mergePep(
  filter_peps_by_sp = exprs(species == "human", `Missed cleavages` <= 3),
)

# (with Spectrum Mill column keys)
mergePep(
  filter_peps_by_sp = exprs(species == "human", pep_miss <= 3),
)
}
}
\seealso{
\emph{Metadata} \cr 
 \code{\link{load_expts}} for metadata preparation and a reduced working example in data normalization \cr

 \emph{Data normalization} \cr 
 \code{\link{normPSM}} for extended examples in PSM data normalization \cr
 \code{\link{PSM2Pep}} for extended examples in PSM to peptide summarization \cr 
 \code{\link{mergePep}} for extended examples in peptide data merging \cr 
 \code{\link{standPep}} for extended examples in peptide data normalization \cr
 \code{\link{Pep2Prn}} for extended examples in peptide to protein summarization \cr
 \code{\link{standPrn}} for extended examples in protein data normalization. \cr 
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in data purging \cr
 \code{\link{pepHist}} and \code{\link{prnHist}} for extended examples in histogram visualization. \cr 
 \code{\link{extract_raws}} and \code{\link{extract_psm_raws}} for extracting MS file names \cr 
 
 \emph{Variable arguments of `filter_...`} \cr 
 \code{\link{contain_str}}, \code{\link{contain_chars_in}}, \code{\link{not_contain_str}}, 
 \code{\link{not_contain_chars_in}}, \code{\link{start_with_str}}, 
 \code{\link{end_with_str}}, \code{\link{start_with_chars_in}} and 
 \code{\link{ends_with_chars_in}} for data subsetting by character strings \cr 
 
 \emph{Missing values} \cr 
 \code{\link{pepImp}} and \code{\link{prnImp}} for missing value imputation \cr 
 
 \emph{Informatics} \cr 
 \code{\link{pepSig}} and \code{\link{prnSig}} for significance tests \cr 
 \code{\link{pepVol}} and \code{\link{prnVol}} for volcano plot visualization \cr 
 \code{\link{prnGSPA}} for gene set enrichment analysis by protein significance pVals \cr 
 \code{\link{gspaMap}} for mapping GSPA to volcano plot visualization \cr 
 \code{\link{prnGSPAHM}} for heat map and network visualization of GSPA results \cr 
 \code{\link{prnGSVA}} for gene set variance analysis \cr 
 \code{\link{prnGSEA}} for data preparation for online GSEA. \cr 
 \code{\link{pepMDS}} and \code{\link{prnMDS}} for MDS visualization \cr 
 \code{\link{pepPCA}} and \code{\link{prnPCA}} for PCA visualization \cr 
 \code{\link{pepHM}} and \code{\link{prnHM}} for heat map visualization \cr 
 \code{\link{pepCorr_logFC}}, \code{\link{prnCorr_logFC}}, \code{\link{pepCorr_logInt}} and 
 \code{\link{prnCorr_logInt}}  for correlation plots \cr 
 \code{\link{anal_prnTrend}} and \code{\link{plot_prnTrend}} for trend analysis and visualization \cr 
 \code{\link{anal_pepNMF}}, \code{\link{anal_prnNMF}}, \code{\link{plot_pepNMFCon}}, 
 \code{\link{plot_prnNMFCon}}, \code{\link{plot_pepNMFCoef}}, \code{\link{plot_prnNMFCoef}} and 
 \code{\link{plot_metaNMF}} for NMF analysis and visualization \cr 
 
 \emph{Custom databases} \cr 
 \code{\link{prepEntrez}} for lookups between UniProt accessions and Entrez IDs \cr
 \code{\link{prepGO}} for \code{\href{http://current.geneontology.org/products/pages/downloads.html}{gene 
 ontology}} \cr 
 \code{\link{prepMSig}} for \href{https://data.broadinstitute.org/gsea-msigdb/msigdb/release/7.0/}{molecular 
 signatures} \cr 
 \code{\link{dl_stringdbs}} and \code{\link{anal_prnString}} for STRING-DB \cr
 
 \emph{Column keys in PSM, peptide and protein outputs} \cr 
 # Mascot \cr
 system.file("extdata", "mascot_psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "mascot_peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "mascot_protein_keys.txt", package = "proteoQ") \cr
 
 # MaxQuant \cr
 system.file("extdata", "maxquant_psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "maxquant_peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "maxquant_protein_keys.txt", package = "proteoQ") \cr
}
