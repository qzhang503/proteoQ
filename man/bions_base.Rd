% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ion_ladder.R
\name{byions}
\alias{byions}
\alias{czions}
\alias{axions}
\alias{bions_base}
\alias{yions_base}
\alias{b2ions_base}
\alias{bstarions}
\alias{bstar2ions}
\alias{b0ions}
\alias{b02ions}
\alias{y2ions}
\alias{ystarions}
\alias{ystar2ions}
\alias{y0ions}
\alias{y02ions}
\alias{cions_base}
\alias{c2ions}
\alias{zions_base}
\alias{z2ions}
\alias{aions_base}
\alias{a2ions}
\alias{astarions}
\alias{astar2ions}
\alias{a0ions}
\alias{a02ions}
\alias{xions}
\alias{x2ions}
\title{Masses of singly-charged b- and y-ions.}
\usage{
byions(ntmass, ctmass, aas2, digits = 4L)

czions(ntmass, ctmass, aas2, digits = 4L)

axions(ntmass, ctmass, aas2, digits = 4L)

bions_base(aas2, tmass, digits = 4L)

yions_base(aas2, tmass, digits = 4L)

b2ions_base(aas2, tmass, digits = 4L)

bstarions(aas2, tmass, digits = 4L)

bstar2ions(aas2, tmass, digits = 4L)

b0ions(aas2, tmass, digits = 4L)

b02ions(aas2, tmass, digits = 4L)

y2ions(aas2, tmass, digits = 4L)

ystarions(aas2, tmass, digits = 4L)

ystar2ions(aas2, tmass, digits = 4L)

y0ions(aas2, tmass, digits = 4L)

y02ions(aas2, tmass, digits = 4L)

cions_base(aas2, tmass, digits = 4L)

c2ions(aas2, tmass, digits = 4L)

zions_base(aas2, tmass, digits = 4L)

z2ions(aas2, tmass, digits = 4L)

aions_base(aas2, tmass, digits = 4L)

a2ions(aas2, tmass, digits = 4L)

astarions(aas2, tmass, digits = 4L)

astar2ions(aas2, tmass, digits = 4L)

a0ions(aas2, tmass, digits = 4L)

a02ions(aas2, tmass, digits = 4L)

xions(aas2, tmass, digits = 4L)

x2ions(aas2, tmass, digits = 4L)
}
\arguments{
\item{aas2}{A sequence of amino-acid residues with \emph{masses}. Residues
  are in names and masses in values.

  The masses reflects fixed/variable modifications, and/or fixed/variable
  neutral losses.}

\item{digits}{Integer; the number of decimal places to be used.}

\item{tmass}{The mass of a fixed or variable N-term or C-term modification.}
}
\description{
For (1) "amods- tmod- vnl- fnl-", (2) "amods- tmod+ vnl- fnl-".
}
\examples{
\donttest{
## (1) "amods- tmod- vnl- fnl-"
# (Fixed N-term mods; also for no N-term mod)

fixedmods = c("TMT6plex (N-term)", "TMT6plex (K)", "Carbamidomethyl (C)")
varmods = c("Oxidation (M)", "Deamidated (N)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))

aa_masses_all <- calc_aamasses(fixedmods, varmods, add_varmasses = FALSE,
                               add_nlmasses = FALSE)

aa_masses = aa_masses_all[[1]]

ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549 # - electron
} else {
  ntmass <- aa_masses[names(ntmod)] - 0.000549
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147 # + (H) + (H+)
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

aa_seq <- "MAKEMASSPECFUN"
aas <- str_split(aa_seq, "", simplify = TRUE)
aas2 <- aa_masses[aas]

b <- bions_base(aas2, ntmass)
y <- yions_base(aas2, ctmass)


## (2) "amods- tmod+ vnl- fnl-"
# (2a, N-term)
fixedmods = c("TMT6plex (K)", "Carbamidomethyl (C)")
varmods = c("TMT6plex (N-term)", "Acetyl (Protein N-term)", "Oxidation (M)",
            "Deamidated (N)", "Gln->pyro-Glu (N-term = Q)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))

aa_masses_all <- calc_aamasses(fixedmods, varmods, add_varmasses = FALSE,
                               add_nlmasses = FALSE)

aa_masses = aa_masses_all[[3]]

# (Fixed or variable C-term mods +/- makes no difference on b-ions;
# and vice versa for y-ions)
ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549
} else {
  ntmass <- aa_masses[names(ntmod)] - 0.000549
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

aa_seq <- "MAKEMASSPECFUN"
aas <- str_split(aa_seq, "", simplify = TRUE)
aas2 <- aa_masses[aas]

b <- bions_base(aas2, ntmass)
y <- yions_base(aas2, ctmass)


# (2b, C-term)
fixedmods = c("TMT6plex (K)", "Carbamidomethyl (C)")
varmods = c("TMT6plex (N-term)", "Amidated (Protein C-term)", "Oxidation (M)",
            "Deamidated (N)", "Gln->pyro-Glu (N-term = Q)")

mod_indexes <- seq_along(c(fixedmods, varmods)) \%>\%
  as.hexmode() \%>\%
  `names<-`(c(fixedmods, varmods))

aa_masses_all <- calc_aamasses(fixedmods, varmods, add_varmasses = FALSE,
                               add_nlmasses = FALSE)

# `TMT6plex (N-term)`; `Amidated (Protein C-term)`
aa_masses = aa_masses_all[[7]]

ntmod <- attr(aa_masses, "ntmod", exact = TRUE)
ctmod <- attr(aa_masses, "ctmod", exact = TRUE)

if (is_empty(ntmod)) {
  ntmass <- aa_masses["N-term"] - 0.000549
} else {
  ntmass <- aa_masses[names(ntmod)] - 0.000549
}

if (is_empty(ctmod)) {
  ctmass <- aa_masses["C-term"] + 2.01510147
} else {
  ctmass <- aa_masses[names(ctmod)] + 2.01510147
}

b <- bions_base(aas2, ntmass)
y <- yions_base(aas2, ctmass)

}
}
\seealso{
\link{add_complement_ions}
}
