% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-mds.R
\name{proteoPCA}
\alias{proteoPCA}
\alias{pepPCA}
\alias{prnPCA}
\title{Visualization of PCA plots}
\usage{
proteoPCA(id = gene, type = "obs", col_select = NULL,
  col_group = NULL, col_color = NULL, col_fill = NULL,
  col_shape = NULL, col_size = NULL, col_alpha = NULL,
  color_brewer = NULL, fill_brewer = NULL, size_manual = NULL,
  shape_manual = NULL, alpha_manual = NULL, scale_log2r = TRUE,
  complete_cases = FALSE, impute_na = FALSE, show_ids = TRUE,
  annot_cols = NULL, df = NULL, filepath = NULL, filename = NULL,
  ...)

pepPCA(...)

prnPCA(...)
}
\arguments{
\item{id}{Character string to indicate the type of data. The value will be
determined automatically. Peptide data will be used at \code{id = pep_seq}
or \code{pep_seq_mod}, and protein data will be used at \code{id = prot_acc}
or \code{gene}.}

\item{type}{Character string indicating the type of PCA. At the \code{type =
obs} default, the components are by observations; at \code{type = feats},
the components are by features.}

\item{col_select}{Character string to a column key in \code{expt_smry.xlsx}.
At the \code{NULL} default, the column key of \code{Select} in
\code{expt_smry.xlsx} will be used. In the case of no samples being
specified under \code{Select}, the column key of \code{Sample_ID} will be
used. The non-empty entries under the ascribing column will be used in
indicated analysis.}

\item{col_group}{Not used.}

\item{col_color}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{color} aesthetics in plots. At
the NULL default, the column key \code{Color} will be used.}

\item{col_fill}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{fill} aesthetics in plots. At
the NULL default, the column key \code{Fill} will be used.}

\item{col_shape}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{shape} aesthetics in plots. At
the NULL default, the column key \code{Shape} will be used.}

\item{col_size}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{size} aesthetics in plots. At
the NULL default, the column key \code{Size} will be used.}

\item{col_alpha}{Character string to a column key in \code{expt_smry.xlsx}.
Values under which will be used for the \code{alpha} (transparency)
aesthetics in plots. At the NULL default, the column key \code{Alpha} will
be used.}

\item{color_brewer}{Character string to the name of a color brewer for use in
\href{https://ggplot2.tidyverse.org/reference/scale_brewer.html}{ggplot2::scale_color_brewer},
 i.e., \code{color_brewer = Set1}. At the NULL default, the setting in
\code{ggplot2} will be used.}

\item{fill_brewer}{Character string to the name of a color brewer for use in
\href{https://ggplot2.tidyverse.org/reference/scale_brewer.html}{ggplot2::scale_fill_brewer},
 i.e., \code{fill_brewer = Spectral}. At the NULL default, the setting in
\code{ggplot2} will be used.}

\item{size_manual}{Numeric vector to the scale of sizes for use in
\href{https://ggplot2.tidyverse.org/reference/scale_manual.html}{ggplot2::scale_size_manual},
 i.e., \code{size_manual = c(8, 12)}. At the NULL default, the setting in
\code{ggplot2} will be used.}

\item{shape_manual}{Numeric vector to the scale of shape IDs for use in
\href{https://ggplot2.tidyverse.org/reference/scale_manual.html}{ggplot2::scale_shape_manual},
 i.e., \code{shape_manual = c(5, 15)}. At the NULL default, the setting in
\code{ggplot2} will be used.}

\item{alpha_manual}{Numeric vector to the scale of transparency of objects for
use in
\href{https://ggplot2.tidyverse.org/reference/scale_manual.html}{ggplot2::scale_alpha_manual}
 , i.e., \code{alpha_manual = c(.5, .9)}. At the NULL default, the setting
in \code{ggplot2} will be used.}

\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation across all samples. The default is TRUE.}

\item{complete_cases}{Logical; always TRUE for PCA.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used. The default is FALSE.}

\item{show_ids}{Logical; if TRUE, shows the sample IDs in \code{MDS/PCA}
plots. The default is TRUE.}

\item{annot_cols}{Not used.}

\item{df}{The name of input data file. By default, it will be determined
automatically after matching the data type with an \code{id} among
\code{c("pep_seq", "pep_seq_mod", "prot_acc", "gene")}.}

\item{filepath}{A file path to output results. By default, it will be
determined automatically by the name of the calling function and the value
of \code{id} in the \code{call}.}

\item{filename}{A representative file name to outputs. By default, the name(s)
will be determined automatically. For text files, a typical file extension
is \code{.txt}. For image files, they are typically saved via
\code{\link[ggplot2]{ggsave}} or \code{\link[pheatmap]{pheatmap}} where the
image type will be determined by the extension of the file name.}

\item{...}{\code{filter_}: Logical expression(s) for the row filtration of
data; also see \code{\link{normPSM}}. \cr \cr Additional parameters for
\code{ggsave}: \cr \code{width}, the width of plot; \cr \code{height}, the
height of plot \cr \code{...}}
}
\value{
PCA plots.
}
\description{
\code{proteoPCA} visualizes the results from principal component analysis
(PCA). Users should avoid calling the method directly, but instead use the
following wrappers.

\code{pepPCA} is a wrapper of \code{\link{proteoPCA}} for peptide data.

\code{prnPCA} is a wrapper of \code{\link{proteoPCA}} for protein data
}
\details{
\code{log2FC} are used in PCA (\code{\link[stats]{prcomp}}).
}
\examples{
# ===================================
# PCA
# ===================================

## !!!require the brief working example in `?load_expts`

## global option
scale_log2r <- TRUE

# peptides, all samples
pepPCA(
  col_select = Select, 
  filter_peps_by = exprs(pep_n_psm >= 10),
  show_ids = FALSE, 
  filename = "peps_rowfil.png",
)

# peptides, samples under column `BI`
pepPCA(
  col_select = BI, 
  col_shape = Shape,   
  col_color = Alpha, 
  filter_peps_by = exprs(pep_n_psm >= 10),
  show_ids = FALSE, 
  filename = "peps_rowfil_colsel.png",
)

# proteins
prnPCA(
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filename = "prns_rowfil.png",
)

# proteins, custom palette
prnPCA(
  col_shape = Shape,
  color_brewer = Set1,
  show_ids = FALSE,
  filename = "my_palette.png",
)

# proteins, by features
prnPCA(
  type = feats,
  scale_log2r = TRUE,
  filename = "by_feats.png",
)

## additional row filtration by pVals (proteins, impute_na = FALSE)
# if not yet, run prerequisitive significance tests at `impute_na = FALSE`
pepSig(
  impute_na = FALSE, 
  W2_bat = ~ Term["(W2.BI.TMT2-W2.BI.TMT1)", 
                  "(W2.JHU.TMT2-W2.JHU.TMT1)", 
                  "(W2.PNNL.TMT2-W2.PNNL.TMT1)"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = FALSE)

# (`W16_vs_W2.pVal (W16-W2)` now a column key)
prnPCA(
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = pvalcutoff.png, 
)

# analogous peptides
prnPCA(
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = pvalcutoff.png, 
)

## additional row filtration by pVals (proteins, impute_na = TRUE)
# if not yet, run prerequisitive NA imputation
pepImp(m = 2, maxit = 2)
prnImp(m = 5, maxit = 5)

# if not yet, run prerequisitive significance tests at `impute_na = TRUE`
pepSig(
  impute_na = TRUE, 
  W2_bat = ~ Term["(W2.BI.TMT2-W2.BI.TMT1)", 
                  "(W2.JHU.TMT2-W2.JHU.TMT1)", 
                  "(W2.PNNL.TMT2-W2.PNNL.TMT1)"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = TRUE)

prnPCA(
  impute_na = TRUE,
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = filpvals_impna.png, 
)

# analogous peptides
prnPCA(
  impute_na = TRUE,
  col_color = Color,
  col_shape = Shape,
  show_ids = FALSE,
  filter_peps_by = exprs(prot_n_pep >= 5),
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = filpvals_impna.png,
)

## Not run: 
prnPCA(
  col_color = "column_key_not_existed",
  col_shape = "another_missing_column_key"
)
## End(Not run)


}
\seealso{
\code{\link{load_expts}} for a reduced working example in data
 normalization \cr \code{\link{normPSM}} for extended examples in PSM data
 normalization \cr \code{\link{PSM2Pep}} for extended examples in PSM to
 peptide summarization \cr \code{\link{mergePep}} for extended examples in
 peptide data merging \cr \code{\link{standPep}} for extended examples in
 peptide data normalization \cr \code{\link{Pep2Prn}} for extended examples
 in peptide to protein summarization \cr \code{\link{standPrn}} for extended
 examples in protein data normalization. \cr \code{\link{pepHist}} and
 \code{\link{prnHist}} for extended examples in histogram visualization. \cr
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in
 data purging \cr \code{\link{contain_str}}, \code{\link{contain_chars_in}},
 \code{\link{not_contain_str}}, \code{\link{not_contain_chars_in}},
 \code{\link{start_with_str}}, \code{\link{end_with_str}},
 \code{\link{start_with_chars_in}} and \code{\link{ends_with_chars_in}} for
 data subsetting by character strings \cr \code{\link{pepImp}} and
 \code{\link{prnImp}} for missing value imputation \cr \code{\link{pepSig}}
 and \code{\link{prnSig}} for significance tests \cr \code{\link{pepHM}} and
 \code{\link{prnHM}} for heat map visualization \cr \code{\link{pepMDS}} and
 \code{\link{prnMDS}} for MDS visualization \cr
}
