% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-sigtests.R
\name{proteoSigtest}
\alias{proteoSigtest}
\alias{pepSig}
\alias{prnSig}
\title{Significance tests}
\usage{
proteoSigtest(df = NULL, id = gene, scale_log2r = TRUE,
  filepath = NULL, filename = NULL, impute_na = TRUE,
  complete_cases = FALSE, method = "limma", var_cutoff = 0.001,
  pval_cutoff = 1, logFC_cutoff = log2(1), ...)

pepSig(...)

prnSig(...)
}
\arguments{
\item{df}{The name of input data file. By default, it will be determined
automatically by the value of \code{id}.}

\item{id}{Character string to indicate the type of data. The value will be
determined automatically by the program. Peptide data will be used at
\code{id = pep_seq} or \code{pep_seq_mod}, and protein data will be used at
\code{id = prot_acc} or \code{gene}.}

\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation for all samples.}

\item{filepath}{A file path to output results. By default, it will be
determined automatically by the name of the calling function and the value
of \code{id} in the \code{call}.}

\item{filename}{A file name to output results: \code{Peptide_pVals.txt} for
peptides and \code{Protein_pVals} for proteins.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used.}

\item{complete_cases}{Logical; if TRUE, only cases that are complete with no
missing values will be used.}

\item{method}{Character string; the method of linear modeling. The default is
\code{limma}. At \code{method = lm}, the \code{lm()} in base R will be used
for models without random effects and the \code{\link[lmerTest]{lmer}} will
be used for models with random effects.}

\item{var_cutoff}{Numeric; the cut-off in the variances of \code{log2FC}.
Entries with variances smaller than the threshold will be removed from
linear modeling.}

\item{pval_cutoff}{Numeric; the cut-off in significance \code{pVal}. Entries
with \code{pVals} smaller than the threshold will be removed from multiple
test corrections.}

\item{logFC_cutoff}{Numeric; the cut-off in \code{log2FC}. Entries with
\code{log2FC} smaller than the threshold will be removed from multiple test
corrections.}

\item{...}{User-defined formulae for linear modeling. The syntax starts with a
tilde, followed by the name of an available column key in
\code{expt_smry.xlsx} and square brackets. The contrast groups are then
quoted with multiple contrast groups separated by commas. Additive random
effects are indicated by \code{+ (1|col_key_1) + (1|col_key_2)}... \cr \cr
\code{filter_}: Logical expression(s) for the row filtration of data; also
see \code{\link{normPSM}}.}
}
\value{
The primary output is
 \code{~\\dat_dir\\Peptide\\Model\\Peptide_pVals.txt} for peptide data or
 \code{~\\dat_dir\\Protein\\Model\\Protein_pVals.txt} for protein data.
}
\description{
\code{proteoSigtest} performs significance tests aganist peptide or protein
\code{log2FC}. Users should avoid call the method directly, but instead use
the following wrappers.

\code{pepSig} is a wrapper of \code{\link{proteoSigtest}} for the
significance tests of peptide data

\code{prnSig} is a wrapper of \code{\link{proteoSigtest}} for the significance
tests of protein data
}
\details{
In general, special characters of \code{+} or \code{-} should be avoided from
contrast terms. Occasionally, such as in biological studies, it may be
convenient to use \code{A+B} to denote a condition of combined treatment of
\code{A} and \code{B} . In the case, one can put the term(s) containing
\code{+} or \code{-} into a pair of pointy brackets. The syntax in the
following hypothetical example will compare the effects of \code{A}, \code{B},
\code{A+B} and the average of \code{A} and \code{B} to control \code{C}:

\code{prnSig(fml = ~ Term["A - C", "B - C", "<A + B> - C", "(A + B)/2 - C"])}

Note that \code{<A + B>} stands for one sample and \code{(A + B)} has two
samples in it.
}
\examples{
prnSig(
  impute_na = FALSE,
  W2_bat = ~ Term["W2.BI.TMT2-W2.BI.TMT1", "W2.JHU.TMT2-W2.JHU.TMT1", "W2.PNNL.TMT2-W2.PNNL.TMT1"], # batches
  W2_loc = ~ Term_2["W2.BI-W2.JHU", "W2.BI-W2.PNNL", "W2.JHU-W2.PNNL"], # locations
)

prnSig(
  impute_na = FALSE,
  W2_loc_2 = ~ Term["(W2.BI.TMT2+W2.BI.TMT1)/2 - (W2.JHU.TMT2+W2.JHU.TMT1)/2"], # locations with batch average
)

prnSig(
  impute_na = TRUE,
  W2_vs_W16_fix = ~ Term_3["W16-W2"], # fixed effect
  W2_vs_W16_mix = ~ Term_3["W16-W2"] + (1|TMT_Set), # one fixed and one random effect
)

prnSig(
  impute_na = TRUE,
  method = lm,
  W2_vs_W16_fix = ~ Term_3["W16-W2"], # one fixed effect
  W2_vs_W16_mix = ~ Term_3["W16-W2"] + (1|TMT_Set), # one fixed and one random effect
  W2_vs_W16_mix_2 = ~ Term_3["W16-W2"] + (1|TMT_Set) + (1|Color), # one fixed and two random effects
)

}
