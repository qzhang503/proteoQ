% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/volcanos.R
\name{pepVol}
\alias{pepVol}
\alias{prnVol}
\title{Volcano plots}
\usage{
pepVol(
  scale_log2r = TRUE,
  complete_cases = FALSE,
  impute_na = FALSE,
  adjP = FALSE,
  show_labels = TRUE,
  df = NULL,
  filepath = NULL,
  filename = NULL,
  fml_nms = NULL,
  theme = NULL,
  ...
)

prnVol(
  scale_log2r = TRUE,
  complete_cases = FALSE,
  impute_na = FALSE,
  adjP = FALSE,
  show_labels = TRUE,
  df = NULL,
  filepath = NULL,
  filename = NULL,
  fml_nms = NULL,
  theme = NULL,
  ...
)
}
\arguments{
\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation across all samples. The default is TRUE.}

\item{complete_cases}{Logical; if TRUE, only cases that are complete with no
missing values will be used. The default is FALSE.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used. The default is FALSE.}

\item{adjP}{Logical; if TRUE, use Benjamini-Hochberg pVals in volcano plots.
The default is FALSE.}

\item{show_labels}{Logical; if TRUE, shows the labels of top twenty entries.
The default is TRUE.}

\item{df}{The name of a primary data file. By default, it will be determined
automatically after matching the types of data and analysis with an
\code{id} among \code{c("pep_seq", "pep_seq_mod", "prot_acc", "gene")}. A
primary file contains normalized peptide or protein data and is among
\code{c("Peptide.txt", "Peptide_pVal.txt", "Peptide_impNA_pVal.txt",
"Protein.txt", "Protein_pVal.txt", "protein_impNA_pVal.txt")}. For analyses
require the fields of significance p-values, the \code{df} will be one of
\code{c("Peptide_pVal.txt", "Peptide_impNA_pVal.txt", "Protein_pVal.txt",
"protein_impNA_pVal.txt")}.}

\item{filepath}{Use system default.}

\item{filename}{A representative file name to outputs. By default, it will be
determined automatically by the name of the current call.}

\item{fml_nms}{Character string or vector; the formula name(s). By default,
the formula(s) will match those used in \code{\link{pepSig}} or
\code{\link{prnSig}}.}

\item{theme}{A
\href{https://ggplot2.tidyverse.org/reference/ggtheme.html}{ggplot2}
theme, i.e., theme_bw(), or a custom theme. At the NULL default, a system
theme will be applied.}

\item{...}{\code{filter_}: Variable argument statements for the row filtration
against data in a primary file linked to \code{df}. See also
\code{\link{normPSM}} for the format of \code{filter_} statements. \cr \cr
Additional parameters for plotting: \cr \code{xco}, the cut-off lines of
fold changes at position \code{x}; the default is at \eqn{-1.2} and
\eqn{+1.2}. \cr \code{yco}, the cut-off line of \code{pVal} at position
\code{y}; the default is \eqn{0.05}. \cr \code{width}, the width of plot;
\cr \code{height}, the height of plot. \cr \code{nrow}, the number of rows
in a plot.}
}
\description{
\code{pepVol} visualizes the volcano plots of peptide data.

\code{prnVol} visualizes the volcano plots of protein data.
}
\examples{
\donttest{
# ===================================
# Volcano plots
# ===================================

## !!!require the brief working example in `?load_expts`

## global option
scale_log2r <- TRUE

## for all peptides or proteins
# all peptides
pepVol()

# all proteins
prnVol(
  show_labels = TRUE,
  xco = 1.2,
  yco = 0.01,
)

# hide `xco` and/or `yco` lines
prnVol(
  show_labels = TRUE,
  xco = 0,
  yco = Inf,
  filename = no_xylines.png,
)

# kinases and prot_n_pep >= 2
prnVol(
  show_labels = TRUE,
  xco = 1.2,
  yco = 0.01,
  filter_prots_by_kin = exprs(kin_attr, prot_n_pep >= 2),
  filename = "kin_npep2.png"
)

# custom theme
library(ggplot2)
my_theme <- theme_bw() +
  theme(
    axis.text.x = element_text(angle = 0, vjust = 0.5, size = 24),
    axis.ticks.x = element_blank(),
    axis.text.y = element_text(angle = 0, vjust = 0.5, size = 24),
    axis.title.x = element_text(colour = "black", size = 24),
    axis.title.y = element_text(colour="black", size = 24),
    plot.title = element_text(face = "bold", colour = "black", size = 14, hjust = .5, vjust = .5),
    
    panel.grid.major.x = element_blank(),
    panel.grid.minor.x = element_blank(),
    panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    
    strip.text.x = element_text(size = 16, colour = "black", angle = 0),
    strip.text.y = element_text(size = 16, colour = "black", angle = 90),
    
    legend.key = element_rect(colour = NA, fill = 'transparent'),
    legend.background = element_rect(colour = NA,  fill = "transparent"),
    legend.position = "none",
    legend.title = element_text(colour="black", size = 18),
    legend.text = element_text(colour="black", size = 18),
    legend.text.align = 0,
    legend.box = NULL
  )

prnVol(theme = my_theme, filename = my_theme.png)

## protein subgroups by gene sets
# prerequisite analysis of GSPA
prnGSPA(
  impute_na = FALSE,
  pval_cutoff = 1E-2, # protein pVal threshold
  logFC_cutoff = log2(1.1), # protein log2FC threshold
  gspval_cutoff = 5E-2, # gene-set pVal threshold
  gslogFC_cutoff = log2(1.2), # gene-set log2FC threshold
  gset_nms = c("go_sets"),
)

# mapping gene sets to volcano-plot visualization
# (1) forced lines of `pval_cutoff` and `logFC_cutoff`  
#   according to the corresponding `prnGSPA` in red; 
# (2) optional lines of `xco` and `yco` in grey
gspaMap(
  impute_na = FALSE,
  show_labels = TRUE, 
  topn = 20, 
  show_sig = pVal, 
)

# disable the lines of `xco` and `yco`, 
gspaMap(
  impute_na = FALSE,
  show_labels = TRUE, 
  topn = 20, 
  show_sig = pVal, 
  xco = 0, 
  yco = Inf, 
)

# customized thresholds for visualization
gspaMap(
  fml_nms = c("W2_bat", "W2_loc", "W16_vs_W2"),
  gspval_cutoff = c(5E-2, 5E-2, 1E-10),
  gslogFC_cutoff = log2(1.2),
  topn = 20, 
  show_sig = pVal,
  show_labels = FALSE,
  xco = 0, 
  yco = Inf, 
)

## gspaMap(...) maps secondary results of `[...]Protein_GSPA_{NZ}[_impNA].txt` 
#  from prnGSPA(...) onto a primary `df` of `Protein[_impNA]_pVal.txt` 
#  
#  see also ?prnGSPA for additional examples involving both `df` and `df2`, 
#  as well as `filter_` and `filter2_`
}
}
\seealso{
\emph{Metadata} \cr 
 \code{\link{load_expts}} for metadata preparation and a reduced working example in data normalization \cr

 \emph{Data normalization} \cr 
 \code{\link{normPSM}} for extended examples in PSM data normalization \cr
 \code{\link{PSM2Pep}} for extended examples in PSM to peptide summarization \cr 
 \code{\link{mergePep}} for extended examples in peptide data merging \cr 
 \code{\link{standPep}} for extended examples in peptide data normalization \cr
 \code{\link{Pep2Prn}} for extended examples in peptide to protein summarization \cr
 \code{\link{standPrn}} for extended examples in protein data normalization. \cr 
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in data purging \cr
 \code{\link{pepHist}} and \code{\link{prnHist}} for extended examples in histogram visualization. \cr 
 \code{\link{extract_raws}} and \code{\link{extract_psm_raws}} for extracting MS file names \cr 
 
 \emph{Variable arguments of `filter_...`} \cr 
 \code{\link{contain_str}}, \code{\link{contain_chars_in}}, \code{\link{not_contain_str}}, 
 \code{\link{not_contain_chars_in}}, \code{\link{start_with_str}}, 
 \code{\link{end_with_str}}, \code{\link{start_with_chars_in}} and 
 \code{\link{ends_with_chars_in}} for data subsetting by character strings \cr 
 
 \emph{Missing values} \cr 
 \code{\link{pepImp}} and \code{\link{prnImp}} for missing value imputation \cr 
 
 \emph{Informatics} \cr 
 \code{\link{pepSig}} and \code{\link{prnSig}} for significance tests \cr 
 \code{\link{pepVol}} and \code{\link{prnVol}} for volcano plot visualization \cr 
 \code{\link{prnGSPA}} for gene set enrichment analysis by protein significance pVals \cr 
 \code{\link{gspaMap}} for mapping GSPA to volcano plot visualization \cr 
 \code{\link{prnGSPAHM}} for heat map and network visualization of GSPA results \cr 
 \code{\link{prnGSVA}} for gene set variance analysis \cr 
 \code{\link{prnGSEA}} for data preparation for online GSEA. \cr 
 \code{\link{pepMDS}} and \code{\link{prnMDS}} for MDS visualization \cr 
 \code{\link{pepPCA}} and \code{\link{prnPCA}} for PCA visualization \cr 
 \code{\link{pepLDA}} and \code{\link{prnLDA}} for LDA visualization \cr 
 \code{\link{pepHM}} and \code{\link{prnHM}} for heat map visualization \cr 
 \code{\link{pepCorr_logFC}}, \code{\link{prnCorr_logFC}}, \code{\link{pepCorr_logInt}} and 
 \code{\link{prnCorr_logInt}}  for correlation plots \cr 
 \code{\link{anal_prnTrend}} and \code{\link{plot_prnTrend}} for trend analysis and visualization \cr 
 \code{\link{anal_pepNMF}}, \code{\link{anal_prnNMF}}, \code{\link{plot_pepNMFCon}}, 
 \code{\link{plot_prnNMFCon}}, \code{\link{plot_pepNMFCoef}}, \code{\link{plot_prnNMFCoef}} and 
 \code{\link{plot_metaNMF}} for NMF analysis and visualization \cr 
 
 \emph{Custom databases} \cr 
 \code{\link{Uni2Entrez}} for lookups between UniProt accessions and Entrez IDs \cr 
 \code{\link{Ref2Entrez}} for lookups among RefSeq accessions, gene names and Entrez IDs \cr 
 \code{\link{prepGO}} for \code{\href{http://current.geneontology.org/products/pages/downloads.html}{gene 
 ontology}} \cr 
 \code{\link{prepMSig}} for \href{https://data.broadinstitute.org/gsea-msigdb/msigdb/release/7.0/}{molecular 
 signatures} \cr 
 \code{\link{prepString}} and \code{\link{anal_prnString}} for STRING-DB \cr
 
 \emph{Column keys in PSM, peptide and protein outputs} \cr 
 # Mascot \cr
 system.file("extdata", "mascot_psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "mascot_peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "mascot_protein_keys.txt", package = "proteoQ") \cr
 
 # MaxQuant \cr
 system.file("extdata", "maxquant_psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "maxquant_peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "maxquant_protein_keys.txt", package = "proteoQ") \cr
}
