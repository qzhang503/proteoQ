% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sitecombi.R
\name{calc_ms2ionseries}
\alias{calc_ms2ionseries}
\title{Calculates the mono-isotopic mass of a MS2 ions.}
\usage{
calc_ms2ionseries(
  aa_seq,
  fixedmods,
  varmods,
  type_ms2ions = "by",
  ms1_mass = NULL,
  maxn_vmods_setscombi = 64,
  maxn_vmods_per_pep = Inf,
  maxn_sites_per_vmod = Inf,
  maxn_vmods_sitescombi_per_pep = 32,
  digits = 5
)
}
\arguments{
\item{aa_seq}{Character string; a peptide sequences with one-letter
representation of amino acids.}

\item{fixedmods}{A character vector of fixed modifications. See also
\link{parse_unimod} for grammars.}

\item{varmods}{A character vector of variable modifications.}

\item{type_ms2ions}{Character; the type of
\href{http://www.matrixscience.com/help/fragmentation_help.html}{ MS2
ions}. Values are in one of "by", "ax" and "cz". The default is "by" for b-
and y-ions.}

\item{ms1_mass}{The mass of a theoretical MS1 (for subsetting).}

\item{maxn_vmods_setscombi}{Integer; the maximum number of combinatorial variable
modifications and neutral losses.}

\item{maxn_vmods_per_pep}{The maximum number of variable modifications per
peptide.}

\item{maxn_sites_per_vmod}{Integer; the maximum number of combinatorial
variable modifications per site in a per peptide sequence.}

\item{maxn_vmods_sitescombi_per_pep}{Integer; the maximum number of
combinatorial variable modifications per peptide sequence.}

\item{digits}{Integer; the number of decimal places to be used.}
}
\description{
For direct uses from an R console (with trade-offs in speed).
}
\examples{
\donttest{
## No variable modifications
# (1)
x <- calc_ms2ionseries("MAKEMASSPECFUN", 
                       fixedmods = NULL, 
                       varmods = NULL)

x$mass

# (2) no combinatorial NL for fixed modifications
x <- calc_ms2ionseries("MAKEMASSPECFUN", 
                       fixedmods = "Oxidation (M)", 
                       varmods = NULL)
                       
x$mass

## With variable modifications
# (3) combinatorial sites and NL available
x <- calc_ms2ionseries("MAKEMASSPECFUN", 
                       fixedmods = NULL, 
                       varmods = "Oxidation (M)")

x$mass
# x$vmods_ps

# (4)
x <- calc_ms2ionseries("MAKEMASSPECFUN",
                       c("TMT6plex (N-term)", 
                         "TMT6plex (K)", 
                         "Carbamidomethyl (C)"),
                       c("Acetyl (N-term)", 
                         "Gln->pyro-Glu (N-term = Q)", 
                         "Oxidation (M)"))
                      
x$mass

# The N-term M realizes with acetylation
x$vmods_ps[[5]]

# (5) Neutral losses for occurrences of both fixed 
#     and variable modifications ignored
x <- calc_ms2ionseries("MAKEMASSPECFUN",
                       c("TMT6plex (N-term)", 
                         "Oxidation (M)", 
                         "Deamidated (N)"), 
                       c("dHex (S)"))
                      
x$mass[[2]]

# Change from fixed to variable for full combinatorials
x <- calc_ms2ionseries("MAKEMASSPECFUN",
                       c("TMT6plex (N-term)", 
                         "Deamidated (N)"), 
                       c("Oxidation (M)", 
                         "dHex (S)"))
                      
x$mass[[4]]
x$vmods_ps[[4]]
}
}
