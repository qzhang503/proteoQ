% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-mds.R
\name{pepEucDist}
\alias{pepEucDist}
\alias{prnEucDist}
\title{Distance plots}
\usage{
pepEucDist(col_select = NULL, scale_log2r = TRUE,
  complete_cases = FALSE, impute_na = FALSE, adjEucDist = FALSE,
  annot_cols = NULL, annot_colnames = NULL, df = NULL,
  filepath = NULL, filename = NULL, ...)

prnEucDist(col_select = NULL, scale_log2r = TRUE,
  complete_cases = FALSE, impute_na = FALSE, adjEucDist = FALSE,
  annot_cols = NULL, annot_colnames = NULL, df = NULL,
  filepath = NULL, filename = NULL, ...)
}
\arguments{
\item{col_select}{Character string to a column key in \code{expt_smry.xlsx}.
At the \code{NULL} default, the column key of \code{Select} in
\code{expt_smry.xlsx} will be used. In the case of no samples being
specified under \code{Select}, the column key of \code{Sample_ID} will be
used. The non-empty entries under the ascribing column will be used in
indicated analysis.}

\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation across all samples. The default is TRUE.}

\item{complete_cases}{Logical; if TRUE, only cases that are complete with no
missing values will be used. The default is FALSE.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used. The default is FALSE.}

\item{adjEucDist}{Logical; if TRUE, adjusts the inter-plex Euclidean distance
by \eqn{1/sqrt(2)}. The option \code{adjEucDist = TRUE} may be suitable when
\code{reference samples} from each TMT plex undergo approximately the same
sample handling process as the samples of interest. For instance,
\code{reference samples} were split at the levels of protein lysates.
Typically, \code{adjEucDist = FALSE} if \code{reference samples} were split
near the end of a sample handling process, for instance, at the stages
immediately before or after TMT labeling.}

\item{annot_cols}{A character vector of column keys in \code{expt_smry.xlsx}.
The values under the selected keys will be used to color-code sample IDs on
the top of the indicated plot. The default is NULL without column
annotation.}

\item{annot_colnames}{A character vector of replacement name(s) to
\code{annot_cols}. The default is NULL without name replacement.}

\item{df}{The name of input data file. By default, it will be determined
automatically after matching the data type with an \code{id} among
\code{c("pep_seq", "pep_seq_mod", "prot_acc", "gene")}.}

\item{filepath}{A file path to output results. By default, it will be
determined automatically by the name of the calling function and the value
of \code{id} in the \code{call}.}

\item{filename}{A representative file name to outputs. By default, the name(s)
will be determined automatically. For text files, a typical file extension
is \code{.txt}. For image files, they are typically saved via
\code{\link[ggplot2]{ggsave}} or \code{\link[pheatmap]{pheatmap}} where the
image type will be determined by the extension of the file name.}

\item{...}{\code{filter_}: Variable argument statements for the row filtration
of data against the column keys in \code{Peptide.txt}, \code{Protein.txt}
etc. see also \code{\link{normPSM}} \cr \cr \code{arrange_}: Logical
expression(s) for the row ordering of data; see also \code{\link{prnHM}}.
\cr \cr Additional parameters for plotting: \cr \code{width}, the width of
plot \cr \code{height}, the height of plot \cr \cr Additional arguments for
\code{\link[pheatmap]{pheatmap}} \cr Note arguments disabled from
\code{pheatmap}: \cr \code{annotation_col}; instead use keys indicated in
\code{annot_cols} \cr \code{annotation_row}; instead use keys indicated in
\code{annot_rows}}
}
\value{
Heat map visualization of distance matrices.
}
\description{
\code{pepEucDist} visualizes the heat map of Euclidean distances for peptide
data.

\code{prnEucDist} visualizes the heat map of Euclidean distances for protein
data.
}
\details{
An Euclidean distance matrix of \code{log2FC} is returned by
\code{\link[stats]{dist}} for heat map visualization.
}
\examples{
# ===================================
# Euclidean distance
# ===================================

## !!!require the brief working example in `?load_expts`

## global option
scale_log2r <- TRUE

pepEucDist(
  annot_cols = c("Group", "Color", "Alpha", "Shape"),
  annot_colnames = c("Group", "Lab", "Batch", "WHIM"),
  width = 14,
  height = 12,
)

prnEucDist(
  annot_cols = c("Group", "Color", "Alpha", "Shape"),
  annot_colnames = c("Group", "Lab", "Batch", "WHIM"),

  # arguments for `pheatmap`
  display_numbers = TRUE,
  number_color = "grey30",
  number_format = "\%.1f",
  clustering_distance_rows = "euclidean",
  clustering_distance_cols = "euclidean",
  fontsize = 16,
  fontsize_row = 20,
  fontsize_col = 20,
  fontsize_number = 8,
  cluster_rows = TRUE,
  show_rownames = TRUE,
  show_colnames = TRUE,
  border_color = "grey60",
  cellwidth = 24,
  cellheight = 24,
  
  filter_prots_by = exprs(prot_n_pep >= 5),
  filename = "filter.png",
)

## additional row filtration by pVals (proteins, impute_na = FALSE)
# if not yet, run prerequisitive significance tests at `impute_na = FALSE`
pepSig(
  impute_na = FALSE, 
  W2_bat = ~ Term["(W2.BI.TMT2-W2.BI.TMT1)", 
                  "(W2.JHU.TMT2-W2.JHU.TMT1)", 
                  "(W2.PNNL.TMT2-W2.PNNL.TMT1)"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = FALSE)

# (`W16_vs_W2.pVal (W16-W2)` now a column key)
prnEucDist(
  annot_cols = c("Group", "Color", "Alpha", "Shape"),
  annot_colnames = c("Group", "Lab", "Batch", "WHIM"),
  width = 14,
  height = 12,
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = pvalcutoff.png, 
)

# analogous peptides
pepEucDist(
  annot_cols = c("Group", "Color", "Alpha", "Shape"),
  annot_colnames = c("Group", "Lab", "Batch", "WHIM"),
  width = 14,
  height = 12,
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = pvalcutoff.png, 
)

## additional row filtration by pVals (proteins, impute_na = TRUE)
# if not yet, run prerequisitive NA imputation
pepImp(m = 2, maxit = 2)
prnImp(m = 5, maxit = 5)

# if not yet, run prerequisitive significance tests at `impute_na = TRUE`
pepSig(
  impute_na = TRUE, 
  W2_bat = ~ Term["(W2.BI.TMT2-W2.BI.TMT1)", 
                  "(W2.JHU.TMT2-W2.JHU.TMT1)", 
                  "(W2.PNNL.TMT2-W2.PNNL.TMT1)"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = TRUE)

prnEucDist(
  impute_na = TRUE,
  annot_cols = c("Group", "Color", "Alpha", "Shape"),
  annot_colnames = c("Group", "Lab", "Batch", "WHIM"),
  width = 14,
  height = 12,
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = filpvals_impna.png, 
)

# analogous peptides
pepEucDist(
  impute_na = TRUE,
  annot_cols = c("Group", "Color", "Alpha", "Shape"),
  annot_colnames = c("Group", "Lab", "Batch", "WHIM"),
  width = 14,
  height = 12,
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  filename = filpvals_impna.png, 
)

## custom color
pepEucDist(
  impute_na = TRUE,
  annot_cols = c("Group", "Color", "Alpha", "Shape"),
  annot_colnames = c("Group", "Lab", "Batch", "WHIM"),
  width = 14,
  height = 12,
  filter_by = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
  color = colorRampPalette(c("blue", "white", "red"))(500),
  filename = my_palette.png, 
)

## Not run: 
prnEucDist(
  col_color = "column_key_not_existed",
  col_shape = "another_missing_column_key",
  annot_cols = c("bad_column_key", "yet_another_bad_column_key")
)
## End(Not run)

}
\seealso{
\code{\link{load_expts}} for a reduced working example in data
 normalization \cr \code{\link{normPSM}} for extended examples in PSM data
 normalization \cr \code{\link{PSM2Pep}} for extended examples in PSM to
 peptide summarization \cr \code{\link{mergePep}} for extended examples in
 peptide data merging \cr \code{\link{standPep}} for extended examples in
 peptide data normalization \cr \code{\link{Pep2Prn}} for extended examples
 in peptide to protein summarization \cr \code{\link{standPrn}} for extended
 examples in protein data normalization. \cr \code{\link{pepHist}} and
 \code{\link{prnHist}} for extended examples in histogram visualization. \cr
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in
 data purging \cr \code{\link{contain_str}}, \code{\link{contain_chars_in}},
 \code{\link{not_contain_str}}, \code{\link{not_contain_chars_in}},
 \code{\link{start_with_str}}, \code{\link{end_with_str}},
 \code{\link{start_with_chars_in}} and \code{\link{ends_with_chars_in}} for
 data subsetting by character strings \cr \code{\link{pepImp}} and
 \code{\link{prnImp}} for missing value imputation \cr \code{\link{pepSig}}
 and \code{\link{prnSig}} for significance tests \cr \code{\link{pepHM}} and
 \code{\link{prnHM}} for heat map visualization \cr \code{\link{pepMDS}} and
 \code{\link{prnMDS}} for MDS visualization \cr \code{\link{pepPCA}} and
 \code{\link{prnPcA}} for PCA visualization \cr
}
