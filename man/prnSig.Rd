% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sigtests.R
\name{pepSig}
\alias{pepSig}
\alias{prnSig}
\title{Significance tests of peptide \code{log2FC}}
\usage{
pepSig(
  scale_log2r = TRUE,
  impute_na = TRUE,
  complete_cases = FALSE,
  method = c("limma", "lm"),
  var_cutoff = 0.001,
  pval_cutoff = 1,
  logFC_cutoff = log2(1),
  df = NULL,
  filepath = NULL,
  filename = NULL,
  ...
)

prnSig(
  scale_log2r = TRUE,
  impute_na = TRUE,
  complete_cases = FALSE,
  method = c("limma", "lm"),
  var_cutoff = 0.001,
  pval_cutoff = 1,
  logFC_cutoff = log2(1),
  df = NULL,
  filepath = NULL,
  filename = NULL,
  ...
)
}
\arguments{
\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation across all samples. The default is TRUE.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used. The default is FALSE.}

\item{complete_cases}{Logical; if TRUE, only cases that are complete with no
missing values will be used. The default is FALSE.}

\item{method}{Character string; the method of linear modeling. The default is
\code{limma}. At \code{method = lm}, the \code{lm()} in base R will be used
for models without random effects and the \code{\link[lmerTest]{lmer}} will
be used for models with random effects.}

\item{var_cutoff}{Numeric; the cut-off in the variances of \code{log2FC}.
Entries with variances smaller than the threshold will be excluded from
linear modeling. The default is 1E-3.}

\item{pval_cutoff}{Numeric; the cut-off in significance \code{pVal}. Entries
with \code{pVals} smaller than the threshold will be excluded from multiple
test corrections. The default is at \code{1} to include all entries.}

\item{logFC_cutoff}{Numeric; the cut-off in \code{log2FC}. Entries with
absolute \code{log2FC} smaller than the threshold will be removed from
multiple test corrections. The default is at \code{log2(1)} to include all
entries.}

\item{df}{The name of a primary data file. By default, it will be determined
automatically after matching the types of data and analysis with an
\code{id} among \code{c("pep_seq", "pep_seq_mod", "prot_acc", "gene")}. A
primary file contains normalized peptide or protein data and is among
\code{c("Peptide.txt", "Peptide_pVal.txt", "Peptide_impNA_pVal.txt",
"Protein.txt", "Protein_pVal.txt", "protein_impNA_pVal.txt")}. For analyses
require the fields of significance p-values, the \code{df} will be one of
\code{c("Peptide_pVal.txt", "Peptide_impNA_pVal.txt", "Protein_pVal.txt",
"protein_impNA_pVal.txt")}.}

\item{filepath}{A file path to output results. By default, it will be
determined automatically by the name of the calling function and the value
of \code{id} in the \code{call}.}

\item{filename}{A file name to output results. The default is
\code{Peptide_pVals.txt} for peptides and \code{Protein_pVals} for proteins.}

\item{...}{User-defined formulas for linear modeling. The syntax starts with a
tilde, followed by the name of an available column key in
\code{expt_smry.xlsx} and square brackets. The contrast groups are then
quoted with one to multiple contrast groups separated by commas. The default
column key is \code{Term} in `expt_smry.xlsx`: \cr \code{~ Term["A - C", "B
- C"]}. \cr Additive random effects are indicated by \code{+ (1|col_key_1) +
(1|col_key_2)}... Currently only a syntax of single contrast are supported
for uses with random effects: \cr \code{~ Term["A - C"] + (1|col_key_1) +
(1|col_key_2)} \cr \cr \code{filter_}: Logical expression(s) for the row
filtration against data in a primary file of \code{Peptide[_impNA].txt} or
\code{Protein[_impNA].txt}. See also \code{\link{normPSM}} for the format of
\code{filter_} statements.}
}
\value{
The primary output is
 \code{~/dat_dir/Peptide/Model/Peptide_pVals.txt} for peptide data or
 \code{~/dat_dir/Protein/Model/Protein_pVals.txt} for protein data. At
 \code{impute_na = TRUE}, the corresponding outputs are
 \code{Peptide_impNA_pvals.txt} or \code{Protein_impNA_pvals.txt}.
}
\description{
\code{pepSig} performs significance tests peptide \code{log2FC}.

\code{prnSig} performs significance tests protein \code{log2FC}.
}
\details{
In general, special characters of \code{+} or \code{-} should be avoided from
contrast terms. Occasionally, such as in biological studies, it may be
convenient to use \code{A+B} to denote a condition of combined treatment of
\code{A} and \code{B} . In the case, one can put the term(s) containing
\code{+} or \code{-} into a pair of pointy brackets. The syntax in the
following hypothetical example will compare the effects of \code{A}, \code{B},
\code{A+B} and the average of \code{A} and \code{B} to control \code{C}:

\code{prnSig(fml = ~ Term["A - C", "B - C", "<A + B> - C", "(A + B)/2 - C"])}

Note that \code{<A + B>} stands for one sample and \code{(A + B)} has two
samples in it.
}
\examples{
\donttest{
# ===================================
# Significance tests
# ===================================

## !!!require the brief working example in `?load_expts`

## global option
scale_log2r <- TRUE

## peptides (`Term` etc. are user-defined column keys in expt_smry.xlsx)
pepSig(
  impute_na = FALSE, 
  W2_bat = ~ Term["W2.BI.TMT2-W2.BI.TMT1", 
                  "W2.JHU.TMT2-W2.JHU.TMT1", 
                  "W2.PNNL.TMT2-W2.PNNL.TMT1"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

pepVol()

## proteins (formulae matched to `pepSig` by default)
prnSig(impute_na = FALSE)
prnVol()

# note the incongruity in peptide and protein fold changes
# (no measures for peptides but for proteins)

#  sequence |   ref    | sample_1 | sample_2 |  log2FC   
# -------------------------------------------------------
# prnX_pep1 |    0     |   1.15   |    NA    |    NA
# prnX_pep2 |    0     |    NA    |   0.05   |    NA


#  protein  |   ref    | sample_1 | sample_2 |  log2FC   
# -------------------------------------------------------
#   prnX    |    0     |   1.15   |    0.05  |   1.10

## averaged batch effect
# (suggest run both `pepSig` and `prnSig` for consistency)
pepSig(
  impute_na = FALSE,
  W2_loc_2 = ~ Term["(W2.BI.TMT2+W2.BI.TMT1)/2 - (W2.JHU.TMT2+W2.JHU.TMT1)/2"], 
)

prnSig(impute_na = FALSE)

pepVol()
prnVol()

## random effects
# NA imputation (suggested for models with random effects)
pepImp(m = 2, maxit = 2)
prnImp(m = 5, maxit = 5)

# single
pepSig(
  impute_na = TRUE,
  W2_vs_W16_fix = ~ Term_3["W16-W2"],
  W2_vs_W16_mix = ~ Term_3["W16-W2"] + (1|TMT_Set),
)

prnSig(impute_na = TRUE)

pepVol()
prnVol()

# one to multiple (method `lm` for multiple random)
pepSig(
  impute_na = TRUE,
  method = lm,
  W2_vs_W16_fix = ~ Term_3["W16-W2"],
  W2_vs_W16_mix = ~ Term_3["W16-W2"] + (1|TMT_Set),
  W2_vs_W16_mix_2 = ~ Term_3["W16-W2"] + (1|TMT_Set) + (1|Color),
)

prnSig(
  impute_na = TRUE,
  method = lm,
)

pepVol()
prnVol()
}

}
\seealso{
\emph{Metadata} \cr 
 \code{\link{load_expts}} for metadata preparation and a reduced working example in data normalization \cr

 \emph{Data normalization} \cr 
 \code{\link{normPSM}} for extended examples in PSM data normalization \cr
 \code{\link{PSM2Pep}} for extended examples in PSM to peptide summarization \cr 
 \code{\link{mergePep}} for extended examples in peptide data merging \cr 
 \code{\link{standPep}} for extended examples in peptide data normalization \cr
 \code{\link{Pep2Prn}} for extended examples in peptide to protein summarization \cr
 \code{\link{standPrn}} for extended examples in protein data normalization. \cr 
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in data purging \cr
 \code{\link{pepHist}} and \code{\link{prnHist}} for extended examples in histogram visualization. \cr 
 \code{\link{extract_raws}} and \code{\link{extract_psm_raws}} for extracting MS file names \cr 
 
 \emph{Variable arguments of `filter_...`} \cr 
 \code{\link{contain_str}}, \code{\link{contain_chars_in}}, \code{\link{not_contain_str}}, 
 \code{\link{not_contain_chars_in}}, \code{\link{start_with_str}}, 
 \code{\link{end_with_str}}, \code{\link{start_with_chars_in}} and 
 \code{\link{ends_with_chars_in}} for data subsetting by character strings \cr 
 
 \emph{Missing values} \cr 
 \code{\link{pepImp}} and \code{\link{prnImp}} for missing value imputation \cr 
 
 \emph{Informatics} \cr 
 \code{\link{pepSig}} and \code{\link{prnSig}} for significance tests \cr 
 \code{\link{pepVol}} and \code{\link{prnVol}} for volcano plot visualization \cr 
 \code{\link{prnGSPA}} for gene set enrichment analysis by protein significance pVals \cr 
 \code{\link{gspaMap}} for mapping GSPA to volcano plot visualization \cr 
 \code{\link{prnGSPAHM}} for heat map and network visualization of GSPA results \cr 
 \code{\link{prnGSVA}} for gene set variance analysis \cr 
 \code{\link{prnGSEA}} for data preparation for online GSEA. \cr 
 \code{\link{pepMDS}} and \code{\link{prnMDS}} for MDS visualization \cr 
 \code{\link{pepPCA}} and \code{\link{prnPCA}} for PCA visualization \cr 
 \code{\link{pepLDA}} and \code{\link{prnLDA}} for LDA visualization \cr 
 \code{\link{pepHM}} and \code{\link{prnHM}} for heat map visualization \cr 
 \code{\link{pepCorr_logFC}}, \code{\link{prnCorr_logFC}}, \code{\link{pepCorr_logInt}} and 
 \code{\link{prnCorr_logInt}}  for correlation plots \cr 
 \code{\link{anal_prnTrend}} and \code{\link{plot_prnTrend}} for trend analysis and visualization \cr 
 \code{\link{anal_pepNMF}}, \code{\link{anal_prnNMF}}, \code{\link{plot_pepNMFCon}}, 
 \code{\link{plot_prnNMFCon}}, \code{\link{plot_pepNMFCoef}}, \code{\link{plot_prnNMFCoef}} and 
 \code{\link{plot_metaNMF}} for NMF analysis and visualization \cr 
 
 \emph{Custom databases} \cr 
 \code{\link{Uni2Entrez}} for lookups between UniProt accessions and Entrez IDs \cr 
 \code{\link{Ref2Entrez}} for lookups among RefSeq accessions, gene names and Entrez IDs \cr 
 \code{\link{prepGO}} for \code{\href{http://current.geneontology.org/products/pages/downloads.html}{gene 
 ontology}} \cr 
 \code{\link{prepMSig}} for \href{https://data.broadinstitute.org/gsea-msigdb/msigdb/release/7.0/}{molecular 
 signatures} \cr 
 \code{\link{prepString}} and \code{\link{anal_prnString}} for STRING-DB \cr
 
 \emph{Column keys in PSM, peptide and protein outputs} \cr 
 # Mascot \cr
 system.file("extdata", "mascot_psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "mascot_peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "mascot_protein_keys.txt", package = "proteoQ") \cr
 
 # MaxQuant \cr
 system.file("extdata", "maxquant_psm_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "maxquant_peptide_keys.txt", package = "proteoQ") \cr
 system.file("extdata", "maxquant_protein_keys.txt", package = "proteoQ") \cr
}
