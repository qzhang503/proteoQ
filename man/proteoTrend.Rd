% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-trends.R
\name{proteoTrend}
\alias{proteoTrend}
\alias{anal_prnTrend}
\alias{plot_prnTrend}
\title{Clustering of data trends}
\usage{
proteoTrend(id = c("pep_seq", "pep_seq_mod", "prot_acc", "gene"),
  task = "anal", col_select = NULL, col_group = NULL,
  col_order = NULL, impute_na = FALSE, complete_cases = FALSE,
  n_clust = NULL, scale_log2r = TRUE, df = NULL, filepath = NULL,
  filename = NULL, ...)

anal_prnTrend(...)

plot_prnTrend(...)
}
\arguments{
\item{id}{Character string to indicate the type of data. The value will be
determined automatically. Peptide data will be used at \code{id = pep_seq}
or \code{pep_seq_mod}, and protein data will be used at \code{id = prot_acc}
or \code{gene}.}

\item{task}{Character string; a signature for task dispatching in a function
factory. The value will be determined automatically.}

\item{col_select}{Character string to a column key in \code{expt_smry.xlsx}.
Samples corresponding to non-empty entries under the column key will be
included in the indicated analysis. At the \code{NULL} default, the column
key will be \code{Select}.}

\item{col_group}{Character string to a column key in \code{expt_smry.xlsx}.
Samples corresponding to non-empty entries under \code{col_group} will be
used for sample grouping in the indicated analysis. At the NULL default, the
column key \code{Group} will be used. No data annotation by groups will be
performed if the fields under the indicated group column is empty.}

\item{col_order}{Character string to a column key in \code{expt_smry.xlsx}.
Numeric values under which will be used for the left-to-right arrangement of
samples in plots. At the NULL default, the column key \code{Order} will be
used. If values under column \code{Order} are left blank, samples will be
ordered by their names.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used. The default is TRUE.}

\item{complete_cases}{Logical; if TRUE, only cases that are complete with no
missing values will be used. The default is FALSE.}

\item{n_clust}{Numeric vector; the number(s) of clusters that data will be
divided into. The default is c(5:6).}

\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation across all samples. The default is TRUE.}

\item{df}{The name of input data file. By default, it will be determined
automatically by the value of \code{id}.}

\item{filepath}{Use system default.}

\item{filename}{Use system default.}

\item{...}{\code{filter_}: Logical expression(s) for the row filtration of
data; also see \code{\link{normPSM}}. \cr \cr Additional parameters for use
in \code{plot_} functions: \cr \code{ymin}, the minimum y at \code{log2}
scale; \cr \code{ymax}, the maximum y at \code{log2} scale; \cr
\code{ybreaks}, the breaks in y-axis at \code{log2} scale; \cr \code{nrow},
the number of rows; \cr \code{width}, the width of plot; \cr \code{height},
the height of plot.}
}
\value{
Trend classification and visualization of \code{log2FC}.
}
\description{
\code{proteoTrend} analyzes and visualizes the trends of protein
\code{log2FC}. Users should avoid calling the method directly, but instead use
the following wrappers.

\code{anal_prnTrend} is a wrapper of \code{\link{proteoTrend}} for the trend
analysis of protein data

\code{plot_prnTrend} is a wrapper of \code{\link{proteoTrend}} for the
visualization of the trends in protein data
}
\details{
The option of \code{complete_cases} will be forced to \code{TRUE} at
\code{impute_na = FALSE}
}
\examples{
# ===================================
# Trend analysis
# ===================================

## !!!require the brief working example in `?load_expts`

## global option
scale_log2r <- TRUE

# ===================================
# Analysis
# ===================================
# base (proteins, with sample order supervision)
anal_prnTrend(
  impute_na = FALSE,
  col_order = Order,
  n_clust = c(5:6), 
)

## row filtration (proteins)
anal_prnTrend(
  impute_na = FALSE,
  col_order = Order,
  n_clust = c(5:6), 
  filter_prots = exprs(prot_n_pep >= 3),
)

## additional row filtration by pVals (proteins, impute_na = FALSE)
# if not yet, run prerequisitive significance tests at `impute_na = FALSE`
pepSig(
  impute_na = FALSE, 
  W2_bat = ~ Term["(W2.BI.TMT2-W2.BI.TMT1)", 
                  "(W2.JHU.TMT2-W2.JHU.TMT1)", 
                  "(W2.PNNL.TMT2-W2.PNNL.TMT1)"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = FALSE)

# (`W16_vs_W2.pVal (W16-W2)` now a column key)
anal_prnTrend(
  impute_na = FALSE,
  col_order = Order,
  n_clust = c(5:6), 
  filter_prots_by_npep = exprs(prot_n_pep >= 3), 
  filter_prots_by_pval = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
)

## additional row filtration by pVals (impute_na = TRUE)
# if not yet, run prerequisitive NA imputation
pepImp(m = 2, maxit = 2)
prnImp(m = 5, maxit = 5)

# if not yet, run prerequisitive significance tests at `impute_na = TRUE`
pepSig(
  impute_na = TRUE, 
  W2_bat = ~ Term["(W2.BI.TMT2-W2.BI.TMT1)", 
                  "(W2.JHU.TMT2-W2.JHU.TMT1)", 
                  "(W2.PNNL.TMT2-W2.PNNL.TMT1)"],
  W2_loc = ~ Term_2["W2.BI-W2.JHU", 
                    "W2.BI-W2.PNNL", 
                    "W2.JHU-W2.PNNL"],
  W16_vs_W2 = ~ Term_3["W16-W2"], 
)

prnSig(impute_na = TRUE)

anal_prnTrend(
  impute_na = TRUE,
  col_order = Order,
  n_clust = c(5:6), 
  filter_prots_by_npep = exprs(prot_n_pep >= 3), 
  filter_prots_by_pval = exprs(`W16_vs_W2.pVal (W16-W2)` <= 1e-6), 
)

# ===================================
# Visualization
# ===================================
## no NA imputation 
plot_prnTrend(
  impute_na = FALSE, 
  col_order = Order,
)

plot_prnTrend(
  impute_na = FALSE, 
  col_order = Order,
  n_clust = c(5:6), 
)

# subsets visualization
plot_prnTrend(
  impute_na = FALSE, 
  col_order = Order,
  filter_prots = exprs(prot_n_pep >= 4),
)

## NA imputation
plot_prnTrend(
  impute_na = TRUE,
  col_order = Order,
  filter_prots = exprs(prot_n_pep >= 4),
)

}
\seealso{
\code{\link{load_expts}} for a reduced working example in data normalization \cr

 \code{\link{normPSM}} for extended examples in PSM data normalization \cr
 \code{\link{PSM2Pep}} for extended examples in PSM to peptide summarization \cr 
 \code{\link{mergePep}} for extended examples in peptide data merging \cr 
 \code{\link{standPep}} for extended examples in peptide data normalization \cr
 \code{\link{Pep2Prn}} for extended examples in peptide to protein summarization \cr
 \code{\link{standPrn}} for extended examples in protein data normalization. \cr 
 \code{\link{purgePSM}} and \code{\link{purgePep}} for extended examples in data purging \cr
 \code{\link{pepHist}} and \code{\link{prnHist}} for extended examples in histogram visualization. \cr 
 \code{\link{extract_raws}} and \code{\link{extract_psm_raws}} for extracting MS file names \cr 
 
 \code{\link{contain_str}}, \code{\link{contain_chars_in}}, \code{\link{not_contain_str}}, 
 \code{\link{not_contain_chars_in}}, \code{\link{start_with_str}}, 
 \code{\link{end_with_str}}, \code{\link{start_with_chars_in}} and 
 \code{\link{ends_with_chars_in}} for data subsetting by character strings \cr 
 
 \code{\link{pepImp}} and \code{\link{prnImp}} for missing value imputation \cr 
 \code{\link{pepSig}} and \code{\link{prnSig}} for significance tests \cr 
 \code{\link{pepVol}} and \code{\link{prnVol}} for volcano plot visualization \cr 
 
 \code{\link{prnGSPA}} for gene set enrichment analysis by protein significance pVals \cr 
 \code{\link{gspaMap}} for mapping GSPA to volcano plot visualization \cr 
 \code{\link{prnGSPAHM}} for heat map and network visualization of GSPA results \cr 
 \code{\link{prnGSVA}} for gene set variance analysis \cr 
 \code{\link{prnGSEA}} for data preparation for online GSEA. \cr 
 
 \code{\link{pepMDS}} and \code{\link{prnMDS}} for MDS visualization \cr 
 \code{\link{pepPCA}} and \code{\link{prnPcA}} for PCA visualization \cr 
 \code{\link{pepHM}} and \code{\link{prnHM}} for heat map visualization \cr 
 \code{\link{pepCorr_logFC}}, \code{\link{prnCorr_logFC}}, \code{\link{pepCorr_logInt}} and 
 \code{\link{prnCorr_logInt}}  for correlation plots \cr 
 
 \code{\link{anal_prnTrend}} and \code{\link{plot_prnTrend}} for protein trend analysis and visualization \cr 
 \code{\link{anal_pepNMF}}, \code{\link{anal_prnNMF}}, \code{\link{plot_pepNMFCon}}, 
 \code{\link{plot_prnNMFCon}}, \code{\link{plot_pepNMFCoef}}, \code{\link{plot_prnNMFCoef}} and 
 \code{\link{plot_metaNMF}} for protein NMF analysis and visualization \cr 
 
 \code{\link{dl_stringdbs}} and \code{\link{getStringDB}} for STRING-DB
}
