% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proteoQ-trends.R
\name{proteoTrend}
\alias{proteoTrend}
\alias{anal_prnTrend}
\alias{plot_prnTrend}
\title{Clustering of data trends}
\usage{
proteoTrend(id = c("pep_seq", "pep_seq_mod", "prot_acc", "gene"),
  task = "anal", col_select = NULL, col_group = NULL,
  col_order = NULL, impute_na = FALSE, complete_cases = FALSE,
  n_clust = NULL, scale_log2r = TRUE, df = NULL, filepath = NULL,
  filename = NULL, ...)

anal_prnTrend(...)

plot_prnTrend(...)
}
\arguments{
\item{id}{Character string to indicate the type of data. The value will be
determined automatically. Peptide data will be used at \code{id = pep_seq}
or \code{pep_seq_mod}, and protein data will be used at \code{id = prot_acc}
or \code{gene}.}

\item{task}{Character string; a signature for task dispatching in a function
factory. The value will be determined automatically.}

\item{col_select}{Character string to a column key in \code{expt_smry.xlsx}.
Samples corresponding to non-empty entries under the column key will be
included in the indicated analysis. At the \code{NULL} default, the column
key will be \code{Select}.}

\item{col_group}{Character string to a column key in \code{expt_smry.xlsx}.
Samples corresponding to non-empty entries under \code{col_group} will be
used for sample grouping in the indicated analysis. At the NULL default, the
column key \code{Group} will be used. No data annotation by groups will be
performed if the fields under the indicated group column is empty.}

\item{col_order}{Character string to a column key in \code{expt_smry.xlsx}.
Numeric values under which will be used for the left-to-right arrangement of
samples in plots. At the NULL default, the column key \code{Order} will be
used. If values under column \code{Order} are left blank, samples will be
ordered by their names.}

\item{impute_na}{Logical; if TRUE, data with the imputation of missing values
will be used. The default is FALSE.}

\item{complete_cases}{Logical; if TRUE, only cases that are complete with no
missing values will be used. The default is FALSE.}

\item{n_clust}{Numeric vector; the number(s) of clusters that data will be
divided into. The default is c(5:6).}

\item{scale_log2r}{Logical; if TRUE, adjusts \code{log2FC} to the same scale
of standard deviation across all samples. The default is TRUE.}

\item{df}{The name of input data file. By default, it will be determined
automatically by the value of \code{id}.}

\item{filepath}{Use system default.}

\item{filename}{Use system default.}

\item{...}{\code{filter_}: Logical expression(s) for the row filtration of
data; also see \code{\link{normPSM}}. \cr \cr Additional parameters for use
in \code{plot_} functions: \cr \code{ymin}, the minimum y at \code{log2}
scale; \cr \code{ymax}, the maximum y at \code{log2} scale; \cr
\code{ybreaks}, the breaks in y-axis at \code{log2} scale; \cr \code{nrow},
the number of rows; \cr \code{width}, the width of plot; \cr \code{height},
the height of plot.}
}
\value{
Trend classification and visualization of \code{log2FC}.
}
\description{
\code{proteoTrend} analyzes and visualizes the trends of protein
\code{log2FC}. Users should avoid calling the method directly, but instead use
the following wrappers.

\code{anal_prnTrend} is a wrapper of \code{\link{proteoTrend}} for the trend
analysis of protein data

\code{plot_prnTrend} is a wrapper of \code{\link{proteoTrend}} for the
visualization of the trends in protein data
}
\details{
The option of \code{complete_cases} will be forced to \code{TRUE} at
\code{impute_na = FALSE}
}
\examples{
# ===================================
# Trend analysis
# ===================================

## !!!require the brief working example in `?load_expts`

# global option
scale_log2r <- TRUE

# analysis 
# (with sample order supervision)
anal_prnTrend(
  col_order = Order,
  n_clust = c(5:8), 
  filter_by_npep = exprs(prot_n_pep >= 2),
)

# visualization
plot_prnTrend(
  col_order = Order,
  n_clust = c(5:6), 
)

# subsets visualization
# (proteins with four or more identifying peptides)
plot_prnTrend(
  col_order = Order,
  filter_by_npep = exprs(prot_n_pep >= 4),
)

}
