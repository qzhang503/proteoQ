% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dbs.R
\name{calc_monopeptide}
\alias{calc_monopeptide}
\title{Calculates the mono-isotopic mass of a peptide sequence.}
\usage{
calc_monopeptide(
  aa_seq,
  fixedmods,
  varmods,
  include_insource_nl = FALSE,
  maxn_vmods_setscombi = 64,
  maxn_vmods_per_pep = Inf,
  maxn_sites_per_vmod = Inf,
  digits = 4
)
}
\arguments{
\item{aa_seq}{Character string; a peptide sequences with one-letter
representation of amino acids.}

\item{fixedmods}{A character vector of fixed modifications. See also
\link{parse_unimod} for grammars.}

\item{varmods}{A character vector of variable modifications.}

\item{include_insource_nl}{Logical Logical; if TRUE, includes MS1 precursor
masses with the losses of neutral species prior to MS2 fragmentation. The
default is FALSE. The setting at TRUE remains experimenting by allowing
additional masses in the universe of MS1 precursors. The offsets in NLs (by
adding back precursor masses) have not yet taken into account in MS2 ion
searches. A more systemically approach such as \code{open} MS1 masses might
be developed in the future.}

\item{maxn_vmods_setscombi}{Integer; the maximum number of combinatorial variable
modifications and neutral losses.}

\item{maxn_vmods_per_pep}{The maximum number of variable modifications per
peptide.}

\item{maxn_sites_per_vmod}{Integer; the maximum number of combinatorial
variable modifications per site in a per peptide sequence.}

\item{digits}{Integer; the number of decimal places to be used.}
}
\description{
For direct uses from an R console (with trade-offs in speed).
}
\examples{
\donttest{
## No variable modifications
# (1)
x <- calc_monopeptide("MAKEMASSPECFUN", 
                      fixedmods = NULL, 
                      varmods = NULL)

stopifnot((unlist(x$mass) - 1594.5369) < 1e-4)

# (2-a) 
x <- calc_monopeptide("MAKEMASSPECFUN", 
                      fixedmods = "Oxidation (M)", 
                      varmods = NULL)

m <- unlist(x$mass)

stopifnot((m[1] - 1626.5267) < 1e-4)

# (2-b) combinatorial NL for fixed modifications
x <- calc_monopeptide("MAKEMASSPECFUN", 
                      fixedmods = "Oxidation (M)", 
                      varmods = NULL, 
                      include_insource_nl = TRUE)
                      
m <- unlist(x$mass)

stopifnot(length(m) == 2L)
stopifnot((m[1] - m[2] - 127.9965) < 1e-4)

## With variable modifications
# (3-a)
x <- calc_monopeptide("MAKEMASSPECFUN", 
                      fixedmods = NULL, 
                      varmods = "Oxidation (M)")

m <- unlist(x$mass)

stopifnot((m[1] - 1594.5369) < 1e-4)
stopifnot((m[2] - m[1]) == (m[3] - m[2]))

# x$vmods_ps

# (3-b)
x <- calc_monopeptide("MAKEMASSPECFUN", 
                      fixedmods = NULL, 
                      varmods = "Oxidation (M)", 
                      include_insource_nl = TRUE)

x$mass

# (4-a)
x <- calc_monopeptide("MAKEMASSPECFUN",
                      c("TMT6plex (N-term)", 
                        "TMT6plex (K)", 
                        "Carbamidomethyl (C)"),
                      c("Acetyl (N-term)", 
                        "Gln->pyro-Glu (N-term = Q)", 
                        "Oxidation (M)"))
                      
x$mass

# The N-term M realizes with acetylation
x$vmods_ps[[5]]

# The N-term M realizes with TMT
x$vmods_ps[[6]]


# (4-b)
x <- calc_monopeptide("MAKEMASSPECFUN",
                      c("TMT6plex (N-term)", 
                        "TMT6plex (K)", 
                        "Carbamidomethyl (C)"),
                      c("Acetyl (N-term)", 
                        "Gln->pyro-Glu (N-term = Q)", 
                        "Oxidation (M)"), 
                        include_insource_nl = TRUE)
                      
x$mass
}
}
