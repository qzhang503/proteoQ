fasta = c("~/proteoQ/dbs/fasta/uniprot/uniprot_mm_2014_07.fasta"),
# fasta = c("~/proteoQ/dbs/fasta/uniprot/uniprot_2016_10.fasta"),
entrez = "~/proteoQ/dbs/entrez/uniprot_entrez_mm.rds",
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = TRUE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
use_lowercase_aa = TRUE,
# in-call filtration
filter_pep_expect = expr(pep_expect <= .1),
)
rm_outliers = TRUE
cleanupPSM(rm_outliers = rm_outliers,
group_psm_by = group_psm_by)
dfw_split <- df %>%
dplyr::select(grep("^I[0-9]{3}", names(.))) %>%
dplyr::mutate(RM = rowMeans(.[, grep("^I[0-9]{3}", names(.))[channelInfo$labeledChannels]],
na.rm = TRUE)) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ log2(.x/RM)) %>%
dplyr::select(-c("RM")) %>%
`colnames<-`(gsub("I", "X", names(.))) %>%
dplyr::mutate_at(.vars = grep("^X[0-9]{3}", names(.)),
~ replace(.x, is.infinite(.x), NA)) %>%
dplyr::bind_cols(df[, c("psm_index", group_psm_by)], .)
dfw_split <- df %>%
dplyr::select(grep("^I[0-9]{3}", names(.))) %>%
dplyr::mutate(RM = rowMeans(.[, grep("^I[0-9]{3}", names(.))[channelInfo$labeledChannels]],
na.rm = TRUE)) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ log2(.x/RM)) %>%
dplyr::select(-c("RM")) %>%
`colnames<-`(gsub("I", "X", names(.))) %>%
dplyr::mutate_at(.vars = grep("^X[0-9]{3}", names(.)),
~ replace(.x, is.infinite(.x), NA)) %>%
dplyr::bind_cols(df[, c("psm_index", group_psm_by)], .) %>%
split(., .[[group_psm_by]], drop = TRUE)
range_colRatios <- grep("^X[0-9]{3}", names(dfw_split[[1]]))
range_colRatios
tempdata <- do.call("rbind", lapply(dfw_split, locate_outliers, range_colRatios)) %>%
dplyr::mutate_at(.vars = grep("^X[0-9]{3}", names(.)),
~ replace(.x, is.infinite(.x), NA)) %>%
tidyr::unite(pep_seq_i, pep_seq, psm_index, sep = ":") %>%
dplyr::mutate_at(.vars = grep("^X[0-9]{3}", names(.)),
~ replace(.x, !is.na(.x), 1))
dfw_split <- do.call("rbind", lapply(dfw_split, locate_outliers, range_colRatios)) %>%
dplyr::mutate_at(.vars = grep("^X[0-9]{3}", names(.)),
~ replace(.x, is.infinite(.x), NA))
tempdata <- dfw_split %>%
tidyr::unite(pep_seq_i, !!group_psm_by, psm_index, sep = ":")
View(tempdata)
tempdata <- dfw_split %>%
tidyr::unite(pep_seq_i, !!group_psm_by, psm_index, sep = ":") %>%
dplyr::mutate_at(.vars = grep("^X[0-9]{3}", names(.)),
~ replace(.x, !is.na(.x), 1))
dfw_split <- dfw_split %>%
tidyr::unite(pep_seq_i, !!group_psm_by, psm_index, sep = ":") %>%
dplyr::mutate_at(.vars = grep("^X[0-9]{3}", names(.)),
~ replace(.x, !is.na(.x), 1))
View(dfw_split)
tempdata <- df %>%
tidyr::unite(pep_seq_i, !!group_psm_by, psm_index, sep = ":")
tempdata <- df %>%
tidyr::unite(pep_seq_i, !!group_psm_by, psm_index, sep = ":") %>%
dplyr::left_join(dfw_split, by = "pep_seq_i")
tempdata <- df %>%
tidyr::unite(pep_seq_i, !!group_psm_by, psm_index, sep = ":") %>%
dplyr::left_join(dfw_split, by = "pep_seq_i")
tempdata <- df %>%
tidyr::unite(pep_seq_i, !!group_psm_by, psm_index, sep = ":") %>%
dplyr::left_join(dfw_split, by = "pep_seq_i")
tempdata2 <- tempdata %>%
tidyr::separate(pep_seq_i, into = c(group_psm_by, "psm_index"), sep = ":", remove = TRUE) %>%
dplyr::select(-c("psm_index"))
names(tempdata2)
df <- df %>%
tidyr::unite(pep_seq_i, !!group_psm_by, psm_index, sep = ":") %>%
dplyr::left_join(dfw_split, by = "pep_seq_i")  %>%
tidyr::separate(pep_seq_i, into = c(group_psm_by, "psm_index"), sep = ":", remove = TRUE) %>%
dplyr::select(-c("psm_index"))
rm(dfw_split, range_colRatios)
tempdata <-
purrr::map2(as.list(df[, grepl("^I[0-9]{3}", names(df))]),
as.list(df[, grepl("^X[0-9]{3}", names(df))]), `*`) %>%
dplyr::bind_rows()
View(tempdata)
df[, grepl("^I[0-9]{3}", names(df))] <-
purrr::map2(as.list(df[, grepl("^I[0-9]{3}", names(df))]),
as.list(df[, grepl("^X[0-9]{3}", names(df))]), `*`) %>%
dplyr::bind_rows()
df[, grepl("^R[0-9]{3}", names(df))] <-
purrr::map2(as.list(df[, grepl("^R[0-9]{3}", names(df))]),
as.list(df[, grepl("^X[0-9]{3}", names(df))]), `*`) %>%
dplyr::bind_rows()
grepl("^R[0-9]{3}|^I[0-9]{3}|^X[0-9]{3}|^raw_file$", names(df))
tempdata = df[, !grepl("^R[0-9]{3}|^I[0-9]{3}|^X[0-9]{3}|^raw_file$", names(df))]
View(tempdata)
df <- cbind.data.frame(raw_file = df[, c("raw_file")],
df[, !grepl("^R[0-9]{3}|^I[0-9]{3}|^X[0-9]{3}|^raw_file$", names(df))],
df[, grepl("^R[0-9]{3}|^I[0-9]{3}", names(df))]) %>%
dplyr::filter(rowSums(!is.na(.[, grep("^R[0-9]{3}", names(.) )])) > 1) %>% # "> 1" as "R126 == 1"
dplyr::mutate_at(.vars = which(names(.) == "I126") - 1 + channelInfo$emptyChannels,
~ replace(.x, , 0))
fn <- paste0(gsub(".csv", "", file), "_Clean.txt")
write.table(df, file.path(dat_dir, "PSM/cache", fn),
sep = "\t", col.names = TRUE, row.names = FALSE)
message(file, "processed\n")
devtools::document("C:/Results/R/proteoQ")
devtools::document("C:/Results/R/proteoQ")
?dixon.test
?rosnerTest
dixon.test
dixon.test
source('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
x = c(0.0000000, 0.0000000, 1.0271542, 0.0000000, 0.2080097)
substitute(x)
deparse(substitute(x))
sort(x[complete.cases(x)])
x <- sort(x[complete.cases(x)])
n <- length(x)
type
x = c(0.0000000, 0.0000000, 1.0271542, 0.0000000, 0.2080097)
dixon.test(x)
my_dixon_test(x)
type
type == 10 || type == 0
n < 3 || n > 30
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
my_dixon_test(x)
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
my_dixon_test(x)
type
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
my_dixon_test(x)
x[n] - mean(x)
x[n]
mean(x)
xor(((x[n] - mean(x)) < (mean(x) - x[1])), opposite)
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
pdixon
library(dixon.test)
library(dixon.test)
library(outliers)
?pdixon
pdixon
qdixon
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
x = c(0.0000000, 0.0000000, 1.0271542, 0.0000000, 0.2080097)
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
x = c(0.0000000, 0.0000000, 1.0271542, 0.0000000, 0.2080097)
dixon_test(x)
outliers::qtable
source('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
x = c(0.0000000, 0.0000000, 1.0271542, 0.0000000, 0.2080097)
dixon_test(x)
dixon_test(x)
n
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
dixon_test(x)
dixon_test(x)
two.sided
RVAL
Q
gofOutlier_obj <- outliers::dixon.test(as.numeric(x), type = 0)
x
outliers::dixon.test(as.numeric(x), type = 0)
gofOutlier_obj <- outliers::dixon.test(as.numeric(x), type = 0)
gofOutlier_obj
gofOutlier_obj$p.value < 0.05
gofOutlier_obj$alternative
x[which.max(x)] <- NA
x
x = c(0.0000000, 0.0000000, 1.0271542, 0.0000000, 0.2080097)
x
x[!is.na(x)]
x2 <- x[!is.na(x)]
length(x2)
length(unique(x2))
outliers::dixon.test(as.numeric(x), type = 0)
out <- outliers::dixon.test(as.numeric(x), type = 0)
out
rm(gofOutlier_obj)
out$p.value < 0.05
grepl("^highest", out$alternative)
x[which.max(x)] <- NA
x
x2 <- x[!is.na(x)]
length(unique(x2))
out <- outliers::dixon.test(as.numeric(x), type = 0) else out$p.value <- 1
length(x2) > 2 && length(unique(x2)) > 1
as.numeric(x)
outliers::dixon.test(as.numeric(x), type = 0)
x
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
x = c(0.0000000, 0.0000000, 1.0271542, 0.0000000, 0.2080097)
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
x2 <- x[!is.na(x)]
dixon_test(as.numeric(x), type = 0)
alt
alt
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
debugSource('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
source('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
x = c(0.0000000, 0.0000000, 1.0271542, 0.0000000, 0.2080097)
x2 <- x[!is.na(x)]
out <- dixon_test(as.numeric(x), type = 0)
out
out$p.value < 0.05
out$alternative == "high"
x
x[which.max(x)] <- NA
x
source('C:/Results/R/proteoQ/R/New folder/dixon_test.R')
?dixon_test
devtools::document("C:/Results/R/proteoQ")
?Dixon_outliers
?dixon_test
library(outliers)
?dixon.test
?pdixon
devtools::document("C:/Results/R/proteoQ")
?proteoQ::qdixon
devtools::document("C:/Results/R/proteoQ")
devtools::document("C:/Results/R/proteoQ")
?qdixon
?q_dixon
devtools::document("C:/Results/R/proteoQ")
?q_dixon
?p_dixon
?dixon_test
?Dixon_outliers
?qtable
devtools::document("C:/Results/R/proteoQ")
?q_table
devtools::document(pkg  = "C:/Results/R/proteoQ")
load_expts("C:/Results/Abu_Amer/002_20190613_uniprot_acc_test")
devtools::document(pkg  = "C:/Results/R/proteoQ")
normPSM(
group_psm_by = pep_seq_mod,
group_pep_by = gene,
# group_pep_by = prot_acc,
fasta = c("~/proteoQ/dbs/fasta/uniprot/uniprot_mm_2014_07.fasta"),
# fasta = c("~/proteoQ/dbs/fasta/uniprot/uniprot_2016_10.fasta"),
entrez = "~/proteoQ/dbs/entrez/uniprot_entrez_mm.rds",
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = TRUE,
rm_outliers = TRUE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
use_lowercase_aa = TRUE,
# in-call filtration
filter_pep_expect = expr(pep_expect <= .1),
)
cleanupPSM(rm_outliers = rm_outliers,
group_psm_by = group_psm_by)
rm_outliers
?clusterMap
devtools::document(pkg  = "C:/Results/R/proteoQ")
?cleanupPSM
devtools::document(pkg  = "C:/Results/R/proteoQ")
?cleanupPSM
?splitPSM
devtools::document(pkg  = "C:/Results/R/proteoQ")
devtools::document(pkg  = "C:/Results/R/proteoQ")
devtools::document(pkg  = "C:/Results/R/proteoQ")
?grubbs.test
grubbs.test
pgrubbs
library(outliers)
pgrubbs
qgrubbs
devtools::document(pkg  = "C:/Results/R/proteoQ")
?grubbs_test
devtools::document(pkg  = "C:/Results/R/proteoQ")
library(outliers)
qgrubbs
qgrubbs
devtools::document(pkg  = "C:/Results/R/proteoQ")
?Grubbs_outliers
?grubbs_test
?q_grubbs
?p_grubbs
?grubbs.test
x= rnorm(20)
grubbs_test(x)
#' Outlier removals with Grubbs' method
#'
#' See also \link[outliers]{grubbs.test}
#'
#' @inheritParams dixon_test
grubbs_test <- function (x, type = 10, opposite = FALSE, two.sided = FALSE) {
if (sum(c(10, 11, 20) == type) == 0) stop("Incorrect type")
DNAME <- deparse(substitute(x))
x <- sort(x[complete.cases(x)])
n <- length(x)
if (type == 11) {
g <- (x[n] - x[1])/sd(x)
u <- var(x[2:(n - 1)])/var(x) * (n - 3)/(n - 1)
pval = 1 - p_grubbs(g, n, type = 11)
method <- "Grubbs test for two opposite outliers"
alt = paste(x[1], "and", x[n], "are outliers")
} else if (type == 10) {
if (xor(((x[n] - mean(x)) < (mean(x) - x[1])), opposite)) {
alt = paste("lowest value", x[1], "is an outlier")
o <- x[1]
d <- x[2:n]
} else {
alt = paste("highest value", x[n], "is an outlier")
o <- x[n]
d <- x[1:(n - 1)]
}
g <- abs(o - mean(x))/sd(x)
u <- var(d)/var(x) * (n - 2)/(n - 1)
pval <- 1 - p_grubbs(g, n, type = 10)
method <- "Grubbs test for one outlier"
} else {
if (xor(((x[n] - mean(x)) < (mean(x) - x[1])), opposite)) {
alt = paste("lowest values", x[1], ",",
x[2], "are outliers")
u <- var(x[3:n])/var(x) * (n - 3)/(n - 1)
} else {
alt = paste("highest values", x[n - 1], ",",
x[n], "are outliers")
u <- var(x[1:(n - 2)])/var(x) * (n - 3)/(n - 1)
}
g <- NULL
pval <- p_grubbs(u, n, type = 20)
method <- "Grubbs test for two outliers"
}
if (two.sided) {
pval <- 2 * pval
if (pval > 1)
pval <- 2 - pval
}
RVAL <- list(statistic = c(G = g, U = u), alternative = alt,
p.value = pval, method = method, data.name = DNAME)
class(RVAL) <- "htest"
return(RVAL)
}
#' Distribution function
#'
#' @param p Vector of probabilities. See also \link[outliers]{dixon.test}.
#' @param n Length of sample Length of sample.
#' @param rev Logical; if TRUE, acts as p_dixon.
#' @inheritParams dixon_test
q_grubbs <- function (p, n, type = 10, rev = FALSE) {
if (type == 10) {
if (!rev) {
return(((n - 1)/sqrt(n)) * sqrt(qt((1 - p)/n, n -
2)^2/(n - 2 + qt((1 - p)/n, n - 2)^2)))
}
else {
s <- (p^2 * n * (2 - n))/(p^2 * n - (n - 1)^2)
t <- sqrt(s)
if (is.nan(t)) {
res <- 0
}
else {
res <- n * (1 - pt(t, n - 2))
res[res > 1] <- 1
}
return(1 - res)
}
}
else if (type == 11) {
if (!rev) {
return(sqrt((2 * (n - 1) * qt((1 - p)/(n * (n - 1)),
n - 2)^2)/(n - 2 + qt((1 - p)/(n * (n - 1)),
n - 2)^2)))
}
else {
q <- p
p <- vector()
for (i in 1:length(q)) {
if (q[i] > qgrubbs(0.9999, n, type = 11)) {
pp <- 1
}
else if (q[i] < qgrubbs(2e-16, n, type = 11)) {
pp <- 0
}
else {
f <- function(x, q, n) {
qgrubbs(x, n, type = 11) - q
}
pp <- uniroot(f, c(0.001, 0.9999), q = q[i],
n = n)$root
}
p <- c(p, pp)
}
return(p)
}
}
else {
if (n > 30)
stop("n must be in range 3-30")
pp <- c(0.01, 0.025, 0.05, 0.1, 0.15, 0.2, 0.4, 0.6,
0.8, 0.9, 0.95, 0.975, 0.99)
gtwo <- c(NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,
NA, NA, 1e-05, 2e-04, 8e-04, 0.0031, 0.007, 0.013,
0.055, 0.138, 0.283, 0.399, 0.482, 0.54, 0.589, 0.0035,
0.009, 0.0183, 0.0376, 0.058, 0.078, 0.169, 0.276,
0.41, 0.502, 0.571, 0.63, 0.689, 0.0186, 0.0349,
0.0565, 0.0921, 0.124, 0.153, 0.257, 0.361, 0.478,
0.562, 0.626, 0.674, 0.724, 0.044, 0.0708, 0.102,
0.1479, 0.186, 0.217, 0.325, 0.423, 0.53, 0.605,
0.659, 0.701, 0.743, 0.075, 0.1101, 0.1478, 0.1994,
0.238, 0.271, 0.376, 0.468, 0.568, 0.635, 0.684,
0.722, 0.763, 0.1082, 0.1492, 0.1909, 0.2454, 0.285,
0.319, 0.42, 0.507, 0.598, 0.658, 0.703, 0.738, 0.776,
0.1415, 0.1865, 0.2305, 0.2863, 0.326, 0.358, 0.455,
0.537, 0.622, 0.678, 0.721, 0.753, 0.787, 0.1736,
0.2212, 0.2666, 0.3226, 0.363, 0.394, 0.487, 0.564,
0.624, 0.695, 0.734, 0.765, 0.797, 0.2044, 0.2536,
0.2996, 0.3552, 0.393, 0.424, 0.514, 0.585, 0.66,
0.709, 0.745, 0.773, 0.802, 0.2333, 0.2836, 0.3295,
0.3843, 0.421, 0.451, 0.537, 0.605, 0.676, 0.721,
0.755, 0.782, 0.809, 0.2605, 0.3112, 0.3568, 0.4106,
0.447, 0.477, 0.558, 0.622, 0.689, 0.733, 0.765,
0.789, 0.817, 0.2859, 0.3367, 0.3818, 0.4345, 0.469,
0.497, 0.576, 0.639, 0.701, 0.742, 0.773, 0.797,
0.822, 0.3098, 0.3603, 0.4048, 0.4562, 0.491, 0.518,
0.593, 0.653, 0.713, 0.751, 0.78, 0.803, 0.826, 0.3321,
0.3822, 0.4259, 0.4761, 0.511, 0.536, 0.609, 0.666,
0.723, 0.76, 0.787, 0.808, 0.831, 0.353, 0.4025,
0.4455, 0.4944, 0.526, 0.552, 0.622, 0.676, 0.732,
0.767, 0.793, 0.814, 0.835, 0.3725, 0.4214, 0.4636,
0.5113, 0.543, 0.567, 0.635, 0.688, 0.74, 0.774,
0.799, 0.818, 0.838, 0.3909, 0.4391, 0.4804, 0.5269,
0.559, 0.582, 0.647, 0.697, 0.748, 0.781, 0.805,
0.823, 0.843, 0.408, 0.457, 0.496, 0.542, 0.571,
0.594, 0.657, 0.706, 0.755, 0.786, 0.81, 0.828, 0.847,
0.425, 0.474, 0.512, 0.556, 0.584, 0.606, 0.668,
0.715, 0.762, 0.792, 0.815, 0.834, 0.85, 0.442, 0.486,
0.524, 0.568, 0.596, 0.618, 0.677, 0.723, 0.769,
0.797, 0.819, 0.836, 0.853, 0.453, 0.5, 0.538, 0.581,
0.608, 0.628, 0.686, 0.73, 0.774, 0.802, 0.823, 0.84,
0.857, 0.466, 0.511, 0.547, 0.589, 0.616, 0.637,
0.693, 0.736, 0.779, 0.807, 0.827, 0.843, 0.86, 0.482,
0.525, 0.561, 0.601, 0.627, 0.647, 0.701, 0.743,
0.784, 0.811, 0.83, 0.845, 0.861, 0.492, 0.536, 0.572,
0.611, 0.636, 0.655, 0.709, 0.749, 0.789, 0.815,
0.834, 0.849, 0.864, 0.505, 0.548, 0.583, 0.621,
0.646, 0.664, 0.716, 0.755, 0.794, 0.819, 0.837,
0.851, 0.866, 0.516, 0.558, 0.592, 0.629, 0.654,
0.672, 0.722, 0.76, 0.798, 0.822, 0.84, 0.854, 0.869,
0.528, 0.568, 0.602, 0.638, 0.661, 0.679, 0.728,
0.765, 0.802, 0.826, 0.842, 0.856, 0.87)
dim(gtwo) <- c(13, 30)
if (!rev)
res <- qtable(p, pp, gtwo[, n])
else res <- qtable(p, gtwo[, n], pp)
res[res < 0] <- 0
res[res > 1] <- 1
return(res)
}
}
#' Outlier removals with Grubbs' method
#'
#' @param q Vector of quantiles.
#' @inheritParams q_dixon
p_grubbs <- function (q, n, type = 10)
{
q_grubbs(q, n, type, rev = TRUE)
}
grubbs_test(x)
devtools::document(pkg  = "C:/Results/R/proteoQ")
warnings()
devtools::document(pkg  = "C:/Results/R/proteoQ")
foo_combine_codes <- function (filepath = file.path("C:/Results/R/proteoQ/R")) {
filenames <- dir(filepath, pattern = ".R$")
dir.create(file.path(filepath, "temp"))
purrr::map(file.path(filepath, filenames), readLines) %>%
purrr::reduce(`c`, init = NULL) %>%
writeLines(file.path(filepath, "temp/all.R"))
}
foo_combine_codes()
devtools::document(pkg  = "C:/Results/R/proteoQDA")
warnings()
?magrittr::set_names
?purrr::set_names
if (!requireNamespace("GSVA", quietly = TRUE)) {
stop("Package \"GSVA\" needed for this function to work. Please install it.",
call. = FALSE)
}
devtools::document("C:/Results/R/proteoQ")
devtools::document("C:/Results/R/proteoQ")
load_expts("~/proteoQ/examples_mascot")
prnGSVA(
impute_na = FALSE,
min.sz = 10,
verbose = FALSE,
parallel.sz = 0,
mx.diff = TRUE,
gset_nms = "go_sets",
)
requireNamespace("GSVA")
!requireNamespace("GSVA", quietly = TRUE)
usethis::use_package("GSVA", type = "suggests")
setwd("C:/Results/R/proteoQ")
usethis::use_package("GSVA", type = "suggests")
dir()
usethis::use_package("dplyr")
dir()
getwd()
usethis::create_package("C:/Results/R/proteoQ")
