gc()
out <- parDist(mat)
gc()
idxes <- chunksplit(seq_along(mat), 64, "list")
len <- length(mat)
i=63
z <- par_distC(idxes[[i]], mat)
y <- par_dist(idxes[[i]], mat)
x <- par_dist1(idxes[[i]], mat[idxes[[i]][1]:len])
identical(x, y)
identical(x, z)
z1 = x[[1]]
x1 = x[[1]]
str(x1)
str(z1)
identical(x1, z1)
x2 = x[[2]]
identical(y, z)
identical(y, x)
z2 = z[[2]]
identical(z2, x2)
x3 = x[[3]]
z3 = z[[3]]
rm(x1, x2, x3)
rm(z1, x2, z3)
rm(z2)
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
a <- mat[idxes[[i]][1]:length(mat)]
b <- fooList4(idxes[[i]], mat)
identical(a[[1]], b[[1]])
identical(a[[2]], b[[1]])
a[1] <- NULL
identical(a, b)
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
a <- mat[idxes[[i]][1]:length(mat)]
b <- fooList4(idxes[[i]], mat)
identical(a, b)
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
b = foorange(idxes[[i]], mat)
idxes[[i]][1]
tail(b)
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
b = foorange(idxes[[i]], mat)
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
b = foorange(idxes[[i]], mat)
head(b)
tail(b)
a <- mat[idxes[[i]][1]:length(mat)]
a = idxes[[i]]
head(a)
tail(a)
head(b)
tail(b)
a = idxes[[i]]
b <- fooList4(idxes[[i]], mat)
a = idxes[[i]]
b <- foorange(idxes[[i]], mat)
a <- mat[idxes[[i]][1]:length(mat)]
idxes[[i]]
13299-13010
13299-13100
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
a = idxes[[i]]
b <- foorange(idxes[[i]], mat)
a = idxes[[i]]
a = idxes[[i]]:length(mat)
tail(a)
tail(b)
head(a)
head(b)
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
a = idxes[[i]]:length(mat)
b <- foorange(idxes[[i]], mat)
a = idxes[[i]]:length(mat)
b <- foorange(idxes[[i]], mat)
a = idxes[[i]][1:length(mat)
b <- foorange(idxes[[i]], mat)
a = idxes[[i]][1]:length(mat)
b <- foorange(idxes[[i]], mat)
identical(a, b)
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
a <- mat[idxes[[i]][1]:length(mat)]
b <- fooList4(idxes[[i]], mat)
ident(a, b)
identical(a, b)
devtools::document("E:/R/proteoQ/R")
out_path <- "~/proteoQ/test"
mat <- readRDS(file.path(out_path, "mat.rds"))
devtools::install("E:/R/proteoQ/R")
devtools::document("E:/R/proteoQ/R")
out_path <- "~/proteoQ/test"
mat <- readRDS(file.path(out_path, "mat.rds"))
devtools::document("E:/R/proteoQ/R")
out_path <- "~/proteoQ/test"
mat <- readRDS(file.path(out_path, "mat.rds"))
out <- parDist(mat)
clusterExport(cl, list("par_distC"), envir = env_where("par_distC"))
out <- clusterApplyLB(cl, idxes, par_distC, mat)
gc()
stopCluster(cl)
gc()
idxes <- chunksplit(seq_along(mat), 64, "list")
len <- length(mat)
i=63
x <- par_dist1(idxes[[i]], mat[idxes[[i]][1]:len])
y <- par_dist(idxes[[i]], mat)
z <- par_distC(idxes[[i]], mat)
identical(x, y)
identical(x, z)
src_codes <- 'List par_distC(IntegerVector cols, List mat) {
int start = cols[0];
IntegerVector range_mat = Range(start-1, mat.size()-1);
mat = mat[range_mat];
int len_m = mat.size();
int len_c = cols.size();
List out(len_c);
for (int i = 0; i < len_c; i++) {
if (i % 1000 == 0) Rcpp::checkUserInterrupt();
LogicalVector y = as<LogicalVector>(mat[i]);
IntegerVector js = Range(i, len_m-1);
IntegerVector outj(js.size());
int k = 0;
for (int j = i; j < len_m; j++) {
LogicalVector matj = mat[j];
LogicalVector ij = matj & y;
outj[k] = sum(ij);
k++;
}
out[i] = outj;
}
return out;
}'
out <- parDist(mat)
src_codes <- 'List par_distC(IntegerVector cols, List mat) {
int start = cols[0];
IntegerVector range_mat = Range(start-1, mat.size()-1);
mat = mat[range_mat];
int len_m = mat.size();
int len_c = cols.size();
List out(len_c);
for (int i = 0; i < len_c; i++) {
if (i % 1000 == 0) Rcpp::checkUserInterrupt();
LogicalVector y = as<LogicalVector>(mat[i]);
IntegerVector js = Range(i, len_m-1);
IntegerVector outj(js.size());
int k = 0;
for (int j = i; j < len_m; j++) {
LogicalVector matj = mat[j];
LogicalVector ij = matj & y;
outj[k] = sum(ij);
k++;
}
out[i] = outj;
}
return out;
}'
clusterCall(cl, Rcpp::cppFunction, code=src_codes, env=.GlobalEnv)
clusterCall(cl, c.namecall, name="par_distC", idxes, mat)
c.namecall <- function(name,...){
funCXX <- get(name)
funCXX(...)
}
clusterCall(cl, c.namecall, name="par_distC", idxes, mat)
stopCluster(cl)
gc()
clusterExport(cl, list("par_distC"), envir = environment(proteoQ:::par_distC))
cl <- makeCluster(getOption("cl.cores", n_cores))
clusterExport(cl, list("%>%"), envir = environment(magrittr::`%>%`))
clusterExport(cl, list("cppFunction"), envir = environment(Rcpp::cppFunction))
# clusterExport(cl, list("par_distC"), envir = env_where("par_distC"))
clusterExport(cl, list("par_distC"), envir = environment(proteoQ:::par_distC))
clusterEvalQ(cl, { cppFunction("cpp1.cpp"); })
stopCluster(cl)
gc()
cl <- makeCluster(getOption("cl.cores", n_cores))
clusterExport(cl, list("%>%"), envir = environment(magrittr::`%>%`))
clusterExport(cl, list("cppFunction"), envir = environment(Rcpp::cppFunction))
# clusterExport(cl, list("par_distC"), envir = env_where("par_distC"))
clusterExport(cl, list("par_distC"), envir = environment(proteoQ:::par_distC))
?makeCluster
getOption("cl.cores", n_cores)
stopCluster(cl)
library(RcppParallel)
?parallelFor
library(inline)
install.packages(inline)
install.packages("inline")
out <- parDist(mat)
clusterApply(cl, ls, envir = .GlobalEnv)
clusterCall(cl, ls, envir=.GlobalEnv)
clusterCall(cl, par_distC, envir=.GlobalEnv)
out = clusterCall(cl, par_distC, indexes, mat)
out = clusterCall(cl, par_distC, idxes, mat)
gc()
stopCluster(cl)
cl <- makeCluster(getOption("cl.cores", n_cores))
clusterExport(cl, list("%>%"), envir = environment(magrittr::`%>%`))
out <- clusterApplyLB(cl, idxes, par_dist, mat)
devtools::document("E:/R/proteoQ/R")
out_path <- "~/proteoQ/test"
mat <- readRDS(file.path(out_path, "mat.rds"))
out <- parDist(mat)
clusterExport(cl, list("par_distC"), envir = environment(proteoQ:::par_distC))
out <- clusterApply(cl, idxes, par_distC, mat)
stopCluster(cl)
gc()
cl <- makeCluster(getOption("cl.cores", n_cores))
clusterExport(cl, list("%>%"), envir = environment(magrittr::`%>%`))
cl <- makeCluster(getOption("cl.cores", n_cores))
clusterExport(cl, list("par_distC"), envir = environment(proteoQ:::par_distC))
out <- clusterApplyLB(cl, idxes, par_distC, mat)
stopCluster(cl)
cl <- makeCluster(getOption("cl.cores", n_cores))
clusterExport(cl, list("par_distC"), envir = environment(proteoQ:::par_distC))
out <- clusterApplyLB(cl, idxes, par_distC, mat)
stopCluster(cl)
gc()
out <- parDist(mat)
gc()
devtools::document("E:/R/proteoQ/R")
idxes <- chunksplit(seq_along(mat), 64, "list")
len <- length(mat)
i=63
z <- par_distC2(idxes[[i]], mat)
x <- par_dist1(idxes[[i]], mat[idxes[[i]][1]:len])
y <- par_dist(idxes[[i]], mat)
identical(x, y)
identical(x, z)
devtools::document("E:/R/proteoQ/R")
devtools::document("E:/R/proteoQ/R")
out2 = parDist(mat)
clusterExport(cl, list("par_distC2"), envir = environment(proteoQ:::par_distC2))
out <- clusterApplyLB(cl, idxes, par_distC2, mat)
stopCluster(cl)
devtools::document("E:/R/proteoQ/R")
z <- par_distC(idxes[[i]], mat)
identical(x, z)
rm(z)
z <- par_distC(idxes[[i]], mat)
identical(x, y)
identical(x, z)
devtools::document("E:/R/proteoQ/R")
devtools::install("E:/R/proteoQ/R")
devtools::install("E:/R/proteoQ/R")
devtools::install("E:/R/proteoQ/R")
devtools::document("E:/R/proteoQ/R")
out_path <- "~/proteoQ/test"
mat <- readRDS(file.path(out_path, "mat.rds"))
out <- parDist(mat)
out <- clusterMap(cl, par_distC, idxes, MoreArgs = list(mat))
gc()
devtools::document("E:/R/proteoQ/R")
devtools::install("E:/R/proteoQ/R")
devtools::document("E:/R/proteoQ/R")
out <- parDist(mat)
clusterExport(cl, list("par_distC"), envir = environment(proteoQ:::par_distC))
out <- clusterApplyLB(cl, idxes, par_distC, mat)
gc()
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
Rcpp::sourceCpp("E:/R/proteoQ/R/foo.cpp")
tempdir()
out <- parDist(mat)
clusterExport(cl, list("par_distC3"), envir = environment(proteoQ:::par_distC3))
out <- clusterApplyLB(cl, idxes, par_distC3, mat)
gc()
library(proteoQ)
library(proteoQ)
t1 <- Sys.time()
res <- matchMS(
fasta = c("~/proteoQ/dbs/fasta/uniprot/uniprot_hs_2020_05.fasta",
"~/proteoQ/dbs/fasta/crap/crap.fasta"),
acc_type = c("uniprot_acc", "other"),
max_miss = 2,
quant = "tmt10",
fdr_type = "psm",
out_path = "E:/Documents/proteoQ/test",
)
t2 <- Sys.time()
x <- readRDS("~/proteoQ/test/prot_dist.rds")
out = x
rm(x)
gc()
x = out
out[out == 0L] <- 1000000
out[out < 1000000] <- 0
out <- out %>% as.dist(diag = TRUE, upper = TRUE)
devtools::document("E:/R/proteoQ/R")
out = x
out[out == 0L] <- 1000000
out[out < 1000000] <- 0
out <- out %>% as.dist(diag = TRUE, upper = TRUE)
hc <- hclust(out, method = "single")
grps <- data.frame(prot_hit_num = cutree(hc, h = 1)) %>%
tibble::rownames_to_column("prot_acc") %>%
dplyr::group_by(prot_hit_num) %>%
dplyr::mutate(prot_family_member = row_number()) %>%
dplyr::ungroup()
out_path <- "~/proteoQ/test"
mat <- readRDS(file.path(out_path, "prto_pep_map.rds"))
mat <- readRDS(file.path(out_path, "prot_pep_map.rds"))
grps <- cut_protgrps(mat, out_path)
head(cns)
out <- file.path(out_path, "prot_dist.rds")
out <- readRDS(file.path(out_path, "prot_dist.rds"))
out[out == 0L] <- 1000000
out[out < 1000000] <- 0
out <- out %>% as.dist(diag = TRUE, upper = TRUE)
hc <- hclust(out, method = "single")
grps <- data.frame(prot_hit_num = cutree(hc, h = 1)) %>%
tibble::rownames_to_column("prot_acc") %>%
dplyr::group_by(prot_hit_num) %>%
dplyr::mutate(prot_family_member = row_number()) %>%
dplyr::ungroup() %T>%
saveRDS(file.path(out_path, "prot_grps.rds"))
head(grps$prot_acc)
head(cns)
grps <- data.frame(prot_hit_num = cutree(hc, h = 1)) %>%
tibble::rownames_to_column("prot_acc")
View(grps)
out <- readRDS(file.path(out_path, "prot_dist.rds"))
out[1:3, 1:4]
dim(out)
mat <- readRDS(file.path(out_path, "mat.rds"))
idxes <- chunksplit(seq_along(mat), 64, "list")
len <- length(mat)
i=63
y <- par_dist(idxes[[i]], mat)
out[[i]] <- purrr::map_dbl(mat[col:len_m], ~ sum(.x & y))
x=out[[i]]
head(x)
i=1
x=out[[i]]
head(x)
mat[1:3, 1:3]
head(y)
head(mat[2])
head(mat[[2]])
col
len_m
head(mat[[col]])
head(y)
out[[i]] <- purrr::map_dbl(mat[col:len_m], ~ sum(.x & y))
i=2
col <- cols[i]
head(col)
y <- mat[[col]]
head(y)
out[[i]] <- purrr::map_dbl(mat[col:len_m], ~ sum(.x & y))
x=out[[i]]
head(x)
out[[i]] <- purrr::map_int(mat[col:len_m], ~ sum(.x & y))
x=out[[i]]
head(x)
out[[i]] <- purrr::map_int(mat[col:len_m], ~ sum(.x & y))
x=out[[i]]
head(x)
.x = col
.x
x <- mat[[.x]]
head(names(y))
x = mat[col]
head(x)
x
names(x)
out[[i]] <- purrr::imap_int(col:len_m, ~ {
x <- mat[[.x]]
names(x) <- .y
sum(x & y)
})
a = out[[i]]
out[[i]] <- purrr::map_int(mat[col:len_m], ~ sum(.x & y))
b = out[[i]]
identical(a, b)
names(a)
names(b)
out[[i]] <- purrr::map_int(mat[col:len_m], ~ sum(.x & y))
a = out[[i]]
names(a)
x = mat[col:13102]
x
names(x)
x = purrr::map_int(mat[col:13102], ~ sum(.x & y))
names(x)
out[[i]] <- purrr::imap_int(col:len_m, ~ {
x <- mat[[.x]]
s <- sum(x & y)
names(s) <- .y
})
a = out[[i]]
a
names(a)
out[[i]] <- purrr::imap_int(col:len_m, ~ {
x <- mat[[.x]]
s <- sum(x & y)
names(s) <- .y
s
})
a = out[[i]]
a
names(a)
out[[i]] <- purrr::imap_int(col:len_m, ~ {
x <- mat[[.x]]
sum(x & y)
})
out[[i]]
out[[i]] <- purrr::map_int(col:len_m, ~ {
x <- mat[[.x]]
sum(x & y)
}) %>%
`names<-`(names(mat[col:len_m]))
a = out[[i]]
names(a)
devtools::document("E:/R/proteoQ/R")
x <- par_dist1(idxes[[i]], mat[idxes[[i]][1]:len])
y <- par_dist(idxes[[i]], mat)
identical(x, y)
head(names(x))
head(names(y))
head(y)
y[[1]]
y1=y[[1]]
x1 = x[[1]]
x1
y1
devtools::document("E:/R/proteoQ/R")
x <- par_dist1(idxes[[i]], mat[idxes[[i]][1]:len])
names(mat)
names(out) <- names(mat)
x = out[[1]]
names(x) <- names(mat)
x
out <- out %>%
map(~ {
names(.x) <- nms
.x
})
nms <- names(mat)
out <- out %>%
map(~ {
names(.x) <- nms
.x
})
.x = out[[1]]
x = out[[1]]
devtools::document("E:/R/proteoQ/R")
devtools::document("E:/R/proteoQ/R")
x <- par_dist1(idxes[[i]], mat[idxes[[i]][1]:len])
outj
names(outj) <- nms
devtools::document("E:/R/proteoQ/R")
x <- par_dist1(idxes[[i]], mat[idxes[[i]][1]:len])
devtools::document("E:/R/proteoQ/R")
x <- par_dist1(idxes[[i]], mat[idxes[[i]][1]:len])
identical(x, y)
z <- par_distC(idxes[[i]], mat)
z1 = z[[1]]
names(z1)
z1
z <- par_dist2(idxes[[i]], mat)
nms = names(mat[[1]])
nms
mat[[1]]
names(mat[1])
nms <- names(mat)
out <- par_distC(cols, mat)
devtools::document("E:/R/proteoQ/R")
z <- par_dist2(idxes[[i]], mat)
out <- par_distC(cols, mat)
x = out[[1]]
x
nms <- names(mat)[cols[1]:length(mat)]
x <- out %>%
map(~ {
names(.x) <- nms
nms <- nms[-1]
.x
}, nms)
x = out[[1]]
.x = out[[1]]
names(.x) <- nms
x <- out %>%
map(~ {
names(.x) <- nms
nms <<- nms[-1]
.x
})
x[[1]]
devtools::document("E:/R/proteoQ/R")
z <- par_dist2(idxes[[i]], mat)
identical(x, y)
identical(x, z)
devtools::document("E:/R/proteoQ/R")
devtools::document("E:/R/proteoQ/R")
out_path <- "~/proteoQ/test"
mat <- readRDS(file.path(out_path, "mat.rds"))
out <- parDist(mat)
devtools::document("E:/R/proteoQ/R")
devtools::document("E:/R/proteoQ/R")
out_path <- "~/proteoQ/test"
mat <- readRDS(file.path(out_path, "mat.rds"))
out <- parDist(mat)
clusterEvalQ(cl, require(Rcpp))
clusterExport(cl, list("par_distC"), envir = environment(proteoQ:::par_distC))
out <- clusterApplyLB(cl, idxes, par_distC, mat)
gc()
setwd("E:/R/proteoQ")
usethis::use_rcpp()
devtools::load_all()
getwd()
