dplyr::select(names(df))
df_dups <- purrr::map(peps, ~ {
df_sub <- df %>%
dplyr::filter(!!rlang::sym(group_psm_by) == .x) %>%
dplyr::arrange(-prot_n_pep)
cols_prot1 <- suppressWarnings(
df_sub %>%
dplyr::select(grep("^prot_", names(.))) %>%
dplyr::select(-one_of(c("prot_n_psm", "prot_n_pep", "prot_cover",
"prot_matches_sig", "prot_sequences_sig"))) %>%
dplyr::slice(1)
)
cols_prot2 <- suppressWarnings(
df_sub %>% dplyr::select(one_of(c("gene", "acc_type", "species", "entrez",
"kin_attr", "kin_class", "kin_order"))) %>%
dplyr::slice(1))
df_sub1 <- df_sub %>% dplyr::slice(1)
df_sub2 <- df_sub %>% dplyr::slice(-1)
df_sub2[, names(df_sub2) %in% names(cols_prot1)] <- cols_prot1
df_sub2[, names(df_sub2) %in% names(cols_prot2)] <- cols_prot2
dplyr::bind_rows(df_sub1, df_sub2)
}) %>%
dplyr::bind_rows() %>%
dplyr::select(names(df))
View(df_dups)
tempdata <- dplyr::bind_rows(
df %>% dplyr::filter(! (!!rlang::sym(group_psm_by) %in% df_dups[[group_psm_by]])),
df_dups
)
.x
df_sub <- tempdata %>%
dplyr::filter(!!rlang::sym(group_psm_by) == .x) %>%
dplyr::arrange(-prot_n_pep)
View(df_sub)
devtools::document("C:\\Results\\R\\proteoQ")
mergePep()
nrow(dup_peps)
df_dups <- purrr::map(as.character(unique(dup_peps[[group_psm_by]])), ~ {
df_sub <- df %>%
dplyr::filter(!!rlang::sym(group_psm_by) == .x) %>%
dplyr::arrange(-prot_n_pep)
mergePep()
tempdate <- df %>%
dplyr::filter(!!rlang::sym(group_psm_by) %in% dup_peps[[group_psm_by]])
tempdate <- df %>%
dplyr::filter(!!rlang::sym(group_psm_by) %in% dup_peps[[group_psm_by]]) %>%
dplyr::select(!!rlang::sym(group_psm_by), !!rlang::sym(group_pep_by)) %>%
dplyr::group_by(!!rlang::sym(group_psm_by)) %>%
dplyr::summarise(N = n_distinct(!!rlang::sym(group_pep_by))) %>%
dplyr::filter(N > 1)
dup_peps <- df %>%
dplyr::filter(!!rlang::sym(group_psm_by) %in% dup_peps[[group_psm_by]]) %>%
dplyr::select(!!rlang::sym(group_psm_by), !!rlang::sym(group_pep_by)) %>%
dplyr::group_by(!!rlang::sym(group_psm_by)) %>%
dplyr::summarise(N = n_distinct(!!rlang::sym(group_pep_by))) %>%
dplyr::filter(N > 1)
devtools::document("C:\\Results\\R\\proteoQ")
mergePep()
standPep(
method_align = MGKernel,
range_log2r = c(5, 95),
range_int = c(5, 95),
n_comp = 3,
seed = 749662,
maxit = 200,
epsilon = 1e-05,
slice_peps_by = exprs(species == "human"),
)
pepMDS(
show_ids = FALSE,
width = 10,
height = 3.75,
)
devtools::document("C:\\Results\\R\\proteoQ")
mergePep()
devtools::document("C:\\Results\\R\\proteoQ")
mergePep()
tempdata <- assign_duppeps(df, group_psm_by, group_pep_by)
devtools::document("C:\\Results\\R\\proteoQ")
load_expts("~\\proteoQ\\examples_maxquant")
standPep(
method_align = MGKernel,
range_log2r = c(5, 95),
range_int = c(5, 95),
n_comp = 3,
seed = 749662,
maxit = 200,
epsilon = 1e-05,
slice_peps_by = exprs(species == "human"),
)
mergePep()
View(dup_peps)
tempdata <- df %>% filter(pep_seq_mod == "-._mENAHTK.T")
View(tempdata)
tempdata
.x = as.character(unique(dup_peps[[group_psm_by]]))[1]
df_sub <- df %>%
dplyr::filter(!!rlang::sym(group_psm_by) == .x) %>%
dplyr::arrange(-prot_n_pep)
View(tempdata)
df_dups <- purrr::map(as.character(unique(dup_peps[[group_psm_by]])), ~ {
df_sub <- df %>%
dplyr::filter(!!rlang::sym(group_psm_by) == .x) %>%
dplyr::arrange(-prot_n_pep)
devtools::document("C:\\Results\\R\\proteoQ")
mergePep()
tempdata <- df %>% filter(pep_seq_mod == "-._mENAHTK.T")
View(tempdata)
tempdata
load_expts("~\\proteoQ\\examples_sm")
mergePep()
devtools::document("C:\\Results\\R\\proteoQ")
load_expts("~\\proteoQ\\examples_sm")
mergePep()
devtools::document("C:\\Results\\R\\proteoQ")
mergePep()
tempdata <- df %>%
dplyr::select(!!rlang::sym(group_psm_by), !!rlang::sym(group_pep_by)) %>%
dplyr::group_by(!!rlang::sym(group_psm_by))
View(tempdata)
group_pep_by
dup_peps <- df %>%
dplyr::select(!!rlang::sym(group_psm_by), !!rlang::sym(group_pep_by)) %>%
dplyr::group_by(!!rlang::sym(group_psm_by)) %>%
dplyr::summarise(N = n_distinct(!!rlang::sym(group_pep_by))) %>%
dplyr::filter(N > 1)
group_pep_by
group_psm_by
dup_peps <- df %>%
dplyr::select(!!rlang::sym(group_psm_by), !!rlang::sym(group_pep_by)) %>%
dplyr::group_by(!!rlang::sym(group_psm_by))
View(dup_peps)
names(df)
mergePep()
devtools::document("C:\\Results\\R\\proteoQ")
mergePep()
standPep(
method_align = MGKernel,
range_log2r = c(5, 95),
range_int = c(5, 95),
n_comp = 3,
seed = 749662,
maxit = 200,
epsilon = 1e-05,
slice_peps_by = exprs(species == "human"),
)
pepMDS(
show_ids = FALSE,
width = 10,
height = 3.75,
)
load_expts("~\\proteoQ\\examples_maxquant")
mergePep()
standPep(
method_align = MGKernel,
range_log2r = c(5, 95),
range_int = c(5, 95),
n_comp = 3,
seed = 749662,
maxit = 200,
epsilon = 1e-05,
slice_peps_by = exprs(species == "human"),
)
pepMDS(
show_ids = FALSE,
width = 10,
height = 3.75,
)
.5/1.1
.45*6
.73*8
8/11
9/11
4/11
7/11
9/11
5/11
dat_dir
devtools::document("C:\\Results\\R\\proteoQ")
load_expts("~\\proteoQ\\examples_sm")
PSM2Pep()
devtools::document("C:\\Results\\R\\proteoQ")
PSM2Pep()
Sys.time()
Sys.time()
library(blogdown)
setwd("~\\proteoQ\\web")
blogdown:::insert_image_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
load_expts("C:\\Results\\Abu_Amer\\002_20190613_uniprot_acc_test")
normPSM(
group_psm_by = pep_seq_mod,
group_pep_by = gene,
# group_pep_by = prot_acc,
fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_mm_2014_07.fasta"),
# fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_2016_10.fasta"),
entrez = "~\\proteoQ\\dbs\\entrez\\uniprot_entrez_mm.rds",
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = TRUE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
use_lowercase_aa = TRUE,
# in-call filtration
filter_pep_expect = expr(pep_expect <= .1),
)
purgePSM()
PSM2Pep()
mergePep(
filter_peps = exprs(pep_len <= 50),
)
standPep(
method_align = MGKernel,
range_log2r = c(5, 95),
range_int = c(5, 95),
n_comp = 3,
seed = 749662,
maxit = 200,
epsilon = 1e-05,
slice_peps_by = exprs(species == "mouse"),
)
purgePep()
# peptides to proteins
Pep2Prn(use_unique_pep = TRUE)
# protein data standardization by human subset
standPrn(
method_align = MGKernel,
range_log2r = c(5, 95),
range_int = c(5, 95),
n_comp = 2,
seed = 749662,
maxit = 200,
epsilon = 1e-05,
slice_prots_by = exprs(species == "mouse"),
)
pepImp(m = 2, maxit = 2)
prnImp(m = 5, maxit = 5)
pepSig(
impute_na = FALSE,
fml_1 = ~ Term["KI.hetero-WT", "KI.homo-WT"],
# filter_prns = exprs(prot_n_pep >= 2),
)
prnSig(
impute_na = FALSE,
# fml_1 = ~ Term["KI.hetero-WT", "KI.homo-WT"],
filter_prns = exprs(prot_n_pep >= 2),
)
pepVol()
prnVol()
pepSig(
impute_na = TRUE,
fml_1 = ~ Term["KI.hetero-WT", "KI.homo-WT"],
# filter_prns = exprs(prot_n_pep >= 2),
)
prnSig(
impute_na = TRUE,
# fml_1 = ~ Term["KI.hetero-WT", "KI.homo-WT"],
filter_prns = exprs(prot_n_pep >= 2),
)
pepVol(impute_na = TRUE, )
prnVol(impute_na = TRUE, )
pepHist(
scale_log2r = TRUE, # scaling
show_curves = TRUE,
show_vline = TRUE,
xmin = -2,
xmax = 2,
ncol = 5
)
pepHist(
scale_log2r = FALSE, # no scaling
show_curves = TRUE,
show_vline = TRUE,
xmin = -2,
xmax = 2,
ncol = 5
)
prnHist(
scale_log2r = FALSE,
xmin = -2,
xmax = 2,
ncol = 5
)
prnHist(
scale_log2r = TRUE,
xmin = -2,
xmax = 2,
ncol = 5
)
scale_log2r = FALSE
pepMDS(
show_ids = TRUE
)
prnMDS(
show_ids = TRUE
)
pepPCA(
show_ids = TRUE
)
prnPCA(
show_ids = TRUE
)
# ---
pepEucDist(
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
# parameters from `pheatmap`
display_numbers = TRUE,
number_color = "grey30",
number_format = "%.1f",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
fontsize = 16,
fontsize_row = 20,
fontsize_col = 20,
fontsize_number = 8,
cluster_rows = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
border_color = "grey60",
cellwidth = 24,
cellheight = 24,
width = 14,
height = 12
)
prnEucDist(
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
# parameters from `pheatmap`
display_numbers = TRUE,
number_color = "grey30",
number_format = "%.1f",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
fontsize = 16,
fontsize_row = 20,
fontsize_col = 20,
fontsize_number = 8,
cluster_rows = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
border_color = "grey60",
cellwidth = 24,
cellheight = 24,
width = 14,
height = 12
)
pepCorr_logFC()
prnCorr_logFC()
pepCorr_logInt()
prnCorr_logInt()
prnHM(
xmin = -1,
xmax = 1,
xmargin = 0.1,
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
cluster_rows = TRUE,
cutree_rows = 10,
show_rownames = FALSE,
show_colnames = TRUE,
fontsize_row = 3,
cellwidth = 14,
# width = 18,
# height = 12,
)
pepHM(
xmin = -1,
xmax = 1,
xmargin = 0.1,
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
cluster_rows = TRUE,
cutree_rows = 10,
show_rownames = FALSE,
show_colnames = TRUE,
fontsize_row = 3,
cellwidth = 14,
width = 18,
height = 12
)
anal_prnTrend(
col_order = Order,
n_clust = c(4:5),
)
plot_prnTrend()
plot_prnTrend(filter2_ = exprs(cluster == 4), filename = cl4.png)
library(NMF)
# NMF analysis
anal_pepNMF(
col_group = Group, # optional a priori knowledge of sample groups
impute_na = FALSE,
r = 3,
# nrun = 200,
nrun  = 20,
)
# Consensus heat map
plot_pepNMFCon(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# Coefficient heat map
plot_pepNMFCoef(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# NMF analysis
anal_prnNMF(
col_group = Group, # optional a priori knowledge of sample groups
impute_na = FALSE,
r = c(3:4),
nrun = 20
)
# Consensus heat map
plot_prnNMFCon(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10,
)
# Coefficient heat map
plot_prnNMFCoef(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# Metagene heat map(s)
plot_metaNMF(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
fontsize = 8,
fontsize_col = 5
)
prnGSPA(
impute_na = FALSE,
pval_cutoff = 5E-2,
gset_nm = c("go_sets", "kegg_sets"),
)
gspaMap(
show_labels = TRUE,
gspval_cutoff = 5E-2,
show_sig = pVal,
yco = 0.05,
)
### GSPA distance heat map and network
# human subset
prnGSPAHM(
# filter_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_connectivity_at_large_dist.png,
)
prnGSPAHM(
filter2_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_connectivity_at_large_dist_by_sp.png,
)
prnGSPAHM(
filter2_by = exprs(distance <= .33),
# filter_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_human_redundancy.png,
)
### GSVA
prnGSVA(
impute_na = FALSE,
min.sz = 10,
verbose = FALSE,
parallel.sz = 0,
mx.diff = TRUE,
gset_nms = "go_sets",
)
### GSEA
prnGSEA(
var_cutoff = 0,
pval_cutoff = 1,
logFC_cutoff = log2(1),
filter_by_sp = exprs(species == "mouse"),
)
setwd("C:\\results\\r\\proteoq")
library(devtools)
check()
document()
?calcPeptide
dir()
document()
?assign_duppeps
document()
?assign_duppeps
?calcPepide
check()
install()
