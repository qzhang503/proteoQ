fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_hs_2014_07.fasta"),
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = FALSE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
filter_psms = exprs(pep_expect <= .1),
)
df_split <- df %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}|^R[0-9]{3}", names(.)), as.numeric) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x == -1, NA, .x)) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x <= rptr_intco, NA, .x)) %>%
dplyr::filter(rowSums(!is.na(.[grep("^R[0-9]{3}", names(.))])) > 0) %>%
dplyr::filter(rowSums(!is.na(.[grep("^I[0-9]{3}", names(.))])) > 0) %>%
dplyr::mutate(RAW_File = gsub('^(.*)\\\\(.*)\\.raw.*', '\\2', .$pep_scan_title)) %>%
dplyr::mutate(RAW_File = gsub("^.*File:~(.*)\\.d~?.*", '\\1', .$RAW_File)) %>% # Bruker
dplyr::mutate(prot_acc = gsub("\\d::", "", .$prot_acc)) %>%
dplyr::arrange(RAW_File, pep_seq, prot_acc) %>%
dplyr::filter(!duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
load_expts()
normPSM(
group_psm_by = pep_seq_mod,
group_pep_by = gene,
fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_hs_2014_07.fasta"),
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = FALSE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
filter_psms = exprs(pep_expect <= .1),
)
load_expts()
normPSM(
group_psm_by = pep_seq_mod,
group_pep_by = gene,
fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_hs_2014_07.fasta"),
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = FALSE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
filter_psms = exprs(pep_expect <= .1),
)
df_split <- df %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}|^R[0-9]{3}", names(.)), as.numeric) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x == -1, NA, .x)) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x <= rptr_intco, NA, .x)) %>%
dplyr::filter(rowSums(!is.na(.[grep("^R[0-9]{3}", names(.))])) > 0) %>%
dplyr::filter(rowSums(!is.na(.[grep("^I[0-9]{3}", names(.))])) > 0) %>%
dplyr::mutate(RAW_File = gsub('^(.*)\\\\(.*)\\.raw.*', '\\2', .$pep_scan_title)) %>%
dplyr::mutate(RAW_File = gsub("^.*File:~(.*)\\.d~?.*", '\\1', .$RAW_File)) %>% # Bruker
dplyr::mutate(prot_acc = gsub("\\d::", "", .$prot_acc)) %>%
dplyr::arrange(RAW_File, pep_seq, prot_acc) %>%
dplyr::filter(!duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
load_expts()
normPSM(
group_psm_by = pep_seq_mod,
group_pep_by = gene,
fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_hs_2014_07.fasta"),
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = FALSE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
filter_psms = exprs(pep_expect <= .1),
)
df_split <- df %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}|^R[0-9]{3}", names(.)), as.numeric) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x == -1, NA, .x)) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x <= rptr_intco, NA, .x)) %>%
dplyr::filter(rowSums(!is.na(.[grep("^R[0-9]{3}", names(.))])) > 0) %>%
dplyr::filter(rowSums(!is.na(.[grep("^I[0-9]{3}", names(.))])) > 0) %>%
dplyr::mutate(RAW_File = gsub('^(.*)\\\\(.*)\\.raw.*', '\\2', .$pep_scan_title)) %>%
dplyr::mutate(RAW_File = gsub("^.*File:~(.*)\\.d~?.*", '\\1', .$RAW_File)) %>% # Bruker
dplyr::mutate(prot_acc = gsub("\\d::", "", .$prot_acc)) %>%
dplyr::arrange(RAW_File, pep_seq, prot_acc) %>%
dplyr::filter(!duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
df_split <- df %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}|^R[0-9]{3}", names(.)), as.numeric) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x == -1, NA, .x)) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x <= rptr_intco, NA, .x)) %>%
dplyr::filter(rowSums(!is.na(.[grep("^R[0-9]{3}", names(.))])) > 0) %>%
dplyr::filter(rowSums(!is.na(.[grep("^I[0-9]{3}", names(.))])) > 0) %>%
dplyr::mutate(RAW_File = gsub('^(.*)\\\\(.*)\\.raw.*', '\\2', .$pep_scan_title)) %>%
dplyr::mutate(RAW_File = gsub("^.*File:~(.*)\\.d~?.*", '\\1', .$RAW_File)) %>% # Bruker
dplyr::mutate(prot_acc = gsub("\\d::", "", .$prot_acc)) %>%
dplyr::arrange(RAW_File, pep_seq, prot_acc)
tempdata <- df_splt %>% dplyr::filter(duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
tempdata <- df_split %>% dplyr::filter(duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
View(tempdata)
tempdata <- df_split %>% filter(pep_query == "162650")
tempdata <- df_split %>% filter(pep_seq == "-.MEDLDQSPLVSSSDSPPRPQPAFK.Y")
View(tempdata)
tempdata <- bind_cols(
df_split %>% dplyr::select(pep_query),
df_split %>% .[grep("^pep_seq$|I[0-9]{3}", names(.))]
)
tempdata %>% filter(pep_seq == "-.MEDLDQSPLVSSSDSPPRPQPAFK.Y")
temp2 <- tempdata %>% dplyr::filter(!duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
tempdata <- bind_cols(
df_split %>% dplyr::select(pep_query),
df_split %>% .[grep("^^pep_seq$|I[0-9]{3}", names(.))]
)
tempdata <- df_split %>% .[grep("^pep_query$|^pep_seq$|I[0-9]{3}", names(.))]
temp2 <- tempdata %>% dplyr::filter(!duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
temp2 <- tempdata %>% dplyr::filter(duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
View(temp2)
temp2 <- tempdata %>% filter(pep_seq == "-.MEDLDQSPLVSSSDSPPRPQPAFK.Y")
temp2
View(temp2)
devtools::document("C:\\Results\\R\\proteoq")
load_expts()
normPSM(
group_psm_by = pep_seq_mod,
group_pep_by = gene,
fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_hs_2014_07.fasta"),
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = FALSE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
filter_psms = exprs(pep_expect <= .1),
)
df_split <- df %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}|^R[0-9]{3}", names(.)), as.numeric) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x == -1, NA, .x)) %>%
dplyr::mutate_at(.vars = grep("^I[0-9]{3}", names(.)), ~ ifelse(.x <= rptr_intco, NA, .x)) %>%
dplyr::filter(rowSums(!is.na(.[grep("^R[0-9]{3}", names(.))])) > 0) %>%
dplyr::filter(rowSums(!is.na(.[grep("^I[0-9]{3}", names(.))])) > 0) %>%
dplyr::mutate(RAW_File = gsub('^(.*)\\\\(.*)\\.raw.*', '\\2', .$pep_scan_title)) %>%
dplyr::mutate(RAW_File = gsub("^.*File:~(.*)\\.d~?.*", '\\1', .$RAW_File)) %>% # Bruker
dplyr::mutate(prot_acc = gsub("\\d::", "", .$prot_acc)) %>%
dplyr::arrange(RAW_File, pep_seq, prot_acc) %>%
dplyr::filter(!duplicated(.[grep("^pep_seq$|I[0-9]{3}", names(.))]))
devtools::document("C:\\Results\\R\\proteoq")
dat_dir <- "~\\proteoQ\\examples_maxquant_20200312"
load_expts()
normPSM(
group_psm_by = pep_seq_mod,
group_pep_by = gene,
fasta = c("~\\proteoQ\\dbs\\fasta\\refseq\\refseq_hs_2013_07.fasta",
"~\\proteoQ\\dbs\\fasta\\refseq\\refseq_mm_2013_07.fasta"),
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = FALSE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
)
head(df)
tempdata <- df %>%
tidyr::unite(uniq_id, c("Scan number", "Sequence"), sep = ".", remove = FALSE) %>%
dplyr::mutate(.n = row_number()) %>%
# dplyr::arrange(-prot_matches, -pep_isbold, -prot_mass) %>%
dplyr::filter(!duplicated(uniq_id)) %>%
dplyr::arrange(.n) %>%
dplyr::select(-uniq_id, -.n)
tempdata2 <- df %>%
tidyr::unite(uniq_id, c("Scan number", "Sequence"), sep = ".", remove = FALSE) %>%
dplyr::mutate(.n = row_number()) %>%
# dplyr::arrange(-prot_matches, -pep_isbold, -prot_mass) %>%
dplyr::filter(duplicated(uniq_id)) %>%
dplyr::arrange(.n) %>%
dplyr::select(-uniq_id, -.n)
head(tempdata2)
names(df)
tempdata <- df %>%
tidyr::unite(uniq_id, c("Raw file", "Scan number", "Sequence"), sep = ".", remove = FALSE) %>%
dplyr::mutate(.n = row_number()) %>%
# dplyr::arrange(-prot_matches, -pep_isbold, -prot_mass) %>%
dplyr::filter(!duplicated(uniq_id)) %>%
dplyr::arrange(.n) %>%
dplyr::select(-uniq_id, -.n)
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
dat_dir <- c("C:\\Results\\Abu_Amer\\002_20190613_uniprot_acc_test") # the WORKING directory
load_expts()
normPSM(
group_psm_by = pep_seq_mod,
group_pep_by = gene,
# group_pep_by = prot_acc,
fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_mm_2014_07.fasta"),
# fasta = c("~\\proteoQ\\dbs\\fasta\\uniprot\\uniprot_2016_10.fasta"),
entrez = "~\\proteoQ\\dbs\\entrez\\uniprot_entrez_mm.rds",
rptr_intco = 1000,
rm_craps = TRUE,
rm_krts = TRUE,
rm_outliers = FALSE,
annot_kinases = TRUE,
plot_rptr_int = TRUE,
plot_log2FC_cv = TRUE,
use_lowercase_aa = TRUE,
# in-call filtration
filter_pep_expect = expr(pep_expect <= .1),
)
purgePSM()
PSM2Pep()
mergePep(
filter_peps = exprs(pep_len <= 50),
)
standPep(
method_align = MGKernel,
range_log2r = c(5, 95),
range_int = c(5, 95),
n_comp = 3,
seed = 749662,
maxit = 200,
epsilon = 1e-05,
slice_peps_by = exprs(species == "mouse"),
)
purgePep()
# peptides to proteins
Pep2Prn(use_unique_pep = TRUE)
# protein data standardization by human subset
standPrn(
method_align = MGKernel,
range_log2r = c(5, 95),
range_int = c(5, 95),
n_comp = 2,
seed = 749662,
maxit = 200,
epsilon = 1e-05,
slice_prots_by = exprs(species == "mouse"),
)
pepImp(m = 2, maxit = 2)
prnImp(m = 5, maxit = 5)
pepSig(
impute_na = FALSE,
fml_1 = ~ Term["KI.hetero-WT", "KI.homo-WT"],
# filter_prns = exprs(prot_n_pep >= 2),
)
prnSig(
impute_na = FALSE,
# fml_1 = ~ Term["KI.hetero-WT", "KI.homo-WT"],
filter_prns = exprs(prot_n_pep >= 2),
)
pepVol()
prnVol()
pepSig(
impute_na = TRUE,
fml_1 = ~ Term["KI.hetero-WT", "KI.homo-WT"],
# filter_prns = exprs(prot_n_pep >= 2),
)
prnSig(
impute_na = TRUE,
# fml_1 = ~ Term["KI.hetero-WT", "KI.homo-WT"],
filter_prns = exprs(prot_n_pep >= 2),
)
pepVol(impute_na = TRUE, )
prnVol(impute_na = TRUE, )
pepHist(
scale_log2r = TRUE, # scaling
show_curves = TRUE,
show_vline = TRUE,
xmin = -2,
xmax = 2,
ncol = 5
)
pepHist(
scale_log2r = FALSE, # no scaling
show_curves = TRUE,
show_vline = TRUE,
xmin = -2,
xmax = 2,
ncol = 5
)
prnHist(
scale_log2r = FALSE,
xmin = -2,
xmax = 2,
ncol = 5
)
prnHist(
scale_log2r = TRUE,
xmin = -2,
xmax = 2,
ncol = 5
)
scale_log2r = FALSE
pepMDS(
show_ids = TRUE
)
prnMDS(
show_ids = TRUE
)
pepPCA(
show_ids = TRUE
)
prnPCA(
show_ids = TRUE
)
# ---
pepEucDist(
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
# parameters from `pheatmap`
display_numbers = TRUE,
number_color = "grey30",
number_format = "%.1f",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
fontsize = 16,
fontsize_row = 20,
fontsize_col = 20,
fontsize_number = 8,
cluster_rows = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
border_color = "grey60",
cellwidth = 24,
cellheight = 24,
width = 14,
height = 12
)
prnEucDist(
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
# parameters from `pheatmap`
display_numbers = TRUE,
number_color = "grey30",
number_format = "%.1f",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
fontsize = 16,
fontsize_row = 20,
fontsize_col = 20,
fontsize_number = 8,
cluster_rows = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
border_color = "grey60",
cellwidth = 24,
cellheight = 24,
width = 14,
height = 12
)
pepCorr_logFC()
prnCorr_logFC()
pepCorr_logInt()
prnCorr_logInt()
prnHM(
xmin = -1,
xmax = 1,
xmargin = 0.1,
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
cluster_rows = TRUE,
cutree_rows = 10,
show_rownames = FALSE,
show_colnames = TRUE,
fontsize_row = 3,
cellwidth = 14,
# width = 18,
# height = 12,
)
pepHM(
xmin = -1,
xmax = 1,
xmargin = 0.1,
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
cluster_rows = TRUE,
cutree_rows = 10,
show_rownames = FALSE,
show_colnames = TRUE,
fontsize_row = 3,
cellwidth = 14,
width = 18,
height = 12
)
anal_prnTrend(
col_order = Order,
n_clust = c(4:5),
)
plot_prnTrend()
plot_prnTrend(filter2_ = exprs(cluster == 4), filename = cl4.png)
library(NMF)
# NMF analysis
anal_pepNMF(
col_group = Group, # optional a priori knowledge of sample groups
impute_na = FALSE,
r = 3,
# nrun = 200,
nrun  = 20,
)
# Consensus heat map
plot_pepNMFCon(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# Coefficient heat map
plot_pepNMFCoef(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# NMF analysis
anal_prnNMF(
col_group = Group, # optional a priori knowledge of sample groups
impute_na = FALSE,
r = c(3:4),
nrun = 20
)
# Consensus heat map
plot_prnNMFCon(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10,
)
# Coefficient heat map
plot_prnNMFCoef(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# Metagene heat map(s)
plot_metaNMF(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
fontsize = 8,
fontsize_col = 5
)
prnGSPA(
impute_na = FALSE,
pval_cutoff = 5E-2,
gset_nm = c("go_sets", "kegg_sets"),
)
gspaMap(
show_labels = TRUE,
gspval_cutoff = 5E-2,
show_sig = pVal,
yco = 0.05,
)
### GSPA distance heat map and network
# human subset
prnGSPAHM(
# filter_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_connectivity_at_large_dist.png,
)
prnGSPAHM(
filter2_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_connectivity_at_large_dist_by_sp.png,
)
prnGSPAHM(
filter2_by = exprs(distance <= .33),
# filter_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_human_redundancy.png,
)
### GSVA
prnGSVA(
impute_na = FALSE,
min.sz = 10,
verbose = FALSE,
parallel.sz = 0,
mx.diff = TRUE,
gset_nms = "go_sets",
)
### GSEA
prnGSEA(
var_cutoff = 0,
pval_cutoff = 1,
logFC_cutoff = log2(1),
filter_by_sp = exprs(species == "mouse"),
)
### STRING database
anal_prnString(
db_nms = c(prepString(mouse)),
score_cutoff = .9,
filter_prots_by = exprs(prot_n_pep >= 2),
filename = download_and_analysis_in_one_pot.tsv,
)
prepGO(human)
prepGO(mouse)
prepMSig()
head(readRDS(file.path("~\\proteoQ\\dbs\\msig\\msig_hs.rds")))
library(devtools)
setwd("C:\\Results\\R\\proteoQ")
document()
warnings()
check()
warnings()
check()
install()
