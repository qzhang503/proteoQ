filter_prots_by_species = exprs(species == "human"),
filename = diff_thresholds.txt,
)
gspaMap(
df2 = "diff_thresholds_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = FALSE,
show_sig = pVal,
)
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
gspaMap(
df2 = "diff_thresholds_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = FALSE,
show_sig = pVal,
)
fml_nm
df2
dim())
dim(df)
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
gspaMap(
df2 = "diff_thresholds_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = FALSE,
show_sig = pVal,
)
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
gspaMap(
df2 = "diff_thresholds_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = FALSE,
show_sig = pVal,
)
ggplot() +
geom_point(data = dfw_sub, mapping = aes(x = log2Ratio, y = -log10(pVal)), size = 3, colour = "gray", shape = 20, alpha = .5) +
geom_point(data = dfw_greater, mapping = aes(x = log2Ratio, y = -log10(pVal)), size = 3, color = myPalette[2], shape = 20, alpha = .8) +
geom_point(data = dfw_less, mapping = aes(x = log2Ratio, y = -log10(pVal)), size = 3, color = myPalette[1], shape = 20, alpha = .8) +
geom_hline(yintercept = -log10(yco), linetype = "longdash", size = .5) +
geom_vline(xintercept = -log2(xco), linetype = "longdash", size = .5) +
geom_vline(xintercept = log2(xco), linetype = "longdash", size =.5) +
geom_hline(yintercept = -log10(pval_cutoff), linetype = "longdash", size = .5, color = "#fc9272") +
geom_vline(xintercept = -logFC_cutoff, linetype = "longdash", size = .5, color = "#fc9272") +
geom_vline(xintercept = logFC_cutoff, linetype = "longdash", size =.5, color = "#fc9272") +
labs(title = names(gsets_sub), x = x_label, y = y_label) +
scale_x_continuous(limits = c(-xmax, xmax)) +
scale_y_continuous(limits = c(0, ymax)) +
theme
pval_cutoff
pval_cutoff <- NULL
ggplot() +
geom_point(data = dfw_sub, mapping = aes(x = log2Ratio, y = -log10(pVal)), size = 3, colour = "gray", shape = 20, alpha = .5) +
geom_point(data = dfw_greater, mapping = aes(x = log2Ratio, y = -log10(pVal)), size = 3, color = myPalette[2], shape = 20, alpha = .8) +
geom_point(data = dfw_less, mapping = aes(x = log2Ratio, y = -log10(pVal)), size = 3, color = myPalette[1], shape = 20, alpha = .8) +
geom_hline(yintercept = -log10(yco), linetype = "longdash", size = .5) +
geom_vline(xintercept = -log2(xco), linetype = "longdash", size = .5) +
geom_vline(xintercept = log2(xco), linetype = "longdash", size =.5) +
geom_hline(yintercept = -log10(pval_cutoff), linetype = "longdash", size = .5, color = "#fc9272") +
geom_vline(xintercept = -logFC_cutoff, linetype = "longdash", size = .5, color = "#fc9272") +
geom_vline(xintercept = logFC_cutoff, linetype = "longdash", size =.5, color = "#fc9272") +
labs(title = names(gsets_sub), x = x_label, y = y_label) +
scale_x_continuous(limits = c(-xmax, xmax)) +
scale_y_continuous(limits = c(0, ymax)) +
theme
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
gspaMap(
df2 = "diff_thresholds_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = FALSE,
show_sig = pVal,
)
pval_cutoff
logFC_cutoff
log2(1.2)
gspaMap(
df2 = "diff_thresholds_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = FALSE,
show_sig = pVal,
)
gspaMap(
df2 = "diff_thresholds_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = FALSE,
show_sig = pVal,
)
gspaMap(
df2 = "diff_thresholds_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = FALSE,
show_sig = pVal,
)
call_pars
prnGSPA(
impute_na = FALSE,
fml_nms = c("W2_bat", "W2_loc", "W16_vs_W2"),
method = c("mean", "mean", "limma"),
max_size = c(Inf, Inf, 120),
pval_cutoff = c(5E-2),
logFC_cutoff = c(log2(1.2)),
gspval_cutoff = c(5E-2),
gset_nms = c("go_sets", "c2_msig"),
filter_by_npep = exprs(prot_n_pep >= 2),
filter_prots_by_species = exprs(species == "human"),
filename = diff_methods.txt,
)
gspaMap(
df2 = "diff_methods_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 25,
show_labels = FALSE,
show_sig = pVal,
xco = 1.2,
yco = 0.05,
)
prnGSPAHM(
filter2_by = exprs(distance <= .7),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_some_redundancy.png,
)
prnGSPAHM(
filter2_num = exprs(distance <= .95),
filter2_sp = exprs(start_with_str("hs", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
filename = show_more_connectivity.png,
)
prnGSPAHM(
annot_cols = c("ess_idx", "ess_size"),
annot_colnames = c("Eset index", "Size"),
filter2_by = exprs(distance <= .95),
color = colorRampPalette(c("blue", "white", "red"))(100),
filename = custom_colors.png,
)
prnGSPAHM(
df2 = "diff_thresholds_Protein_GSPA_Z_essmap.txt",
fml_nms = "W16_vs_W2",
annot_cols = c("ess_idx", "ess_size"),
annot_colnames = c("Eset index", "Size"),
filter2_by = exprs(distance <= .95),
filename = w16_vs_w2.png,
)
unlink(file.path(dat_dir, "Protein\\GSPA"), recursive = TRUE, force = TRUE)
# prepare GO databases (see also ?prepGO)
prepGO(
species = human,
db_path = "~\\proteoQ\\dbs\\go",
gaf_url = "http://current.geneontology.org/annotations/goa_human.gaf.gz",
obo_url = "http://purl.obolibrary.org/obo/go/go-basic.obo",
filename = go_hs.rds,
)
prepGO(
species = mouse,
db_path = "~\\proteoQ\\dbs\\go",
gaf_url = "http://current.geneontology.org/annotations/mgi.gaf.gz",
obo_url = "http://purl.obolibrary.org/obo/go/go-basic.obo",
filename = go_mm.rds,
)
head(readRDS(file.path("~\\proteoQ\\dbs\\go", "go_hs.rds")))
head(readRDS(file.path("~\\proteoQ\\dbs\\go", "go_mm.rds")))
prnGSPA(
impute_na = FALSE,
fml_nms = c("W2_bat", "W2_loc", "W16_vs_W2"),
pval_cutoff = c(5E-2, 5E-2, 1E-6),
logFC_cutoff = c(log2(1.2)),
gslogFC_cutoff = c(log2(1.2)),
gspval_cutoff = c(5E-2, 5E-2, 1E-4),
max_size = c(Inf, Inf, 120),
gset_nms = c("go_sets"),
filter_by_npep = exprs(prot_n_pep >= 2),
filter_prots_by_species = exprs(species == "human"),
filename = diff_thresholds.txt,
)
prnGSPA(
impute_na = FALSE,
gset_nms = c("go_sets", "c2_msig"),
filter_prots_by_npep = exprs(prot_n_pep >= 2, species == "human"),
filename = cmbn_filters.txt,
)
gspaMap(
df2 = "cmbn_filters_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 10,
show_labels = TRUE,
show_sig = pVal,
)
call_pars
prnGSPA(
impute_na = FALSE,
fml_nms = c("W2_bat", "W2_loc", "W16_vs_W2"),
method = c("mean", "mean", "limma"),
max_size = c(Inf, Inf, 120),
pval_cutoff = c(5E-2),
logFC_cutoff = c(log2(1.2)),
gspval_cutoff = c(5E-2),
gset_nms = c("go_sets", "c2_msig"),
filter_by = exprs(prot_n_pep >= 2, species == "human"),
filename = diff_methods_2.txt,
)
gspaMap(
df2 = "diff_methods_2_Protein_GSPA_Z.txt",
impute_na = FALSE,
topn = 25,
show_labels = FALSE,
show_sig = pVal,
xco = 1.2,
yco = 0.05,
)
# ===================================
# custom GO databases
# ===================================
# start over
unlink(file.path(dat_dir, "Protein\\GSPA"), recursive = TRUE, force = TRUE)
# prepare GO databases (see also ?prepGO)
prepGO(
species = human,
db_path = "~\\proteoQ\\dbs\\go",
gaf_url = "http://current.geneontology.org/annotations/goa_human.gaf.gz",
obo_url = "http://purl.obolibrary.org/obo/go/go-basic.obo",
filename = go_hs.rds,
)
prepGO(
species = mouse,
db_path = "~\\proteoQ\\dbs\\go",
gaf_url = "http://current.geneontology.org/annotations/mgi.gaf.gz",
obo_url = "http://purl.obolibrary.org/obo/go/go-basic.obo",
filename = go_mm.rds,
)
head(readRDS(file.path("~\\proteoQ\\dbs\\go", "go_hs.rds")))
head(readRDS(file.path("~\\proteoQ\\dbs\\go", "go_mm.rds")))
# analysis
prnGSPA(
impute_na = FALSE,
pval_cutoff = 5E-2,
logFC_cutoff = log2(1.2),
gspval_cutoff = 5E-2,
gset_nms = c("~\\proteoQ\\dbs\\go\\go_hs.rds",
"~\\proteoQ\\dbs\\go\\go_mm.rds"),
)
# It is possible that the system "go_sets" may be partially different to the
# custom GO. Be explipit on `gset_nms`; otherwise, the default of `gset_nms =
# c("go_sets", "c2_msig")` will be applied.
gspaMap(
gset_nms = c("~\\proteoQ\\dbs\\go\\go_hs.rds",
"~\\proteoQ\\dbs\\go\\go_mm.rds"),
impute_na = FALSE,
topn = 100,
show_labels = FALSE,
gspval_cutoff = 5E-2,
gslogFC_cutoff = log2(1.2),
show_sig = pVal,
xco = 1.2,
yco = 0.05,
)
# ===================================
# custom MSig databases
# ===================================
# start over
unlink(file.path(dat_dir, "Protein\\GSPA"), recursive = TRUE, force = TRUE)
# prepare MSig databases (see also ?prepMSig)
prepMSig(species = human)
prepMSig(species = mouse)
head(readRDS(file.path("~\\proteoQ\\dbs\\msig", "msig_hs.rds")))
head(readRDS(file.path("~\\proteoQ\\dbs\\msig", "msig_mm.rds")))
# analysis
prnGSPA(
impute_na = FALSE,
pval_cutoff = 5E-2,
logFC_cutoff = log2(1.2),
gspval_cutoff = 5E-2,
gset_nms = c("~\\proteoQ\\dbs\\msig\\msig_hs.rds",
"~\\proteoQ\\dbs\\msig\\msig_mm.rds"),
)
# It is possible that the system "c2_msig" may be partially different to the
# custom databases. Be explipit on `gset_nms`; otherwise, the default of
# `gset_nms = c("go_sets", "c2_msig")` will be applied.
gspaMap(
gset_nms = c("~\\proteoQ\\dbs\\msig\\msig_hs.rds",
"~\\proteoQ\\dbs\\msig\\msig_mm.rds"),
impute_na = FALSE,
topn = 100,
show_labels = FALSE,
gspval_cutoff = 5E-2,
gslogFC_cutoff = log2(1.2),
show_sig = pVal,
xco = 1.2,
yco = 0.05,
)
gspaMap(
gset_nms = c("~\\proteoQ\\dbs\\msig\\msig_hs.rds",
"~\\proteoQ\\dbs\\msig\\msig_mm.rds"),
impute_na = FALSE,
topn = 100,
show_labels = FALSE,
gspval_cutoff = 5E-2,
gslogFC_cutoff = log2(1.2),
show_sig = pVal,
xco = 1.2,
yco = 0.05,
)
gset_nms
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
check_gset_nms
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
gspaMap(
gset_nms = c("~\\proteoQ\\dbs\\msig\\msig_hs.rds",
"~\\proteoQ\\dbs\\msig\\msig_mm.rds"),
impute_na = FALSE,
topn = 100,
show_labels = FALSE,
gspval_cutoff = 5E-2,
gslogFC_cutoff = log2(1.2),
show_sig = pVal,
xco = 1.2,
yco = 0.05,
)
gset_nms
gspaMap(
gset_nms = c("~\\proteoQ\\dbs\\msig\\msig_hs.rds",
"~\\proteoQ\\dbs\\msig\\msig_mm.rds"),
impute_na = FALSE,
topn = 100,
show_labels = FALSE,
gspval_cutoff = 5E-2,
gslogFC_cutoff = log2(1.2),
show_sig = pVal,
xco = 1.2,
yco = 0.05,
)
unlink(file.path("~\\proteoQ\\dbs\\go"), recursive = TRUE, force = TRUE)
unlink(file.path("~\\proteoQ\\dbs\\msig"), recursive = TRUE, force = TRUE)
prnGSPA(
impute_na = FALSE,
pval_cutoff = 5E-2,
logFC_cutoff = log2(1.2),
gspval_cutoff = 5E-2,
gset_nms = c(prepGO(human), prepGO(mouse), prepMSig(human), prepMSig(mouse)),
filename = cmbn.txt,
)
gspaMap(
gset_nms = c(prepGO(human), prepGO(mouse), prepMSig(human), prepMSig(mouse)),
impute_na = FALSE,
topn = 20,
show_labels = FALSE,
show_sig = pVal,
)
gspaMap(
df2 = "cmbn_Protein_GSPA_Z.txt",
gset_nms = c(prepGO(human), prepGO(mouse), prepMSig(human), prepMSig(mouse)),
impute_na = FALSE,
topn = 20,
show_labels = FALSE,
show_sig = pVal,
)
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
unlink(file.path(dat_dir, "Protein\\GSPA"), recursive = TRUE, force = TRUE)
# prepare MSig databases (see also ?prepMSig)
prepMSig(species = human)
prepMSig(species = mouse)
head(readRDS(file.path("~\\proteoQ\\dbs\\msig", "msig_hs.rds")))
head(readRDS(file.path("~\\proteoQ\\dbs\\msig", "msig_mm.rds")))
prnGSPA(
impute_na = FALSE,
gset_nms = c("~\\proteoQ\\dbs\\msig\\msig_hs.rds",
"~\\proteoQ\\dbs\\msig\\msig_mm.rds"),
)
gspaMap(
gset_nms = c("~\\proteoQ\\dbs\\msig\\msig_hs.rds",
"~\\proteoQ\\dbs\\msig\\msig_mm.rds"),
impute_na = FALSE,
topn = 20,
show_sig = pVal,
)
# ===================================
# custom GO databases
# ===================================
# start over
unlink(file.path(dat_dir, "Protein\\GSPA"), recursive = TRUE, force = TRUE)
# prepare GO databases (see also ?prepGO)
prepGO(
species = human,
db_path = "~\\proteoQ\\dbs\\go",
gaf_url = "http://current.geneontology.org/annotations/goa_human.gaf.gz",
obo_url = "http://purl.obolibrary.org/obo/go/go-basic.obo",
filename = go_hs.rds,
)
prepGO(
species = mouse,
db_path = "~\\proteoQ\\dbs\\go",
gaf_url = "http://current.geneontology.org/annotations/mgi.gaf.gz",
obo_url = "http://purl.obolibrary.org/obo/go/go-basic.obo",
filename = go_mm.rds,
)
head(readRDS(file.path("~\\proteoQ\\dbs\\go", "go_hs.rds")))
head(readRDS(file.path("~\\proteoQ\\dbs\\go", "go_mm.rds")))
# analysis
prnGSPA(
impute_na = FALSE,
gset_nms = c("~\\proteoQ\\dbs\\go\\go_hs.rds",
"~\\proteoQ\\dbs\\go\\go_mm.rds"),
)
# It is possible that the system "go_sets" may be partially different to the
# custom GO. Be explipit on `gset_nms`; otherwise, the default of `gset_nms =
# c("go_sets", "c2_msig")` will be applied.
gspaMap(
gset_nms = c("~\\proteoQ\\dbs\\go\\go_hs.rds",
"~\\proteoQ\\dbs\\go\\go_mm.rds"),
impute_na = FALSE,
topn = 20,
show_sig = pVal,
)
foo_combine_codes <- function (filepath = file.path("C:\\Results\\R\\proteoQ\\R")) {
filenames <- dir(filepath, pattern = ".R$")
dir.create(file.path(filepath, "temp"))
purrr::map(file.path(filepath, filenames), readLines) %>%
purrr::reduce(`c`, init = NULL) %>%
writeLines(file.path(filepath, "temp\\all.R"))
}
foo_combine_codes()
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
?prnGSPA
?gspaMap
prnGSPA(
impute_na = FALSE,
pval_cutoff = 5E-2,
logFC_cutoff = log2(1.2),
gspval_cutoff = 5E-2,
gset_nms = c("go_sets"),
)
# filtered by proteins with two or more identifying peptides for visualization
gspaMap(
gspval_cutoff = 5E-3,
gslogFC_cutoff = log2(1.2),
gset_nms = c("go_sets"),
topn = 20,
show_sig = pVal,
show_labels = TRUE,
yco = 0.01,
)
# customized thresholds for the corresponding formulae in `pepSig` or `prnSig()`
# (may be suitable with the examplary differences in `W16_vs_W2` being much greater than `W2_bat`...)
gspaMap(
fml_nms = c("W2_bat", "W2_loc", "W16_vs_W2"),
gspval_cutoff = c(5E-2, 5E-2, 1E-10),
gslogFC_cutoff = log2(1.2),
topn = 20,
show_sig = pVal,
show_labels = TRUE,
yco = 0.05,
)
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
gspaMap(
fml_nms = c("W2_bat", "W2_loc", "W16_vs_W2"),
gspval_cutoff = c(5E-2, 5E-2, 1E-10),
gslogFC_cutoff = log2(1.2),
topn = 20,
show_sig = pVal,
show_labels = TRUE,
yco = 0.05,
)
library(devtools)
setwd("C:\\Results\\R\\proteoQ")
document
document()
warnings()
?prnGSEA
dat_dir <- c("C:\\Results\\Abu_Amer\\002_20190613_uniprot_id_test") # the WORKING directory
load_expts()
prnGSEA(
var_cutoff = 0,
pval_cutoff = 1,
logFC_cutoff = log2(1),
filter_by_sp = exprs(species == "human"),
)
prnGSEA(
var_cutoff = 0.5,
pval_cutoff = 5E-2,
logFC_cutoff = log2(1.2),
filter_by_sp = exprs(species == "human"),
filename = hu_prefil.txt,
)
#
prnGSEA(
var_cutoff = 0.5,
pval_cutoff = 5E-2,
logFC_cutoff = log2(1.2),
filter_by_sp = exprs(species == "human"),
filename = hu_prefil.txt,
)
#
prnGSEA(
var_cutoff = 0.5,
pval_cutoff = 5E-2,
logFC_cutoff = log2(1.2),
filter_by_sp = exprs(species == "human"),
filename = hu_prefil.txt,
)
#
dim(df)
filter_dots
dat_dir
