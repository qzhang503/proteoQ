)
prnHist(
scale_log2r = TRUE,
xmin = -2,
xmax = 2,
ncol = 5
)
scale_log2r = FALSE
pepMDS(
show_ids = TRUE
)
prnMDS(
show_ids = TRUE
)
pepPCA(
show_ids = TRUE
)
prnPCA(
show_ids = TRUE
)
# ---
pepEucDist(
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
# parameters from `pheatmap`
display_numbers = TRUE,
number_color = "grey30",
number_format = "%.1f",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
fontsize = 16,
fontsize_row = 20,
fontsize_col = 20,
fontsize_number = 8,
cluster_rows = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
border_color = "grey60",
cellwidth = 24,
cellheight = 24,
width = 14,
height = 12
)
prnEucDist(
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
# parameters from `pheatmap`
display_numbers = TRUE,
number_color = "grey30",
number_format = "%.1f",
clustering_distance_rows = "euclidean",
clustering_distance_cols = "euclidean",
fontsize = 16,
fontsize_row = 20,
fontsize_col = 20,
fontsize_number = 8,
cluster_rows = TRUE,
show_rownames = TRUE,
show_colnames = TRUE,
border_color = "grey60",
cellwidth = 24,
cellheight = 24,
width = 14,
height = 12
)
pepCorr_logFC()
prnCorr_logFC()
pepCorr_logInt()
prnCorr_logInt()
prnHM(
xmin = -1,
xmax = 1,
xmargin = 0.1,
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
cluster_rows = TRUE,
cutree_rows = 10,
show_rownames = FALSE,
show_colnames = TRUE,
fontsize_row = 3,
cellwidth = 14,
# width = 18,
# height = 12,
)
pepHM(
xmin = -1,
xmax = 1,
xmargin = 0.1,
annot_cols = c("Group", "Peptide_Yield"),
# annot_colnames = c("Group", "Peptide_Yield"),
cluster_rows = TRUE,
cutree_rows = 10,
show_rownames = FALSE,
show_colnames = TRUE,
fontsize_row = 3,
cellwidth = 14,
width = 18,
height = 12
)
anal_prnTrend(
col_order = Order,
n_clust = c(4:5),
)
plot_prnTrend()
plot_prnTrend(filter2_ = exprs(cluster == 4), filename = cl4.png)
library(NMF)
# NMF analysis
anal_pepNMF(
col_group = Group, # optional a priori knowledge of sample groups
impute_na = FALSE,
r = 3,
# nrun = 200,
nrun  = 20,
)
# Consensus heat map
plot_pepNMFCon(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# Coefficient heat map
plot_pepNMFCoef(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# NMF analysis
anal_prnNMF(
col_group = Group, # optional a priori knowledge of sample groups
impute_na = FALSE,
r = c(3:4),
nrun = 20
)
# Consensus heat map
plot_prnNMFCon(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10,
)
# Coefficient heat map
plot_prnNMFCoef(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
width = 10,
height = 10
)
# Metagene heat map(s)
plot_metaNMF(
annot_cols = c("Group"),
annot_colnames = c("Group"),
impute_na = FALSE,
fontsize = 8,
fontsize_col = 5
)
prnGSPA(
impute_na = FALSE,
pval_cutoff = 5E-2,
gset_nm = c("go_sets", "kegg_sets"),
)
gspaMap(
show_labels = TRUE,
gspval_cutoff = 5E-2,
show_sig = pVal,
yco = 0.05,
)
### GSPA distance heat map and network
# human subset
prnGSPAHM(
# filter_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_connectivity_at_large_dist.png,
)
prnGSPAHM(
filter2_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_connectivity_at_large_dist_by_sp.png,
)
prnGSPAHM(
filter2_by = exprs(distance <= .33),
# filter_sp = exprs(start_with_str("mm", term)),
annot_cols = "ess_idx",
annot_colnames = "Eset index",
annot_rows = "ess_size",
filename = show_human_redundancy.png,
)
### GSVA
prnGSVA(
impute_na = FALSE,
min.sz = 10,
verbose = FALSE,
parallel.sz = 0,
mx.diff = TRUE,
gset_nms = "go_sets",
)
### GSEA
prnGSEA(
var_cutoff = 0,
pval_cutoff = 1,
logFC_cutoff = log2(1),
filter_by_sp = exprs(species == "mouse"),
)
### STRING database
string_dir <- "~\\proteoQ\\dbs\\string"
dir.create(string_dir, recursive = TRUE, showWarnings = FALSE)
# download
dl_stringdbs(
species = mouse,
db_path = string_dir,
)
# protein-protein interaction network
anal_prnString(
db_path = string_dir,
score_cutoff = .9,
filter_by_sp = exprs(species == "mouse"),
filter_prots_by = exprs(prot_n_pep >= 2),
filename = "prot_npep2.csv",
)
prepGO(human)
prepGO(mouse)
prepMSig()
head(readRDS(file.path("~\\proteoQ\\dbs\\msig\\msig_hs.rds")))
cat("The following RAW MS file name(s) missing from the `experimental summary` and/or `fraction summary` files are required:\n")
cat("Required RAW MS file name(s) not found from the `expt_smry.xlsx` and/or `frac_smry.xlsx`:\n")
cat("RAW MS files in `expt_smry.xlsx` and/or `frac_smry.xlsx` but not present in PSM data:\n")
stop("Check file names under the RAW_File column in `expt_smry.xlsx` and/or `frac_smry.xlsx`.",
call. = FALSE)
stop("Check file names under the `RAW_File` column in `expt_smry.xlsx` and/or `frac_smry.xlsx`.",
call. = FALSE)
devtools::document("C:\\Results\\R\\proteoQ")
devtools::install("C:\\Results\\R\\proteoQ")
library(proteoQ)
dat_dir <- "C:\\Results\\Mutch\\R394"
load_expts(dat_dir)
proteo_hm(
df = TKL_delta.txt,
id = gene,
df_meta = hm_meta.xlsx,
sample_ids = c("Delta_006", "Delta_007", "Delta_008", "Delta_012"),
filepath = file.path(dat_dir, "Protein\\Heatmap"),
filename = "tkl_delta.png",
complete_cases = FALSE,
annot_cols = NULL,
annot_colnames = NULL,
annot_rows = c("kin_class"),
cluster_rows = FALSE,
xmin = -1,
xmax = 1,
xmargin = .1,
cellheight = 5,
cellwidth = 5,
fontsize_row = 4,
fontsize_col = 4,
fontsize = 4,
dpi = 1200,
# width = 3,
# height = 16,
arrange2_by = exprs(kin_class, gene),
)
proteo_hm(
df = TK_delta.txt,
id = gene,
df_meta = hm_meta.xlsx,
sample_ids = c("Delta_006", "Delta_007", "Delta_008", "Delta_012"),
filepath = file.path(dat_dir, "Protein\\Heatmap"),
filename = "tk_delta.png",
complete_cases = FALSE,
annot_cols = NULL,
annot_colnames = NULL,
annot_rows = c("kin_class"),
cluster_rows = FALSE,
xmin = -1,
xmax = 1,
xmargin = .1,
cellheight = 5,
cellwidth = 5,
fontsize_row = 4,
fontsize_col = 4,
fontsize = 4,
# width = 3,
# height = 16,
arrange2_by = exprs(kin_class, gene),
dpi = 1200,
)
?pheatmap
proteo_hm(
df = TK_delta.txt,
id = gene,
df_meta = hm_meta.xlsx,
sample_ids = c("Delta_006", "Delta_007", "Delta_008", "Delta_012"),
filepath = file.path(dat_dir, "Protein\\Heatmap"),
filename = "tk_delta.tiff",
complete_cases = FALSE,
annot_cols = NULL,
annot_colnames = NULL,
annot_rows = c("kin_class"),
cluster_rows = FALSE,
xmin = -1,
xmax = 1,
xmargin = .1,
cellheight = 5,
cellwidth = 5,
fontsize_row = 4,
fontsize_col = 4,
fontsize = 4,
# width = 3,
# height = 16,
arrange2_by = exprs(kin_class, gene),
)
proteo_hm(
df = TK_delta.txt,
id = gene,
df_meta = hm_meta.xlsx,
sample_ids = c("Delta_006", "Delta_007", "Delta_008", "Delta_012"),
filepath = file.path(dat_dir, "Protein\\Heatmap"),
filename = "tk_delta.pdf",
complete_cases = FALSE,
annot_cols = NULL,
annot_colnames = NULL,
annot_rows = c("kin_class"),
cluster_rows = FALSE,
xmin = -1,
xmax = 1,
xmargin = .1,
cellheight = 5,
cellwidth = 5,
fontsize_row = 4,
fontsize_col = 4,
fontsize = 4,
# width = 3,
# height = 16,
arrange2_by = exprs(kin_class, gene),
)
library(proteoQ)
# devtools::document(pkg  = "C:\\Results\\R\\proteoq")
dat_dir <- "C:\\Results\\Semenkovich\\038"
load_expts(dat_dir)
load_expts()
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
# filename = pnnl_ord.png
)
# protein logFC, WHIM2 subset with supervision
prnCorr_logFC(
# col_select = W2,
col_order = Group,
# filename = w2_ord.png,
)
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
# filename = pnnl_ord.png
)
# protein logFC, WHIM2 subset with supervision
prnCorr_logFC(
# col_select = W2,
col_order = Group,
# filename = w2_ord.png,
)
dat_dir
prnCorr_logFC(
# col_select = W2,
col_order = Order,
scale_log2r = FALSE,
# filename = w2_ord.png,
)
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = FALSE,
# filename = pnnl_ord.png
)
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = T,
# filename = pnnl_ord.png
)
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = T,
# filename = pnnl_ord.png
)
p2
?ggcorr
head(df)
temp1 = corr(df)
temp1 = cor(df)
View(temp1)
?cor
cor(df[,1], df[,2])
cor(df[,1], df[,2], na.rm = T)
cor(df)
var(df)
var(df, na.rm = T)
assign("p2", p2, envir = .GlobalEnv)
p1
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = F,
# filename = pnnl_ord.png
)
p2
head(df)
scale_log2r
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = F,
# filename = pnnl_ord.png
)
force(scale_log2r)
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = F,
# filename = pnnl_ord.png
)
my_complete_cases
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = T,
# filename = pnnl_ord.png
)
force(scale_log2r)
complete_cases
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = T,
# filename = pnnl_ord.png
)
assign("dft", df, envir = .GlobalEnv)
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = F,
# filename = pnnl_ord.png
)
assign("dff", df, envir = .GlobalEnv)
View(dff)
View(dft)
rt = ggcorr(dft, label = TRUE, label_round = 2)
rt
rf = ggcorr(dff, label = TRUE, label_round = 2)
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = FALSE,
# filename = pnnl_ord.png
)
pepCorr_logFC(
# col_select = PNNL,
col_order = Order,
scale_log2r = TRUE,
# filename = pnnl_ord.png
)
devtools::document(pkg  = "C:\\Results\\R\\proteoq")
?pairs
library(proteoQ)
?prepGO
?prepMSig
?Uni2Entrez
?Ref2Entrez
?load_expts
foo_combine_codes <- function (filepath = file.path("C:\\Results\\R\\proteoQ\\R")) {
filenames <- dir(filepath, pattern = ".R$")
dir.create(file.path(filepath, "temp"))
purrr::map(file.path(filepath, filenames), readLines) %>%
purrr::reduce(`c`, init = NULL) %>%
writeLines(file.path(filepath, "temp\\all.R"))
}
library(magrittr)
foo_combine_codes()
foo_combine_codes()
getwd()
devtools::install(pkg  = "C:\\Results\\R\\proteoq")
devtools::install(pkg  = "C:\\Results\\R\\proteoq")
install.packages("fs")
devtools::install(pkg  = "C:\\Results\\R\\proteoq")
?interactive
library(devtools)
setwd("C:\\Results\\R\\proteoQ")
document()
install()
check()
library(usethis)
use_build_ignore("READMD.Rmd")
use_build_ignore(".Rproj")
library(remotes)
lsf.str("remotes")
lsf.str("package:remotes")
funs <- as.character(lsf.str("package:remotes"))
grep("^install_.+", funs, value = TRUE)
document()
.libPaths
.libPaths()
